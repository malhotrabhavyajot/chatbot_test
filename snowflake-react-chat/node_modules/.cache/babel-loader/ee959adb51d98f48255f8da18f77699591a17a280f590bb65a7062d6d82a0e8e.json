{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// HARDCODED instant answers for specific key queries (bypass clarify/Snowflake)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE, LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\n\n// HARDCODED suggestions (shown when not in clarification mode)\nconst HARDCODED_SUGGESTIONS = [\"Which universes do we show in Accounts calculation?\", \"Where can I find TRX Sales trends overtime?\", \"Where can I find top 10 Gainer Prescriber over time?\", \"What is Formulary Status?\", \"What are the number of current monthly suggestion KPIs?\", \"Which dossier gives a detailed analysis about the Payors?\", \"Where can I find explanations about different KPIs?\", \"What is MKT % LIS?\", \"Are any physicians' sales dropped at a geo level?\"];\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    const columns = json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name) || json.rowType && json.rowType.map(col => col.name) || json.rowtype && json.rowtype.map(col => col.name) || json.columns && json.columns.map(col => col.name);\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return {\n      type: \"error\",\n      value: \"❌ Error: \" + json.error\n    };\n    if (json.code && json.code !== \"000000\" && (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))) {\n      return {\n        type: \"error\",\n        value: `❌ Error: ${json.code} - ${json.message}`\n      };\n    }\n    if (json.message) return {\n      type: \"output\",\n      value: json.message\n    };\n    return {\n      type: \"output\",\n      value: \"No data found.\"\n    };\n  } catch {\n    return {\n      type: \"error\",\n      value: responseText || \"No response from backend.\"\n    };\n  }\n}\nfunction extractSQLBlock(text) {\n  const match = text && text.match(/```sql\\s*([\\s\\S]*?)```/i);\n  return match ? match[1].trim() : null;\n}\nfunction TypingIndicator() {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"typing-indicator\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_c = TypingIndicator;\nconst Tooltip = ({\n  children,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"feedback-tooltip\",\n  children: [children, /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"feedback-tooltiptext\",\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 77,\n  columnNumber: 3\n}, this);\n_c2 = Tooltip;\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{\n      role: 'assistant',\n      text: 'Hello 👋! How may I assist you?'\n    }];\n  });\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({\n    message: '',\n    type: 'info',\n    visible: false\n  });\n  const [isTyping, setIsTyping] = useState(false);\n\n  // Conversational clarification state\n  const [showClarifySuggestions, setShowClarifySuggestions] = useState(false);\n  const [clarifySuggestions, setClarifySuggestions] = useState([]);\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Suggestion randomizer for clear chat (rotates HARDCODED_SUGGESTIONS)\n  const randomizeSuggestions = () => {\n    let newIndex = Math.floor(Math.random() * HARDCODED_SUGGESTIONS.length);\n    if (HARDCODED_SUGGESTIONS.length > 1 && newIndex === suggestionIndex) {\n      newIndex = (newIndex + 1) % HARDCODED_SUGGESTIONS.length;\n    }\n    setSuggestionIndex(newIndex);\n    localStorage.setItem('suggestionIndex', newIndex.toString());\n  };\n\n  // How many suggestions to show\n  const numSuggestions = isExpanded ? 4 : 2;\n  const visibleSuggestions = Array(numSuggestions).fill(0).map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollTo({\n      top: chatRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [messages, isTyping, isOpen, isExpanded, showClarifySuggestions]);\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({\n          ...t,\n          visible: false\n        }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n  const showToast = (msg, type) => {\n    setToast({\n      message: msg,\n      type: type,\n      visible: true\n    });\n  };\n\n  // === MAIN CLARIFY-THEN-SNOWFLAKE LOGIC ===\n  const handleSendMessage = async (userMessage, fromSuggestion = false) => {\n    if (!userMessage || typeof userMessage !== \"string\" || !userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // HARDCODED ANSWERS - instant, no API\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      setIsTyping(false);\n      const updatedMessages = [...messages, {\n        role: 'user',\n        text: userMessage\n      }, {\n        role: 'assistant',\n        text: HARDCODED_ANSWERS[matchedKey]\n      }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      setShowClarifySuggestions(false);\n      setClarifySuggestions([]);\n      return;\n    }\n\n    // Step 1: Get clarification suggestions from OpenAI (conversational mode)\n    if (!showClarifySuggestions) {\n      const updatedMessages = [...messages, {\n        role: 'user',\n        text: userMessage\n      }];\n      setMessages(updatedMessages);\n      const response = await fetch('http://localhost:4000/api/clarify', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userMessage\n        })\n      });\n      const {\n        assistant_message,\n        suggestions\n      } = await response.json();\n      if (suggestions && suggestions.length > 0) {\n        setIsTyping(false);\n        setShowClarifySuggestions(true);\n        setClarifySuggestions(suggestions);\n        setMessages([...updatedMessages, {\n          role: 'assistant',\n          text: assistant_message\n        }]);\n        return;\n      }\n      setIsTyping(false);\n      setMessages([...updatedMessages, {\n        role: 'assistant',\n        text: assistant_message || \"Could you clarify your query?\"\n      }]);\n      return;\n    }\n\n    // Step 2: If suggestion/clarification is selected, treat it as the final query\n    setShowClarifySuggestions(false);\n    setClarifySuggestions([]);\n    setMessages(prev => [...prev, {\n      role: 'user',\n      text: userMessage\n    }]);\n    handleSnowflakeQuery(userMessage);\n  };\n  const handleClarifySuggestion = suggestionText => {\n    if (!suggestionText || typeof suggestionText !== \"string\" || !suggestionText.trim()) return;\n    handleSendMessage(suggestionText, true);\n  };\n\n  // === CALL SNOWFLAKE with CUSTOM_AGENT2 ===\n  const handleSnowflakeQuery = async queryText => {\n    setIsTyping(true);\n    let sql = extractSQLBlock(queryText) || queryText;\n    let body = {\n      statement: `CALL CUSTOM_AGENT2('${sql.replace(/'/g, \"''\")}')`\n    };\n    const response = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    const responseText = await response.text();\n    const formatted = formatSnowflakeResponse(responseText);\n    setIsTyping(false);\n    setMessages(prev => [...prev, {\n      role: \"assistant\",\n      text: \"Fetching results from Snowflake...\"\n    }, {\n      role: \"assistant\",\n      text: formatted\n    }]);\n  };\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({\n      ...prev,\n      [idx]: type\n    }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n  const toggleTheme = () => setDarkMode(prev => !prev);\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n    showToast('Copied to clipboard!', 'success');\n  };\n\n  // --- UPDATED: renderChatBubbleContent, cleanly handle CUSTOM_AGENT2 output ---\n  const renderChatBubbleContent = msg => {\n    if (typeof msg.text === \"string\" && msg.text.startsWith(\"CUSTOM_AGENT2\")) {\n      const match = msg.text.match(/CUSTOM_AGENT2\\s*({[\\s\\S]+})/);\n      if (match) {\n        try {\n          const obj = JSON.parse(match[1]);\n          if (obj && obj.output) return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: obj.output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 41\n          }, this);\n        } catch (e) {\n          return /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              color: \"#b91c1c\"\n            },\n            children: \"Invalid agent output format\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 18\n          }, this);\n        }\n      }\n    }\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"snowflake-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: obj.columns.map((h, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: h\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 44\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: obj.data.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: obj.columns.length,\n                style: {\n                  textAlign: 'center',\n                  color: '#888'\n                },\n                children: \"(no results)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this) : obj.data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.map((cell, cidx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  whiteSpace: 'pre-wrap',\n                  fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                },\n                children: (() => {\n                  try {\n                    if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                      const parsed = JSON.parse(cell);\n                      if (Array.isArray(parsed)) {\n                        return /*#__PURE__*/_jsxDEV(\"ul\", {\n                          style: {\n                            paddingLeft: '18px',\n                            margin: 0\n                          },\n                          children: parsed.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: item\n                          }, idx, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 285,\n                            columnNumber: 62\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 284,\n                          columnNumber: 33\n                        }, this);\n                      }\n                      if (typeof parsed === 'object') {\n                        return /*#__PURE__*/_jsxDEV(\"pre\", {\n                          children: JSON.stringify(parsed, null, 2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 290,\n                          columnNumber: 38\n                        }, this);\n                      }\n                    }\n                    return cell;\n                  } catch {\n                    return cell;\n                  }\n                })()\n              }, cidx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this))\n            }, ridx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this);\n      }\n      if (obj.type === \"output\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 16\n        }, this);\n      }\n      if (obj.type === \"error\") {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#b91c1c\",\n            fontWeight: 500\n          },\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 16\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(obj.value, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 14\n      }, this);\n    }\n\n    // SQL/code blocks\n    if (typeof msg.text === \"string\") {\n      const sqlBlock = extractSQLBlock(msg.text);\n      if (sqlBlock) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assistant-output-block\",\n          style: {\n            position: 'relative',\n            marginBottom: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 600,\n              marginBottom: 8\n            },\n            children: \"Snowflake SQL Query:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"assistant-sql-block\",\n            style: {\n              marginBottom: 8,\n              borderRadius: 12,\n              background: '#f5f2fd',\n              padding: 15,\n              fontSize: 14,\n              overflowX: 'auto'\n            },\n            children: sqlBlock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              border: 'none',\n              background: '#ede7fa',\n              borderRadius: 7,\n              padding: '3px 10px',\n              fontSize: 13,\n              color: '#5233c0',\n              cursor: 'pointer'\n            },\n            onClick: () => handleCopy(sqlBlock),\n            title: \"Copy SQL\",\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#444',\n              marginTop: 10,\n              fontSize: 14\n            },\n            children: msg.text.replace(/```sql[\\s\\S]*?```/i, '').trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this);\n      }\n    }\n    return (msg.text || \"\").split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: line\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Show clarify quick replies and allow custom input only during clarify\n  const renderClarifySuggestions = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clarify-suggestion-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions\",\n      children: clarifySuggestions.map((sugg, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"suggestion-button\",\n        onClick: () => handleClarifySuggestion(sugg),\n        children: sugg\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clarify-custom-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"chat-input-textarea\",\n        placeholder: \"Or type your own...\",\n        style: {\n          width: '100%',\n          minWidth: 0,\n          maxWidth: '100%'\n        },\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input, true),\n        disabled: isTyping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `send-button${input.trim() ? \" has-text\" : \"\"}`,\n        onClick: () => handleSendMessage(input, true),\n        disabled: isTyping || !input.trim(),\n        style: {\n          marginLeft: 6\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          height: \"22\",\n          width: \"22\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          style: {\n            display: \"block\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M4 20L20 12L4 4V10L16 12L4 14V20Z\",\n            fill: \"currentColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this);\n\n  // Show static suggestions when not clarifying\n  const renderHardcodedSuggestions = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suggestions\",\n    style: {\n      position: \"relative\"\n    },\n    children: [visibleSuggestions.map((s, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSendMessage(s, true),\n      className: \"suggestion-button\",\n      children: s\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }, this)), !isExpanded && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"suggestion-arrow right\",\n      \"aria-label\": \"Next suggestions\",\n      onClick: () => {\n        const max = HARDCODED_SUGGESTIONS.length;\n        setSuggestionIndex(prev => (prev + 1) % max);\n        localStorage.setItem(\"suggestionIndex\", ((suggestionIndex + 1) % max).toString());\n      },\n      style: {\n        border: \"none\",\n        background: \"none\",\n        cursor: \"pointer\",\n        fontSize: 20,\n        marginLeft: 7,\n        color: \"#7c3aed\",\n        alignSelf: \"center\",\n        height: 28,\n        width: 28\n      },\n      children: \"\\u2192\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggler modern-toggler\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Toggle chatbot\",\n      style: {\n        position: 'fixed',\n        right: '20px',\n        bottom: '20px',\n        zIndex: 10000\n      },\n      children: isOpen ? '✖' : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ChatbotIcon,\n        alt: \"Chatbot\",\n        style: {\n          width: 48,\n          height: 48\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot modern-chatbot` + (darkMode ? ' dark-mode' : '') + (isExpanded ? ' expanded' : ' collapsed'),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-title\",\n          children: [\"Field Insights\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header-title-gradient\",\n            children: \" Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleTheme,\n              title: \"Toggle theme\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Toggle theme\",\n              children: darkMode ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"5\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                  stroke: \"#7c3aed\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"2\",\n                    x2: \"12\",\n                    y2: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"19\",\n                    x2: \"12\",\n                    y2: \"22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"4.22\",\n                    x2: \"6.34\",\n                    y2: \"6.34\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"17.66\",\n                    x2: \"19.78\",\n                    y2: \"19.78\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"2\",\n                    y1: \"12\",\n                    x2: \"5\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"19\",\n                    y1: \"12\",\n                    x2: \"22\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"19.78\",\n                    x2: \"6.34\",\n                    y2: \"17.66\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"6.34\",\n                    x2: \"19.78\",\n                    y2: \"4.22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                randomizeSuggestions();\n                setMessages([{\n                  role: 'assistant',\n                  text: 'Hello 👋! How may I assist you?'\n                }]);\n                localStorage.removeItem('chatMessages');\n                setFeedback({});\n              },\n              title: \"Clear chat\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Clear chat\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsExpanded(prev => !prev),\n              title: isExpanded ? 'Collapse window' : 'Expand window',\n              className: \"header-action-btn\",\n              \"aria-label\": isExpanded ? 'Collapse window' : 'Expand window',\n              children: isExpanded ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"8 3 3 3 3 8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"3\",\n                  x2: \"10\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"16 21 21 21 21 16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"21\",\n                  x2: \"14\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"15 3 21 3 21 9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"3\",\n                  x2: \"14\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"9 21 3 21 3 15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"21\",\n                  x2: \"10\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chatbox\",\n        ref: chatRef,\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n          style: {\n            justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-bubble ${msg.role}`,\n            children: renderChatBubbleContent(msg)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 17\n          }, this), msg.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-row\",\n            children: [feedback[idx] === undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'up'),\n                  \"aria-label\": \"Thumbs up\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as not helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'down'),\n                  \"aria-label\": \"Thumbs down\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true), feedback[idx] === 'up' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as helpful!\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected up\",\n                \"aria-label\": \"Thumbs up\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 23\n            }, this), feedback[idx] === 'down' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as not helpful\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected down\",\n                \"aria-label\": \"Thumbs down\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 15\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chat incoming\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bubble assistant\",\n            children: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this), showClarifySuggestions && renderClarifySuggestions(), !showClarifySuggestions && renderHardcodedSuggestions(), !showClarifySuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: inputRef,\n          placeholder: \"Ask me anything...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input),\n          rows: 1,\n          className: \"chat-input-textarea\",\n          style: {\n            overflow: 'hidden',\n            resize: 'none'\n          },\n          disabled: isTyping\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSendMessage(input),\n          title: \"Send message\",\n          className: `send-button${input.trim() ? \" has-text\" : \"\"}`,\n          disabled: isTyping,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            height: \"22\",\n            width: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            style: {\n              display: \"block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M4 20L20 12L4 4V10L16 12L4 14V20Z\",\n              fill: \"currentColor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 13\n      }, this), toast.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toast toast-${toast.type}`,\n        onClick: () => setToast(t => ({\n          ...t,\n          visible: false\n        })),\n        style: {\n          cursor: 'pointer'\n        },\n        children: toast.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chatbot-footer\",\n        children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ZSIcon,\n          alt: \"ZS Associates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 438,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"PFq1P6pp3ng4OPiObPLlLwQMV4Q=\");\n_c3 = ChatBot;\nexport default ChatBot;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TypingIndicator\");\n$RefreshReg$(_c2, \"Tooltip\");\n$RefreshReg$(_c3, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotIcon","ZSIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","HARDCODED_ANSWERS","HARDCODED_SUGGESTIONS","formatSnowflakeResponse","responseText","json","JSON","parse","columns","resultSetMetaData","rowType","map","col","name","rowtype","data","Array","isArray","length","type","error","value","code","message","toLowerCase","includes","extractSQLBlock","text","match","trim","TypingIndicator","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Tooltip","_c2","ChatBot","_s","messages","setMessages","saved","localStorage","getItem","role","feedback","setFeedback","suggestionIndex","setSuggestionIndex","stored","parseInt","input","setInput","isOpen","setIsOpen","darkMode","setDarkMode","isExpanded","setIsExpanded","toast","setToast","visible","isTyping","setIsTyping","showClarifySuggestions","setShowClarifySuggestions","clarifySuggestions","setClarifySuggestions","chatRef","inputRef","randomizeSuggestions","newIndex","Math","floor","random","setItem","toString","numSuggestions","visibleSuggestions","fill","_","i","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","scrollLeft","timer","setTimeout","t","clearTimeout","showToast","msg","handleSendMessage","userMessage","fromSuggestion","cleaned","matchedKey","Object","keys","find","k","updatedMessages","stringify","response","fetch","method","headers","body","assistant_message","suggestions","prev","handleSnowflakeQuery","handleClarifySuggestion","suggestionText","queryText","sql","statement","replace","formatted","handleFeedback","idx","toggleTheme","handleCopy","navigator","clipboard","writeText","renderChatBubbleContent","startsWith","obj","output","e","style","color","h","colSpan","textAlign","row","ridx","cell","cidx","whiteSpace","fontFamily","undefined","parsed","paddingLeft","margin","item","fontWeight","sqlBlock","position","marginBottom","borderRadius","background","padding","fontSize","overflowX","right","border","cursor","onClick","title","marginTop","split","line","renderClarifySuggestions","sugg","placeholder","width","minWidth","maxWidth","onChange","target","onKeyDown","key","shiftKey","disabled","marginLeft","height","viewBox","display","d","renderHardcodedSuggestions","s","max","alignSelf","minHeight","bottom","zIndex","src","alt","cx","cy","r","stroke","strokeWidth","x1","y1","x2","y2","removeItem","strokeLinecap","strokeLinejoin","points","ref","justifyContent","tabIndex","rows","overflow","resize","_c3","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// HARDCODED instant answers for specific key queries (bypass clarify/Snowflake)\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE, LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\n\n// HARDCODED suggestions (shown when not in clarification mode)\nconst HARDCODED_SUGGESTIONS = [\n  \"Which universes do we show in Accounts calculation?\",\n  \"Where can I find TRX Sales trends overtime?\",\n  \"Where can I find top 10 Gainer Prescriber over time?\",\n  \"What is Formulary Status?\",\n  \"What are the number of current monthly suggestion KPIs?\",\n  \"Which dossier gives a detailed analysis about the Payors?\",\n  \"Where can I find explanations about different KPIs?\",\n  \"What is MKT % LIS?\",\n  \"Are any physicians' sales dropped at a geo level?\"\n];\n\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    const columns =\n      (json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name)) ||\n      (json.rowType && json.rowType.map(col => col.name)) ||\n      (json.rowtype && json.rowtype.map(col => col.name)) ||\n      (json.columns && json.columns.map(col => col.name));\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return { type: \"error\", value: \"❌ Error: \" + json.error };\n    if (\n      json.code &&\n      json.code !== \"000000\" &&\n      (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))\n    ) {\n      return { type: \"error\", value: `❌ Error: ${json.code} - ${json.message}` };\n    }\n    if (json.message) return { type: \"output\", value: json.message };\n    return { type: \"output\", value: \"No data found.\" };\n  } catch {\n    return { type: \"error\", value: responseText || \"No response from backend.\" };\n  }\n}\n\nfunction extractSQLBlock(text) {\n  const match = text && text.match(/```sql\\s*([\\s\\S]*?)```/i);\n  return match ? match[1].trim() : null;\n}\n\nfunction TypingIndicator() {\n  return (\n    <span className=\"typing-indicator\">\n      <span></span><span></span><span></span>\n    </span>\n  );\n}\n\nconst Tooltip = ({ children, text }) => (\n  <span className=\"feedback-tooltip\">\n    {children}\n    <span className=\"feedback-tooltiptext\">{text}</span>\n  </span>\n);\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }];\n  });\n\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({ message: '', type: 'info', visible: false });\n  const [isTyping, setIsTyping] = useState(false);\n\n  // Conversational clarification state\n  const [showClarifySuggestions, setShowClarifySuggestions] = useState(false);\n  const [clarifySuggestions, setClarifySuggestions] = useState([]);\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Suggestion randomizer for clear chat (rotates HARDCODED_SUGGESTIONS)\n  const randomizeSuggestions = () => {\n    let newIndex = Math.floor(Math.random() * HARDCODED_SUGGESTIONS.length);\n    if (HARDCODED_SUGGESTIONS.length > 1 && newIndex === suggestionIndex) {\n      newIndex = (newIndex + 1) % HARDCODED_SUGGESTIONS.length;\n    }\n    setSuggestionIndex(newIndex);\n    localStorage.setItem('suggestionIndex', newIndex.toString());\n  };\n\n  // How many suggestions to show\n  const numSuggestions = isExpanded ? 4 : 2;\n  const visibleSuggestions = Array(numSuggestions)\n    .fill(0)\n    .map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n\n  useEffect(() => {\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\n  }, [messages, isTyping, isOpen, isExpanded, showClarifySuggestions]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({ ...t, visible: false }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n\n  const showToast = (msg, type) => {\n    setToast({ message: msg, type: type, visible: true });\n  };\n\n  // === MAIN CLARIFY-THEN-SNOWFLAKE LOGIC ===\n  const handleSendMessage = async (userMessage, fromSuggestion = false) => {\n    if (!userMessage || typeof userMessage !== \"string\" || !userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // HARDCODED ANSWERS - instant, no API\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      setIsTyping(false);\n      const updatedMessages = [...messages, { role: 'user', text: userMessage }, { role: 'assistant', text: HARDCODED_ANSWERS[matchedKey] }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      setShowClarifySuggestions(false);\n      setClarifySuggestions([]);\n      return;\n    }\n\n    // Step 1: Get clarification suggestions from OpenAI (conversational mode)\n    if (!showClarifySuggestions) {\n      const updatedMessages = [...messages, { role: 'user', text: userMessage }];\n      setMessages(updatedMessages);\n      const response = await fetch('http://localhost:4000/api/clarify', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userMessage })\n      });\n      const { assistant_message, suggestions } = await response.json();\n\n      if (suggestions && suggestions.length > 0) {\n        setIsTyping(false);\n        setShowClarifySuggestions(true);\n        setClarifySuggestions(suggestions);\n        setMessages([\n          ...updatedMessages,\n          { role: 'assistant', text: assistant_message }\n        ]);\n        return;\n      }\n      setIsTyping(false);\n      setMessages([\n        ...updatedMessages,\n        { role: 'assistant', text: assistant_message || \"Could you clarify your query?\" }\n      ]);\n      return;\n    }\n\n    // Step 2: If suggestion/clarification is selected, treat it as the final query\n    setShowClarifySuggestions(false);\n    setClarifySuggestions([]);\n    setMessages(prev => [...prev, { role: 'user', text: userMessage }]);\n    handleSnowflakeQuery(userMessage);\n  };\n\n  const handleClarifySuggestion = (suggestionText) => {\n    if (!suggestionText || typeof suggestionText !== \"string\" || !suggestionText.trim()) return;\n    handleSendMessage(suggestionText, true);\n  };\n\n  // === CALL SNOWFLAKE with CUSTOM_AGENT2 ===\n  const handleSnowflakeQuery = async (queryText) => {\n    setIsTyping(true);\n\n    let sql = extractSQLBlock(queryText) || queryText;\n    let body = { statement: `CALL CUSTOM_AGENT2('${sql.replace(/'/g, \"''\")}')` };\n\n    const response = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    });\n    const responseText = await response.text();\n    const formatted = formatSnowflakeResponse(responseText);\n\n    setIsTyping(false);\n    setMessages(prev => [\n      ...prev,\n      { role: \"assistant\", text: \"Fetching results from Snowflake...\" },\n      { role: \"assistant\", text: formatted }\n    ]);\n  };\n\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({ ...prev, [idx]: type }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text);\n    showToast('Copied to clipboard!', 'success');\n  };\n\n  // --- UPDATED: renderChatBubbleContent, cleanly handle CUSTOM_AGENT2 output ---\n  const renderChatBubbleContent = (msg) => {\n    if (typeof msg.text === \"string\" && msg.text.startsWith(\"CUSTOM_AGENT2\")) {\n      const match = msg.text.match(/CUSTOM_AGENT2\\s*({[\\s\\S]+})/);\n      if (match) {\n        try {\n          const obj = JSON.parse(match[1]);\n          if (obj && obj.output) return <div>{obj.output}</div>;\n        } catch (e) {\n          return <pre style={{ color: \"#b91c1c\" }}>Invalid agent output format</pre>;\n        }\n      }\n    }\n\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return (\n          <table className=\"snowflake-table\">\n            <thead>\n              <tr>\n                {obj.columns.map((h, i) => <th key={i}>{h}</th>)}\n              </tr>\n            </thead>\n            <tbody>\n              {obj.data.length === 0 ? (\n                <tr>\n                  <td colSpan={obj.columns.length} style={{ textAlign: 'center', color: '#888' }}>(no results)</td>\n                </tr>\n              ) : obj.data.map((row, ridx) => (\n                <tr key={ridx}>\n                  {row.map((cell, cidx) => (\n                    <td key={cidx} style={{\n                      whiteSpace: 'pre-wrap',\n                      fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                    }}>\n                      {(() => {\n                        try {\n                          if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                            const parsed = JSON.parse(cell);\n                            if (Array.isArray(parsed)) {\n                              return (\n                                <ul style={{ paddingLeft: '18px', margin: 0 }}>\n                                  {parsed.map((item, idx) => <li key={idx}>{item}</li>)}\n                                </ul>\n                              );\n                            }\n                            if (typeof parsed === 'object') {\n                              return <pre>{JSON.stringify(parsed, null, 2)}</pre>;\n                            }\n                          }\n                          return cell;\n                        } catch {\n                          return cell;\n                        }\n                      })()}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        );\n      }\n      if (obj.type === \"output\") {\n        return <div>{obj.value}</div>;\n      }\n      if (obj.type === \"error\") {\n        return <span style={{ color: \"#b91c1c\", fontWeight: 500 }}>{obj.value}</span>;\n      }\n      return <pre>{JSON.stringify(obj.value, null, 2)}</pre>;\n    }\n\n    // SQL/code blocks\n    if (typeof msg.text === \"string\") {\n      const sqlBlock = extractSQLBlock(msg.text);\n      if (sqlBlock) {\n        return (\n          <div className=\"assistant-output-block\" style={{ position: 'relative', marginBottom: 6 }}>\n            <div style={{ fontWeight: 600, marginBottom: 8 }}>Snowflake SQL Query:</div>\n            <pre className=\"assistant-sql-block\" style={{\n              marginBottom: 8,\n              borderRadius: 12,\n              background: '#f5f2fd',\n              padding: 15,\n              fontSize: 14,\n              overflowX: 'auto'\n            }}>{sqlBlock}</pre>\n            <button\n              style={{\n                position: 'absolute',\n                top: 8,\n                right: 8,\n                border: 'none',\n                background: '#ede7fa',\n                borderRadius: 7,\n                padding: '3px 10px',\n                fontSize: 13,\n                color: '#5233c0',\n                cursor: 'pointer'\n              }}\n              onClick={() => handleCopy(sqlBlock)}\n              title=\"Copy SQL\"\n            >\n              Copy\n            </button>\n            <div style={{ color: '#444', marginTop: 10, fontSize: 14 }}>\n              {msg.text.replace(/```sql[\\s\\S]*?```/i, '').trim()}\n            </div>\n          </div>\n        );\n      }\n    }\n    return (msg.text || \"\").split('\\n').map((line, i) => (\n      <div key={i}>{line}</div>\n    ));\n  };\n\n  // Show clarify quick replies and allow custom input only during clarify\n  const renderClarifySuggestions = () => (\n    <div className=\"clarify-suggestion-block\">\n      <div className=\"suggestions\">\n        {clarifySuggestions.map((sugg, idx) => (\n          <button\n            key={idx}\n            className=\"suggestion-button\"\n            onClick={() => handleClarifySuggestion(sugg)}\n          >{sugg}</button>\n        ))}\n      </div>\n      <div className=\"clarify-custom-input\">\n        <input\n          type=\"text\"\n          className=\"chat-input-textarea\"\n          placeholder=\"Or type your own...\"\n          style={{ width: '100%', minWidth: 0, maxWidth: '100%' }}\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          onKeyDown={e => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input, true)}\n          disabled={isTyping}\n        />\n        <button\n          className={`send-button${input.trim() ? \" has-text\" : \"\"}`}\n          onClick={() => handleSendMessage(input, true)}\n          disabled={isTyping || !input.trim()}\n          style={{ marginLeft: 6 }}\n        >\n          <svg height=\"22\" width=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ display: \"block\" }}>\n            <path d=\"M4 20L20 12L4 4V10L16 12L4 14V20Z\" fill=\"currentColor\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n\n  // Show static suggestions when not clarifying\n  const renderHardcodedSuggestions = () => (\n    <div className=\"suggestions\" style={{ position: \"relative\" }}>\n      {visibleSuggestions.map((s, i) => (\n        <button\n          key={i}\n          onClick={() => handleSendMessage(s, true)}\n          className=\"suggestion-button\"\n        >\n          {s}\n        </button>\n      ))}\n      {!isExpanded &&\n        <button\n          className=\"suggestion-arrow right\"\n          aria-label=\"Next suggestions\"\n          onClick={() => {\n            const max = HARDCODED_SUGGESTIONS.length;\n            setSuggestionIndex((prev) => (prev + 1) % max);\n            localStorage.setItem(\n              \"suggestionIndex\",\n              ((suggestionIndex + 1) % max).toString()\n            );\n          }}\n          style={{\n            border: \"none\",\n            background: \"none\",\n            cursor: \"pointer\",\n            fontSize: 20,\n            marginLeft: 7,\n            color: \"#7c3aed\",\n            alignSelf: \"center\",\n            height: 28,\n            width: 28\n          }}\n        >&#8594;</button>\n      }\n    </div>\n  );\n\n  return (\n    <div style={{ background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)', minHeight: '100vh' }}>\n      <button\n        className=\"chatbot-toggler modern-toggler\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Toggle chatbot\"\n        style={{ position: 'fixed', right: '20px', bottom: '20px', zIndex: 10000 }}>\n        {isOpen ? '✖' : <img src={ChatbotIcon} alt=\"Chatbot\" style={{ width: 48, height: 48 }} />}\n      </button>\n      {isOpen && (\n        <div\n          className={\n            `chatbot modern-chatbot` +\n            (darkMode ? ' dark-mode' : '') +\n            (isExpanded ? ' expanded' : ' collapsed')\n          }\n        >\n          <header className=\"chatbot-header\">\n            <span className=\"header-title\">\n              Field Insights<span className=\"header-title-gradient\"> Assistant</span>\n            </span>\n            <div className=\"header-controls\">\n              <div className=\"header-actions\">\n                {/* Theme toggle */}\n                <button onClick={toggleTheme} title=\"Toggle theme\" className=\"header-action-btn\" aria-label=\"Toggle theme\">\n                  {darkMode ? (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <circle cx=\"12\" cy=\"12\" r=\"5\" fill=\"#7c3aed\" />\n                      <g stroke=\"#7c3aed\" strokeWidth=\"2\">\n                        <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"5\" />\n                        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"22\" />\n                        <line x1=\"4.22\" y1=\"4.22\" x2=\"6.34\" y2=\"6.34\" />\n                        <line x1=\"17.66\" y1=\"17.66\" x2=\"19.78\" y2=\"19.78\" />\n                        <line x1=\"2\" y1=\"12\" x2=\"5\" y2=\"12\" />\n                        <line x1=\"19\" y1=\"12\" x2=\"22\" y2=\"12\" />\n                        <line x1=\"4.22\" y1=\"19.78\" x2=\"6.34\" y2=\"17.66\" />\n                        <line x1=\"17.66\" y1=\"6.34\" x2=\"19.78\" y2=\"4.22\" />\n                      </g>\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <path d=\"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\" fill=\"#7c3aed\" />\n                    </svg>\n                  )}\n                </button>\n                <button\n                  onClick={() => {\n                    randomizeSuggestions();\n                    setMessages([{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }]);\n                    localStorage.removeItem('chatMessages');\n                    setFeedback({});\n                  }}\n                  title=\"Clear chat\"\n                  className=\"header-action-btn\"\n                  aria-label=\"Clear chat\"\n                >\n                  <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                    <path d=\"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                  </svg>\n                </button>\n                <button\n                  onClick={() => setIsExpanded((prev) => !prev)}\n                  title={isExpanded ? 'Collapse window' : 'Expand window'}\n                  className=\"header-action-btn\"\n                  aria-label={isExpanded ? 'Collapse window' : 'Expand window'}\n                >\n                  {isExpanded ? (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"8 3 3 3 3 8\" />\n                      <line x1=\"3\" y1=\"3\" x2=\"10\" y2=\"10\" />\n                      <polyline points=\"16 21 21 21 21 16\" />\n                      <line x1=\"21\" y1=\"21\" x2=\"14\" y2=\"14\" />\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"15 3 21 3 21 9\" />\n                      <line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\" />\n                      <polyline points=\"9 21 3 21 3 15\" />\n                      <line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n            </div>\n          </header>\n          <ul className=\"chatbox\" ref={chatRef}>\n            {messages.map((msg, idx) => (\n              <li\n                key={idx}\n                className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}\n                style={{ justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start' }}\n              >\n                <div className={`chat-bubble ${msg.role}`}>\n                  {renderChatBubbleContent(msg)}\n                </div>\n                {msg.role === 'assistant' && (\n                  <div className=\"feedback-row\">\n                    {feedback[idx] === undefined && (\n                      <>\n                        <Tooltip text=\"Mark as helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'up')}\n                            aria-label=\"Thumbs up\"\n                            tabIndex={0}\n                          >👍</button>\n                        </Tooltip>\n                        <Tooltip text=\"Mark as not helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'down')}\n                            aria-label=\"Thumbs down\"\n                            tabIndex={0}\n                          >👎</button>\n                        </Tooltip>\n                      </>\n                    )}\n                    {feedback[idx] === 'up' && (\n                      <Tooltip text=\"Marked as helpful!\">\n                        <button className=\"feedback-btn selected up\" aria-label=\"Thumbs up\" tabIndex={0}>👍</button>\n                      </Tooltip>\n                    )}\n                    {feedback[idx] === 'down' && (\n                      <Tooltip text=\"Marked as not helpful\">\n                        <button className=\"feedback-btn selected down\" aria-label=\"Thumbs down\" tabIndex={0}>👎</button>\n                      </Tooltip>\n                    )}\n                  </div>\n                )}\n              </li>\n            ))}\n            {isTyping && (\n              <li className=\"chat incoming\">\n                <div className=\"chat-bubble assistant\">\n                  <TypingIndicator />\n                </div>\n              </li>\n            )}\n          </ul>\n          {/* Suggestions panel only during clarification */}\n          {showClarifySuggestions && renderClarifySuggestions()}\n          {/* If not in clarification, show static suggestions panel */}\n          {!showClarifySuggestions && renderHardcodedSuggestions()}\n          {/* Main input is always present (but suggestion bar is replaced during clarify) */}\n          {!showClarifySuggestions && (\n            <div className=\"chat-input\">\n              <textarea\n                ref={inputRef}\n                placeholder=\"Ask me anything...\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input)}\n                rows={1}\n                className=\"chat-input-textarea\"\n                style={{ overflow: 'hidden', resize: 'none' }}\n                disabled={isTyping}\n              />\n              <button\n                onClick={() => handleSendMessage(input)}\n                title=\"Send message\"\n                className={`send-button${input.trim() ? \" has-text\" : \"\"}`}\n                disabled={isTyping}\n              >\n                <svg height=\"22\" width=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ display: \"block\" }}>\n                  <path d=\"M4 20L20 12L4 4V10L16 12L4 14V20Z\" fill=\"currentColor\" />\n                </svg>\n              </button>\n            </div>\n          )}\n          {toast.visible && (\n            <div\n              className={`toast toast-${toast.type}`}\n              onClick={() => setToast(t => ({ ...t, visible: false }))}\n              style={{ cursor: 'pointer' }}\n            >\n              {toast.message}\n            </div>\n          )}\n          <footer className=\"chatbot-footer\">\n            Powered by <img src={ZSIcon} alt=\"ZS Associates\" />\n          </footer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}