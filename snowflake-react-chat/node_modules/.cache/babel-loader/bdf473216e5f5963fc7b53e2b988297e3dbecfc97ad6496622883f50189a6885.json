{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// Fill these as per your use case\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HARDCODED_ANSWERS = {\n  // \"some key\": \"some answer\"\n};\nconst HARDCODED_SUGGESTIONS = [\n  // \"example question 1\", \"example question 2\", ...\n];\n\n// Helper: Detect if the string is a SQL command\nfunction isSqlQuery(input) {\n  return /^(select|show|call|insert|update|delete|create|drop|alter)\\b/i.test(input.trim());\n}\n\n// Smart response formatter: handles output, tables, and fallback cases\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    const json = JSON.parse(responseText);\n\n    // --- CASE 1: Output sentence/answer ---\n    if (json.output) {\n      let answer = json.output;\n\n      // Optionally add sources if present\n      if (json.sources && Array.isArray(json.sources) && json.sources.length > 0) {\n        answer += `\\n\\nSources: ${json.sources.map(s => (s.tool_name ? s.tool_name : '') + (s.metadata && s.metadata.length ? ` (Table: ${s.metadata[0].Table || ''})` : '')).join(', ')}`;\n      }\n      return answer;\n    }\n\n    // --- CASE 2: Tabular data ---\n    const columns = json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name) || json.rowType && json.rowType.map(col => col.name) || json.rowtype && json.rowtype.map(col => col.name) || json.columns && json.columns.map(col => col.name);\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      // Return a string flag; the actual table is rendered in renderChatBubbleContent\n      return {\n        asTable: true,\n        columns,\n        data\n      };\n    }\n\n    // --- CASE 3: Just a message or error? ---\n    if (json.error) return \"❌ Error: \" + json.error;\n    if (json.code && json.code !== \"000000\" && (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))) {\n      return `❌ Error: ${json.code} - ${json.message}`;\n    }\n    if (json.message) return json.message;\n    return \"No data found.\";\n  } catch {\n    return responseText || \"No response from Snowflake.\";\n  }\n}\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{\n      role: 'assistant',\n      text: 'Hello 👋! How may I assist you?'\n    }];\n  });\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState('');\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Only show 4 rotating suggestions at a time\n  const visibleSuggestions = Array(4).fill(0).map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollTo({\n      top: chatRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // --- Main message handler ---\n  const handleSendMessage = async userMessage => {\n    if (!userMessage.trim()) return;\n    const newMessages = [...messages, {\n      role: 'user',\n      text: userMessage\n    }];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setInput('');\n\n    // HARDCODED ANSWER CHECK\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      const hardcodedAnswer = HARDCODED_ANSWERS[matchedKey];\n      const updatedMessages = [...newMessages, {\n        role: 'assistant',\n        text: hardcodedAnswer\n      }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // Route: SQL or NLP\n    let statement;\n    if (isSqlQuery(userMessage)) {\n      statement = userMessage;\n    } else {\n      const sanitized = userMessage.replace(/'/g, \"''\");\n      statement = `CALL CUSTOM_AGENT2('${sanitized}');`;\n    }\n\n    // Show loading\n    const pendingList = [...newMessages, {\n      role: 'assistant',\n      text: '⏳ Querying Snowflake...'\n    }];\n    setMessages(pendingList);\n    localStorage.setItem('chatMessages', JSON.stringify(pendingList));\n    try {\n      const response = await fetch('http://localhost:4000/api/snowflake', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          statement\n        })\n      });\n      const responseText = await response.text();\n      const formatted = formatSnowflakeResponse(responseText);\n\n      // For tables: set { asTable: true, ... }\n      const finalMsg = typeof formatted === 'object' && formatted.asTable ? {\n        role: 'assistant',\n        table: formatted\n      } : {\n        role: 'assistant',\n        text: formatted,\n        rawJson: responseText\n      };\n      const updatedMessages = [...newMessages, finalMsg];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    } catch (err) {\n      const formatted = \"⚠️ Unable to connect to backend.\";\n      const updatedMessages = [...newMessages, {\n        role: 'assistant',\n        text: formatted\n      }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    }\n  };\n\n  // Feedback handlers\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({\n      ...prev,\n      [idx]: type\n    }));\n    setToast('Thanks for your feedback!');\n    setTimeout(() => setToast(''), 1100);\n  };\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  // --- Render chat bubble content (table, plain text, etc) ---\n  const renderChatBubbleContent = msg => {\n    // --- TABLE rendering ---\n    if (msg.table && msg.table.asTable && msg.table.columns && msg.table.data) {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"snowflake-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: msg.table.columns.map((h, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: h\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 48\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: msg.table.data.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: msg.table.columns.length,\n              style: {\n                textAlign: 'center',\n                color: '#888'\n              },\n              children: \"(no results)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this) : msg.table.data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.map((cell, cidx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                whiteSpace: 'pre-wrap',\n                fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n              },\n              children: (() => {\n                try {\n                  if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                    const parsed = JSON.parse(cell);\n                    if (Array.isArray(parsed)) {\n                      return /*#__PURE__*/_jsxDEV(\"ul\", {\n                        style: {\n                          paddingLeft: '18px',\n                          margin: 0\n                        },\n                        children: parsed.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: item\n                        }, idx, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 198,\n                          columnNumber: 60\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 31\n                      }, this);\n                    }\n                    if (typeof parsed === 'object') {\n                      return /*#__PURE__*/_jsxDEV(\"pre\", {\n                        children: JSON.stringify(parsed, null, 2)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 36\n                      }, this);\n                    }\n                  }\n                  return cell;\n                } catch {\n                  return cell;\n                }\n              })()\n            }, cidx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this))\n          }, ridx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this);\n    }\n\n    // --- Plain text or output sentence (with optional line breaks) ---\n    if (msg.text) {\n      return msg.text.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: line\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this));\n    }\n\n    // --- Fallback ---\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(msg)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatbot-toggler modern-toggler\",\n        onClick: () => setIsOpen(!isOpen),\n        \"aria-label\": \"Toggle chatbot\",\n        style: {\n          position: 'fixed',\n          right: '20px',\n          bottom: '20px',\n          zIndex: 10000\n        },\n        children: isOpen ? '✖' : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ChatbotIcon,\n          alt: \"Chatbot\",\n          style: {\n            width: 48,\n            height: 48\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chatbot modern-chatbot` + (darkMode ? ' dark-mode' : '') + (isExpanded ? ' expanded' : ' collapsed'),\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chatbot-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 600\n            },\n            children: [\"ORION \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#6b38fb'\n              },\n              children: \"Field Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleTheme,\n              title: \"Toggle theme\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Toggle theme\",\n              children: darkMode ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"23\",\n                height: \"23\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"5\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                  stroke: \"#7c3aed\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"2\",\n                    x2: \"12\",\n                    y2: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"19\",\n                    x2: \"12\",\n                    y2: \"22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"4.22\",\n                    x2: \"6.34\",\n                    y2: \"6.34\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"17.66\",\n                    x2: \"19.78\",\n                    y2: \"19.78\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"2\",\n                    y1: \"12\",\n                    x2: \"5\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"19\",\n                    y1: \"12\",\n                    x2: \"22\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"19.78\",\n                    x2: \"6.34\",\n                    y2: \"17.66\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"6.34\",\n                    x2: \"19.78\",\n                    y2: \"4.22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"23\",\n                height: \"23\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                // Rotate suggestions\n                const newIndex = (suggestionIndex + 4) % HARDCODED_SUGGESTIONS.length;\n                setSuggestionIndex(newIndex);\n                localStorage.setItem('suggestionIndex', newIndex.toString());\n                setMessages([{\n                  role: 'assistant',\n                  text: 'Hello 👋! How may I assist you?'\n                }]);\n                localStorage.removeItem('chatMessages');\n                setFeedback({});\n              },\n              title: \"Clear chat\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Clear chat\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"23\",\n                height: \"23\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsExpanded(prev => !prev),\n              title: isExpanded ? 'Collapse window' : 'Expand window',\n              className: \"header-action-btn\",\n              \"aria-label\": isExpanded ? 'Collapse window' : 'Expand window',\n              children: isExpanded ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"23\",\n                height: \"23\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"8 3 3 3 3 8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"3\",\n                  x2: \"10\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"16 21 21 21 21 16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"21\",\n                  x2: \"14\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"23\",\n                height: \"23\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"15 3 21 3 21 9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"3\",\n                  x2: \"14\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"9 21 3 21 3 15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"21\",\n                  x2: \"10\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chatbox\",\n          ref: chatRef,\n          children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n            style: {\n              justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start',\n              animation: 'fadeIn 0.25s cubic-bezier(.36,1.7,.72,.97)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `chat-bubble ${msg.role}`,\n              children: renderChatBubbleContent(msg)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this), msg.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback-row\",\n              children: [feedback[idx] === undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'up'),\n                  \"aria-label\": \"Thumbs up\",\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'down'),\n                  \"aria-label\": \"Thumbs down\",\n                  children: \"\\uD83D\\uDC4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true), feedback[idx] === 'up' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected\",\n                \"aria-label\": \"Thumbs up\",\n                children: \"\\uD83D\\uDC4D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 25\n              }, this), feedback[idx] === 'down' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected\",\n                \"aria-label\": \"Thumbs down\",\n                children: \"\\uD83D\\uDC4E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 21\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          children: visibleSuggestions.map((s, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSendMessage(s),\n            className: \"suggestion-button\",\n            children: s\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: inputRef,\n            placeholder: \"Ask me anything...\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input),\n            rows: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSendMessage(input),\n            title: \"Send message\",\n            className: \"send-button\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"chatbot-footer\",\n          children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ZSIcon,\n            alt: \"ZS Associates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), toast && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toast\",\n          children: toast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ChatBot, \"3DfwNzS2nx0X7ktKaD/Jmp9G3pI=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotIcon","ZSIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","HARDCODED_ANSWERS","HARDCODED_SUGGESTIONS","isSqlQuery","input","test","trim","formatSnowflakeResponse","responseText","json","JSON","parse","output","answer","sources","Array","isArray","length","map","s","tool_name","metadata","Table","join","columns","resultSetMetaData","rowType","col","name","rowtype","data","asTable","error","code","message","toLowerCase","includes","ChatBot","_s","messages","setMessages","saved","localStorage","getItem","role","text","feedback","setFeedback","suggestionIndex","setSuggestionIndex","stored","parseInt","setInput","isOpen","setIsOpen","darkMode","setDarkMode","isExpanded","setIsExpanded","toast","setToast","chatRef","inputRef","visibleSuggestions","fill","_","i","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","handleSendMessage","userMessage","newMessages","setItem","stringify","cleaned","matchedKey","Object","keys","find","k","hardcodedAnswer","updatedMessages","statement","sanitized","replace","pendingList","response","fetch","method","headers","body","formatted","finalMsg","table","rawJson","err","handleFeedback","idx","type","prev","setTimeout","toggleTheme","renderChatBubbleContent","msg","className","children","h","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","style","textAlign","color","row","ridx","cell","cidx","whiteSpace","fontFamily","startsWith","undefined","parsed","paddingLeft","margin","item","split","line","background","minHeight","onClick","position","right","bottom","zIndex","src","alt","width","height","fontWeight","title","viewBox","cx","cy","r","stroke","strokeWidth","x1","y1","x2","y2","d","newIndex","toString","removeItem","strokeLinecap","strokeLinejoin","points","ref","justifyContent","animation","placeholder","value","onChange","e","target","onKeyDown","key","shiftKey","rows","_c","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// Fill these as per your use case\nconst HARDCODED_ANSWERS = {\n  // \"some key\": \"some answer\"\n};\n\nconst HARDCODED_SUGGESTIONS = [\n  // \"example question 1\", \"example question 2\", ...\n];\n\n// Helper: Detect if the string is a SQL command\nfunction isSqlQuery(input) {\n  return /^(select|show|call|insert|update|delete|create|drop|alter)\\b/i.test(input.trim());\n}\n\n// Smart response formatter: handles output, tables, and fallback cases\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    const json = JSON.parse(responseText);\n\n    // --- CASE 1: Output sentence/answer ---\n    if (json.output) {\n      let answer = json.output;\n\n      // Optionally add sources if present\n      if (json.sources && Array.isArray(json.sources) && json.sources.length > 0) {\n        answer += `\\n\\nSources: ${json.sources.map(s =>\n          (s.tool_name ? s.tool_name : '') +\n          (s.metadata && s.metadata.length\n            ? ` (Table: ${s.metadata[0].Table || ''})`\n            : ''\n          )).join(', ')\n        }`;\n      }\n\n      return answer;\n    }\n\n    // --- CASE 2: Tabular data ---\n    const columns =\n      (json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name)) ||\n      (json.rowType && json.rowType.map(col => col.name)) ||\n      (json.rowtype && json.rowtype.map(col => col.name)) ||\n      (json.columns && json.columns.map(col => col.name));\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      // Return a string flag; the actual table is rendered in renderChatBubbleContent\n      return { asTable: true, columns, data };\n    }\n\n    // --- CASE 3: Just a message or error? ---\n    if (json.error) return \"❌ Error: \" + json.error;\n    if (\n      json.code &&\n      json.code !== \"000000\" &&\n      (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))\n    ) {\n      return `❌ Error: ${json.code} - ${json.message}`;\n    }\n    if (json.message) return json.message;\n    return \"No data found.\";\n  } catch {\n    return responseText || \"No response from Snowflake.\";\n  }\n}\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }];\n  });\n\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState('');\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Only show 4 rotating suggestions at a time\n  const visibleSuggestions = Array(4)\n    .fill(0)\n    .map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n\n  useEffect(() => {\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\n  }, [messages]);\n\n  // --- Main message handler ---\n  const handleSendMessage = async (userMessage) => {\n    if (!userMessage.trim()) return;\n    const newMessages = [...messages, { role: 'user', text: userMessage }];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setInput('');\n\n    // HARDCODED ANSWER CHECK\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(\n      k => cleaned.includes(k)\n    );\n    if (matchedKey) {\n      const hardcodedAnswer = HARDCODED_ANSWERS[matchedKey];\n      const updatedMessages = [...newMessages, { role: 'assistant', text: hardcodedAnswer }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // Route: SQL or NLP\n    let statement;\n    if (isSqlQuery(userMessage)) {\n      statement = userMessage;\n    } else {\n      const sanitized = userMessage.replace(/'/g, \"''\");\n      statement = `CALL CUSTOM_AGENT2('${sanitized}');`;\n    }\n\n    // Show loading\n    const pendingList = [...newMessages, { role: 'assistant', text: '⏳ Querying Snowflake...' }];\n    setMessages(pendingList);\n    localStorage.setItem('chatMessages', JSON.stringify(pendingList));\n\n    try {\n      const response = await fetch('http://localhost:4000/api/snowflake', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ statement })\n      });\n      const responseText = await response.text();\n      const formatted = formatSnowflakeResponse(responseText);\n\n      // For tables: set { asTable: true, ... }\n      const finalMsg = typeof formatted === 'object' && formatted.asTable\n        ? { role: 'assistant', table: formatted }\n        : { role: 'assistant', text: formatted, rawJson: responseText };\n\n      const updatedMessages = [...newMessages, finalMsg];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    } catch (err) {\n      const formatted = \"⚠️ Unable to connect to backend.\";\n      const updatedMessages = [...newMessages, { role: 'assistant', text: formatted }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    }\n  };\n\n  // Feedback handlers\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({ ...prev, [idx]: type }));\n    setToast('Thanks for your feedback!');\n    setTimeout(() => setToast(''), 1100);\n  };\n\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  // --- Render chat bubble content (table, plain text, etc) ---\n  const renderChatBubbleContent = (msg) => {\n    // --- TABLE rendering ---\n    if (msg.table && msg.table.asTable && msg.table.columns && msg.table.data) {\n      return (\n        <table className=\"snowflake-table\">\n          <thead>\n            <tr>\n              {msg.table.columns.map((h, i) => <th key={i}>{h}</th>)}\n            </tr>\n          </thead>\n          <tbody>\n            {msg.table.data.length === 0 ? (\n              <tr><td colSpan={msg.table.columns.length} style={{ textAlign: 'center', color: '#888' }}>(no results)</td></tr>\n            ) : msg.table.data.map((row, ridx) => (\n              <tr key={ridx}>\n                {row.map((cell, cidx) => (\n                  <td key={cidx} style={{\n                    whiteSpace: 'pre-wrap',\n                    fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                  }}>\n                    {(() => {\n                      try {\n                        if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                          const parsed = JSON.parse(cell);\n                          if (Array.isArray(parsed)) {\n                            return (\n                              <ul style={{ paddingLeft: '18px', margin: 0 }}>\n                                {parsed.map((item, idx) => <li key={idx}>{item}</li>)}\n                              </ul>\n                            );\n                          }\n                          if (typeof parsed === 'object') {\n                            return <pre>{JSON.stringify(parsed, null, 2)}</pre>;\n                          }\n                        }\n                        return cell;\n                      } catch {\n                        return cell;\n                      }\n                    })()}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    }\n\n    // --- Plain text or output sentence (with optional line breaks) ---\n    if (msg.text) {\n      return msg.text.split('\\n').map((line, i) => (\n        <div key={i}>{line}</div>\n      ));\n    }\n\n    // --- Fallback ---\n    return <div>{JSON.stringify(msg)}</div>;\n  };\n\n  return (\n    <>\n      <div style={{ background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)', minHeight: '100vh' }}>\n        <button\n          className=\"chatbot-toggler modern-toggler\"\n          onClick={() => setIsOpen(!isOpen)}\n          aria-label=\"Toggle chatbot\"\n          style={{ position: 'fixed', right: '20px', bottom: '20px', zIndex: 10000 }}>\n          {isOpen ? '✖' : <img src={ChatbotIcon} alt=\"Chatbot\" style={{ width: 48, height: 48 }} />}\n        </button>\n        {isOpen && (\n          <div\n            className={\n              `chatbot modern-chatbot` +\n              (darkMode ? ' dark-mode' : '') +\n              (isExpanded ? ' expanded' : ' collapsed')\n            }\n          >\n            <header className=\"chatbot-header\">\n              <span style={{ fontWeight: 600 }}>\n                ORION <span style={{ color: '#6b38fb' }}>Field Assistant</span>\n              </span>\n              <div className=\"header-actions\">\n                {/* Theme toggle */}\n                <button\n                  onClick={toggleTheme}\n                  title=\"Toggle theme\"\n                  className=\"header-action-btn\"\n                  aria-label=\"Toggle theme\"\n                >\n                  {darkMode ? (\n                    <svg width=\"23\" height=\"23\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <circle cx=\"12\" cy=\"12\" r=\"5\" fill=\"#7c3aed\" />\n                      <g stroke=\"#7c3aed\" strokeWidth=\"2\">\n                        <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"5\" />\n                        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"22\" />\n                        <line x1=\"4.22\" y1=\"4.22\" x2=\"6.34\" y2=\"6.34\" />\n                        <line x1=\"17.66\" y1=\"17.66\" x2=\"19.78\" y2=\"19.78\" />\n                        <line x1=\"2\" y1=\"12\" x2=\"5\" y2=\"12\" />\n                        <line x1=\"19\" y1=\"12\" x2=\"22\" y2=\"12\" />\n                        <line x1=\"4.22\" y1=\"19.78\" x2=\"6.34\" y2=\"17.66\" />\n                        <line x1=\"17.66\" y1=\"6.34\" x2=\"19.78\" y2=\"4.22\" />\n                      </g>\n                    </svg>\n                  ) : (\n                    <svg width=\"23\" height=\"23\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <path d=\"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\" fill=\"#7c3aed\" />\n                    </svg>\n                  )}\n                </button>\n                {/* Refresh */}\n                <button\n                  onClick={() => {\n                    // Rotate suggestions\n                    const newIndex = (suggestionIndex + 4) % HARDCODED_SUGGESTIONS.length;\n                    setSuggestionIndex(newIndex);\n                    localStorage.setItem('suggestionIndex', newIndex.toString());\n                    setMessages([{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }]);\n                    localStorage.removeItem('chatMessages');\n                    setFeedback({});\n                  }}\n                  title=\"Clear chat\"\n                  className=\"header-action-btn\"\n                  aria-label=\"Clear chat\"\n                >\n                  <svg width=\"23\" height=\"23\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                    <path d=\"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                  </svg>\n                </button>\n                {/* Expand/Collapse */}\n                <button\n                  onClick={() => setIsExpanded((prev) => !prev)}\n                  title={isExpanded ? 'Collapse window' : 'Expand window'}\n                  className=\"header-action-btn\"\n                  aria-label={isExpanded ? 'Collapse window' : 'Expand window'}\n                >\n                  {isExpanded ? (\n                    <svg width=\"23\" height=\"23\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"8 3 3 3 3 8\" />\n                      <line x1=\"3\" y1=\"3\" x2=\"10\" y2=\"10\" />\n                      <polyline points=\"16 21 21 21 21 16\" />\n                      <line x1=\"21\" y1=\"21\" x2=\"14\" y2=\"14\" />\n                    </svg>\n                  ) : (\n                    <svg width=\"23\" height=\"23\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"15 3 21 3 21 9\" />\n                      <line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\" />\n                      <polyline points=\"9 21 3 21 3 15\" />\n                      <line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n            </header>\n            <ul className=\"chatbox\" ref={chatRef}>\n              {messages.map((msg, idx) => (\n                <li\n                  key={idx}\n                  className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}\n                  style={{\n                    justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start',\n                    animation: 'fadeIn 0.25s cubic-bezier(.36,1.7,.72,.97)'\n                  }}\n                >\n                  <div\n                    className={`chat-bubble ${msg.role}`}\n                  >\n                    {renderChatBubbleContent(msg)}\n                  </div>\n                  {msg.role === 'assistant' && (\n                    <div className=\"feedback-row\">\n                      {feedback[idx] === undefined && (\n                        <>\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'up')}\n                            aria-label=\"Thumbs up\"\n                          >👍</button>\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'down')}\n                            aria-label=\"Thumbs down\"\n                          >👎</button>\n                        </>\n                      )}\n                      {feedback[idx] === 'up' && (\n                        <button className=\"feedback-btn selected\" aria-label=\"Thumbs up\">👍</button>\n                      )}\n                      {feedback[idx] === 'down' && (\n                        <button className=\"feedback-btn selected\" aria-label=\"Thumbs down\">👎</button>\n                      )}\n                    </div>\n                  )}\n                </li>\n              ))}\n            </ul>\n            <div className=\"suggestions\">\n              {visibleSuggestions.map((s, i) => (\n                <button\n                  key={i}\n                  onClick={() => handleSendMessage(s)}\n                  className=\"suggestion-button\"\n                >\n                  {s}\n                </button>\n              ))}\n            </div>\n            <div className=\"chat-input\">\n              <textarea\n                ref={inputRef}\n                placeholder=\"Ask me anything...\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input)}\n                rows={2}\n              ></textarea>\n              <button onClick={() => handleSendMessage(input)} title=\"Send message\" className=\"send-button\">\n                Send\n              </button>\n            </div>\n            <footer className=\"chatbot-footer\">\n              Powered by <img src={ZSIcon} alt=\"ZS Associates\" />\n            </footer>\n            {toast && <div className=\"toast\">{toast}</div>}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}