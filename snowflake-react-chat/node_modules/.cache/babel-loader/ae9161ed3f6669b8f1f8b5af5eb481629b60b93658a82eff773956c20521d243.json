{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [position, setPosition] = useState({\n    x: 25,\n    y: 25\n  });\n  const [dragging, setDragging] = useState(false);\n  const [rel, setRel] = useState(null);\n  const chatRef = useRef();\n  const buttonRef = useRef();\n  useEffect(() => {\n    if (isOpen) {\n      const greeting = `Hello 👋! I'm your Field Assistant. How can I help you today?`;\n      setMessages([{\n        role: 'assistant',\n        text: greeting\n      }]);\n    }\n  }, [isOpen]);\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      if (chatRef.current) {\n        chatRef.current.scrollTop = chatRef.current.scrollHeight;\n      }\n    }, 100);\n  };\n  const sendToSnowflakeAPI = async message => {\n    try {\n      const res = await fetch('http://localhost:4000/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: message\n        })\n      });\n      if (!res.ok) throw new Error('Request failed');\n      const data = await res.json();\n      const rows = data.rows || [];\n      if (rows.length === 0) return '🔍 No results found.';\n      const formatted = rows.map((row, i) => `🔹 ${JSON.stringify(row, null, 2)}`).join('\\n\\n');\n      return formatted;\n    } catch (err) {\n      console.error('API error:', err);\n      return '⚠️ Unable to connect to the backend. Please try again later.';\n    }\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    const newMessages = [...messages, {\n      role: 'user',\n      text: userMessage\n    }];\n    setMessages(newMessages);\n    setInput('');\n    scrollToBottom();\n    const pendingResponse = {\n      role: 'assistant',\n      text: '⏳ Working on your request...'\n    };\n    setMessages([...newMessages, pendingResponse]);\n    const response = await sendToSnowflakeAPI(userMessage);\n    setMessages([...newMessages, {\n      role: 'assistant',\n      text: response\n    }]);\n    scrollToBottom();\n  };\n  const handleMouseDown = e => {\n    if (e.button !== 0) return;\n    const rect = buttonRef.current.getBoundingClientRect();\n    setRel({\n      x: e.pageX - rect.left,\n      y: e.pageY - rect.top\n    });\n    setDragging(true);\n    e.stopPropagation();\n    e.preventDefault();\n  };\n  const handleMouseMove = e => {\n    if (!dragging) return;\n    setPosition({\n      x: e.pageX - rel.x,\n      y: e.pageY - rel.y\n    });\n    e.stopPropagation();\n    e.preventDefault();\n  };\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n  useEffect(() => {\n    if (dragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    } else {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [dragging]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggler\",\n      onClick: () => setIsOpen(!isOpen),\n      onMouseDown: handleMouseDown,\n      ref: buttonRef,\n      style: {\n        position: 'absolute',\n        left: position.x,\n        top: position.y\n      },\n      \"aria-label\": \"Toggle chatbot\",\n      children: isOpen ? '✖' : '💬'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\uD83E\\uDD16 ORION \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              color: '#94d6f2'\n            },\n            children: \"Field Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chatbox\",\n        ref: chatRef,\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Type your question here...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSend()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-rounded\",\n          onClick: handleSend,\n          title: \"Send message\",\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatBot, \"YoeL11XXzuNmhlaLRKzsBk+mhmM=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBot","_s","messages","setMessages","input","setInput","isOpen","setIsOpen","position","setPosition","x","y","dragging","setDragging","rel","setRel","chatRef","buttonRef","greeting","role","text","scrollToBottom","setTimeout","current","scrollTop","scrollHeight","sendToSnowflakeAPI","message","res","fetch","method","headers","body","JSON","stringify","query","ok","Error","data","json","rows","length","formatted","map","row","i","join","err","console","error","handleSend","trim","userMessage","newMessages","pendingResponse","response","handleMouseDown","e","button","rect","getBoundingClientRect","pageX","left","pageY","top","stopPropagation","preventDefault","handleMouseMove","handleMouseUp","document","addEventListener","removeEventListener","children","className","onClick","onMouseDown","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","color","msg","idx","placeholder","value","onChange","target","onKeyDown","key","shiftKey","title","_c","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [position, setPosition] = useState({ x: 25, y: 25 });\n  const [dragging, setDragging] = useState(false);\n  const [rel, setRel] = useState(null);\n  const chatRef = useRef();\n  const buttonRef = useRef();\n\n  useEffect(() => {\n    if (isOpen) {\n      const greeting = `Hello 👋! I'm your Field Assistant. How can I help you today?`;\n      setMessages([{ role: 'assistant', text: greeting }]);\n    }\n  }, [isOpen]);\n\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      if (chatRef.current) {\n        chatRef.current.scrollTop = chatRef.current.scrollHeight;\n      }\n    }, 100);\n  };\n\n  const sendToSnowflakeAPI = async (message) => {\n    try {\n      const res = await fetch('http://localhost:4000/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ query: message })\n      });\n\n      if (!res.ok) throw new Error('Request failed');\n\n      const data = await res.json();\n      const rows = data.rows || [];\n      if (rows.length === 0) return '🔍 No results found.';\n\n      const formatted = rows.map((row, i) => `🔹 ${JSON.stringify(row, null, 2)}`).join('\\n\\n');\n      return formatted;\n    } catch (err) {\n      console.error('API error:', err);\n      return '⚠️ Unable to connect to the backend. Please try again later.';\n    }\n  };\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    const newMessages = [...messages, { role: 'user', text: userMessage }];\n    setMessages(newMessages);\n    setInput('');\n    scrollToBottom();\n\n    const pendingResponse = { role: 'assistant', text: '⏳ Working on your request...' };\n    setMessages([...newMessages, pendingResponse]);\n\n    const response = await sendToSnowflakeAPI(userMessage);\n    setMessages([...newMessages, { role: 'assistant', text: response }]);\n    scrollToBottom();\n  };\n\n  const handleMouseDown = (e) => {\n    if (e.button !== 0) return;\n    const rect = buttonRef.current.getBoundingClientRect();\n    setRel({ x: e.pageX - rect.left, y: e.pageY - rect.top });\n    setDragging(true);\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  const handleMouseMove = (e) => {\n    if (!dragging) return;\n    setPosition({ x: e.pageX - rel.x, y: e.pageY - rel.y });\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  useEffect(() => {\n    if (dragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    } else {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [dragging]);\n\n  return (\n    <>\n      <button\n        className=\"chatbot-toggler\"\n        onClick={() => setIsOpen(!isOpen)}\n        onMouseDown={handleMouseDown}\n        ref={buttonRef}\n        style={{ position: 'absolute', left: position.x, top: position.y }}\n        aria-label=\"Toggle chatbot\"\n      >\n        {isOpen ? '✖' : '💬'}\n      </button>\n\n      {isOpen && (\n        <div className=\"chatbot\">\n          <header>\n            <h3>🤖 ORION <strong style={{ color: '#94d6f2' }}>Field Assistant</strong></h3>\n          </header>\n          <ul className=\"chatbox\" ref={chatRef}>\n            {messages.map((msg, idx) => (\n              <li key={idx} className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}>\n                <p>{msg.text}</p>\n              </li>\n            ))}\n          </ul>\n          <div className=\"chat-input\">\n            <textarea\n              placeholder=\"Type your question here...\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSend()}\n            ></textarea>\n            <span className=\"material-symbols-rounded\" onClick={handleSend} title=\"Send message\">send</span>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ChatBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}