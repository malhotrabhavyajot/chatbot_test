{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE, LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\nconst HARDCODED_SUGGESTIONS = [\"Which universes do we show in Accounts calculation?\", \"Where can I find TRX Sales trends overtime?\", \"Where can I find top 10 Gainer Prescriber over time?\", \"What is Formulary Status?\", \"What are the number of current monthly suggestion KPIs?\", \"Which dossier gives a detailed analysis about the Payors?\", \"Where can I find explanations about different KPIs?\", \"What is MKT % LIS?\", \"Are any physicians' sales dropped at a geo level?\"];\n\n// Helper: Parse CUSTOM_AGENT2 output\nfunction parseCustomAgent2Output(responseText) {\n  if (typeof responseText === \"string\" && responseText.startsWith(\"CUSTOM_AGENT2\")) {\n    const match = responseText.match(/CUSTOM_AGENT2\\s*({[\\s\\S]+})/);\n    if (match) {\n      try {\n        const obj = JSON.parse(match[1]);\n        if (obj && obj.output) return obj.output;\n      } catch (e) {}\n    }\n  }\n  return null;\n}\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    const columns = json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name) || json.rowType && json.rowType.map(col => col.name) || json.rowtype && json.rowtype.map(col => col.name) || json.columns && json.columns.map(col => col.name);\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return {\n      type: \"error\",\n      value: \"❌ Error: \" + json.error\n    };\n    if (json.code && json.code !== \"000000\" && (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))) {\n      return {\n        type: \"error\",\n        value: `❌ Error: ${json.code} - ${json.message}`\n      };\n    }\n    if (json.message) return {\n      type: \"output\",\n      value: json.message\n    };\n    return {\n      type: \"output\",\n      value: \"No data found.\"\n    };\n  } catch {\n    return {\n      type: \"error\",\n      value: responseText || \"No response from backend.\"\n    };\n  }\n}\nfunction extractSQLBlock(text) {\n  const match = text && text.match(/```sql\\s*([\\s\\S]*?)```/i);\n  return match ? match[1].trim() : null;\n}\nfunction TypingIndicator() {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"typing-indicator\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_c = TypingIndicator;\nconst Tooltip = ({\n  children,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"feedback-tooltip\",\n  children: [children, /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"feedback-tooltiptext\",\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 89,\n  columnNumber: 3\n}, this);\n_c2 = Tooltip;\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{\n      role: 'assistant',\n      text: 'Hello 👋! How may I assist you?'\n    }];\n  });\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({\n    message: '',\n    type: 'info',\n    visible: false\n  });\n  const [isTyping, setIsTyping] = useState(false);\n\n  // Clarify/refine state\n  const [clarifySuggestions, setClarifySuggestions] = useState([]);\n  const [clarifyMode, setClarifyMode] = useState(false);\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Suggestion randomizer for clear chat\n  const randomizeSuggestions = () => {\n    let newIndex = Math.floor(Math.random() * HARDCODED_SUGGESTIONS.length);\n    if (HARDCODED_SUGGESTIONS.length > 1 && newIndex === suggestionIndex) {\n      newIndex = (newIndex + 1) % HARDCODED_SUGGESTIONS.length;\n    }\n    setSuggestionIndex(newIndex);\n    localStorage.setItem('suggestionIndex', newIndex.toString());\n  };\n  const numSuggestions = isExpanded ? 4 : 2;\n  const visibleSuggestions = Array(numSuggestions).fill(0).map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollTo({\n      top: chatRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [messages, isTyping, isOpen, isExpanded, clarifySuggestions]);\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({\n          ...t,\n          visible: false\n        }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n  const showToast = (msg, type) => {\n    setToast({\n      message: msg,\n      type: type,\n      visible: true\n    });\n  };\n\n  // Handles user sending a message, always goes through clarify/LLM\n  const handleSendMessage = async (userMessage, fromSuggestion = false) => {\n    if (!userMessage || typeof userMessage !== \"string\" || !userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // HARDCODED ANSWERS (instant, no LLM)\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      setIsTyping(false);\n      setClarifySuggestions([]);\n      setClarifyMode(false);\n      const updatedMessages = [...messages, {\n        role: 'user',\n        text: userMessage\n      }, {\n        role: 'assistant',\n        text: HARDCODED_ANSWERS[matchedKey]\n      }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // Always send message to clarify endpoint\n    const updatedMessages = [...messages, {\n      role: 'user',\n      text: userMessage\n    }];\n    setMessages(updatedMessages);\n    try {\n      const response = await fetch('http://localhost:4000/api/clarify', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userMessage\n        })\n      });\n      const {\n        assistant_message,\n        finalized\n      } = await response.json();\n\n      // If finalized, auto-send to snowflake!\n      if (finalized) {\n        setClarifySuggestions([]);\n        setClarifyMode(false);\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          text: assistant_message\n        }]);\n        setIsTyping(true);\n\n        // Unwrap the query from quotes if needed\n        let finalPrompt = assistant_message;\n        if (typeof finalPrompt === \"string\" && /^[\"“”'].*[\"“”']$/.test(finalPrompt.trim())) {\n          finalPrompt = finalPrompt.trim().replace(/^[\"“”']|[\"“”']$/g, \"\");\n        }\n\n        // Now send to snowflake agent\n        let sql = extractSQLBlock(finalPrompt) || finalPrompt;\n        let body = {\n          statement: `CALL CUSTOM_AGENT2('${sql.replace(/'/g, \"''\")}')`\n        };\n        const snowflakeRes = await fetch('http://localhost:4000/api/snowflake', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        });\n        const responseText = await snowflakeRes.text();\n\n        // Use the helper to ONLY show output if present\n        const parsedAgentOutput = parseCustomAgent2Output(responseText);\n        setIsTyping(false);\n        if (parsedAgentOutput) {\n          setMessages(prev => [...prev, {\n            role: \"assistant\",\n            text: parsedAgentOutput\n          }]);\n        } else {\n          const formatted = formatSnowflakeResponse(responseText);\n          setMessages(prev => [...prev, {\n            role: \"assistant\",\n            text: formatted\n          }]);\n        }\n        return;\n      } else {\n        setClarifyMode(true);\n        setIsTyping(false);\n        setClarifySuggestions([]); // Not used right now\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          text: assistant_message\n        }]);\n        return;\n      }\n    } catch (error) {\n      setIsTyping(false);\n      setClarifySuggestions([]);\n      setClarifyMode(false);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        text: \"Sorry, I couldn't process your query. Please try again.\"\n      }]);\n      return;\n    }\n  };\n\n  // Suggestion click just fills the input field, not send\n  const handleSuggestionToInput = sugg => {\n    setInput(sugg);\n    if (inputRef.current) inputRef.current.focus();\n  };\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({\n      ...prev,\n      [idx]: type\n    }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n  const toggleTheme = () => setDarkMode(prev => !prev);\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n    showToast('Copied to clipboard!', 'success');\n  };\n  const renderChatBubbleContent = msg => {\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"snowflake-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: obj.columns.map((h, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: h\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 44\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: obj.data.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: obj.columns.length,\n                style: {\n                  textAlign: 'center',\n                  color: '#888'\n                },\n                children: \"(no results)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this) : obj.data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.map((cell, cidx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  whiteSpace: 'pre-wrap',\n                  fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                },\n                children: (() => {\n                  try {\n                    if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                      const parsed = JSON.parse(cell);\n                      if (Array.isArray(parsed)) {\n                        return /*#__PURE__*/_jsxDEV(\"ul\", {\n                          style: {\n                            paddingLeft: '18px',\n                            margin: 0\n                          },\n                          children: parsed.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: item\n                          }, idx, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 295,\n                            columnNumber: 62\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 294,\n                          columnNumber: 33\n                        }, this);\n                      }\n                      if (typeof parsed === 'object') {\n                        return /*#__PURE__*/_jsxDEV(\"pre\", {\n                          children: JSON.stringify(parsed, null, 2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 300,\n                          columnNumber: 38\n                        }, this);\n                      }\n                    }\n                    return cell;\n                  } catch {\n                    return cell;\n                  }\n                })()\n              }, cidx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this))\n            }, ridx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this);\n      }\n      if (obj.type === \"output\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 16\n        }, this);\n      }\n      if (obj.type === \"error\") {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#b91c1c\",\n            fontWeight: 500\n          },\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 16\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(obj.value, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 14\n      }, this);\n    }\n    // SQL/code blocks\n    if (typeof msg.text === \"string\") {\n      const sqlBlock = extractSQLBlock(msg.text);\n      if (sqlBlock) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assistant-output-block\",\n          style: {\n            position: 'relative',\n            marginBottom: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 600,\n              marginBottom: 8\n            },\n            children: \"Snowflake SQL Query:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"assistant-sql-block\",\n            style: {\n              marginBottom: 8,\n              borderRadius: 12,\n              background: '#f5f2fd',\n              padding: 15,\n              fontSize: 14,\n              overflowX: 'auto'\n            },\n            children: sqlBlock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              border: 'none',\n              background: '#ede7fa',\n              borderRadius: 7,\n              padding: '3px 10px',\n              fontSize: 13,\n              color: '#5233c0',\n              cursor: 'pointer'\n            },\n            onClick: () => handleCopy(sqlBlock),\n            title: \"Copy SQL\",\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#444',\n              marginTop: 10,\n              fontSize: 14\n            },\n            children: msg.text.replace(/```sql[\\s\\S]*?```/i, '').trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this);\n      }\n    }\n    return (msg.text || \"\").split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: line\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Suggestions during clarify/refine (optional: for now, not shown since LLM doesn’t return them)\n  const renderClarifySuggestions = () => clarifySuggestions.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clarify-suggestion-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clarify-section-label\",\n      children: \"Suggestions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions\",\n      children: clarifySuggestions.map((sugg, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"suggestion-button\",\n        onClick: () => handleSuggestionToInput(sugg),\n        children: sugg\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n\n  // Static suggestions (before clarify starts)\n  const renderHardcodedSuggestions = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suggestions\",\n    style: {\n      position: \"relative\"\n    },\n    children: [visibleSuggestions.map((s, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSendMessage(s, true),\n      className: \"suggestion-button\",\n      children: s\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }, this)), !isExpanded && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"suggestion-arrow right\",\n      \"aria-label\": \"Next suggestions\",\n      onClick: () => {\n        const max = HARDCODED_SUGGESTIONS.length;\n        setSuggestionIndex(prev => (prev + 1) % max);\n        localStorage.setItem(\"suggestionIndex\", ((suggestionIndex + 1) % max).toString());\n      },\n      style: {\n        border: \"none\",\n        background: \"none\",\n        cursor: \"pointer\",\n        fontSize: 20,\n        marginLeft: 7,\n        color: \"#7c3aed\",\n        alignSelf: \"center\",\n        height: 28,\n        width: 28\n      },\n      children: \"\\u2192\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggler modern-toggler\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Toggle chatbot\",\n      style: {\n        position: 'fixed',\n        right: '20px',\n        bottom: '20px',\n        zIndex: 10000\n      },\n      children: isOpen ? '✖' : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ChatbotIcon,\n        alt: \"Chatbot\",\n        style: {\n          width: 48,\n          height: 48\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot modern-chatbot` + (darkMode ? ' dark-mode' : '') + (isExpanded ? ' expanded' : ' collapsed'),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-title\",\n          children: [\"Field Insights\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header-title-gradient\",\n            children: \" Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleTheme,\n              title: \"Toggle theme\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Toggle theme\",\n              children: darkMode ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"5\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                  stroke: \"#7c3aed\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"2\",\n                    x2: \"12\",\n                    y2: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"19\",\n                    x2: \"12\",\n                    y2: \"22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"4.22\",\n                    x2: \"6.34\",\n                    y2: \"6.34\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"17.66\",\n                    x2: \"19.78\",\n                    y2: \"19.78\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"2\",\n                    y1: \"12\",\n                    x2: \"5\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"19\",\n                    y1: \"12\",\n                    x2: \"22\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"19.78\",\n                    x2: \"6.34\",\n                    y2: \"17.66\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"6.34\",\n                    x2: \"19.78\",\n                    y2: \"4.22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                randomizeSuggestions();\n                setMessages([{\n                  role: 'assistant',\n                  text: 'Hello 👋! How may I assist you?'\n                }]);\n                localStorage.removeItem('chatMessages');\n                setFeedback({});\n                setClarifySuggestions([]);\n                setClarifyMode(false);\n              },\n              title: \"Clear chat\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Clear chat\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsExpanded(prev => !prev),\n              title: isExpanded ? 'Collapse window' : 'Expand window',\n              className: \"header-action-btn\",\n              \"aria-label\": isExpanded ? 'Collapse window' : 'Expand window',\n              children: isExpanded ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"8 3 3 3 3 8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"3\",\n                  x2: \"10\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"16 21 21 21 21 16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"21\",\n                  x2: \"14\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"15 3 21 3 21 9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"3\",\n                  x2: \"14\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"9 21 3 21 3 15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"21\",\n                  x2: \"10\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chatbox\",\n        ref: chatRef,\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n          style: {\n            justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-bubble ${msg.role}`,\n            children: renderChatBubbleContent(msg)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 17\n          }, this), msg.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-row\",\n            children: [feedback[idx] === undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'up'),\n                  \"aria-label\": \"Thumbs up\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as not helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'down'),\n                  \"aria-label\": \"Thumbs down\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true), feedback[idx] === 'up' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as helpful!\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected up\",\n                \"aria-label\": \"Thumbs up\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 23\n            }, this), feedback[idx] === 'down' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as not helpful\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected down\",\n                \"aria-label\": \"Thumbs down\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 15\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chat incoming\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bubble assistant\",\n            children: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }, this), clarifyMode && renderClarifySuggestions(), !clarifyMode && renderHardcodedSuggestions(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: inputRef,\n          placeholder: \"Ask me anything...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              handleSendMessage(input);\n            }\n          },\n          rows: 1,\n          className: \"chat-input-textarea\",\n          style: {\n            overflow: 'hidden',\n            resize: 'none'\n          },\n          disabled: isTyping,\n          autoFocus: isOpen,\n          \"aria-label\": \"Type your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSendMessage(input),\n          title: \"Send message\",\n          className: `send-button${input.trim() ? \" has-text\" : \"\"}`,\n          disabled: isTyping || !input.trim(),\n          \"aria-label\": \"Send\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            height: \"22\",\n            width: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            style: {\n              display: \"block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M4 20L20 12L4 4V10L16 12L4 14V20Z\",\n              fill: \"currentColor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 11\n      }, this), toast.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toast toast-${toast.type}`,\n        onClick: () => setToast(t => ({\n          ...t,\n          visible: false\n        })),\n        style: {\n          cursor: 'pointer'\n        },\n        children: toast.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chatbot-footer\",\n        children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ZSIcon,\n          alt: \"ZS Associates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"+Q9glax/Exi/DuThuJlD59+zTTU=\");\n_c3 = ChatBot;\nexport default ChatBot;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TypingIndicator\");\n$RefreshReg$(_c2, \"Tooltip\");\n$RefreshReg$(_c3, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotIcon","ZSIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","HARDCODED_ANSWERS","HARDCODED_SUGGESTIONS","parseCustomAgent2Output","responseText","startsWith","match","obj","JSON","parse","output","e","formatSnowflakeResponse","json","columns","resultSetMetaData","rowType","map","col","name","rowtype","data","Array","isArray","length","type","error","value","code","message","toLowerCase","includes","extractSQLBlock","text","trim","TypingIndicator","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Tooltip","_c2","ChatBot","_s","messages","setMessages","saved","localStorage","getItem","role","feedback","setFeedback","suggestionIndex","setSuggestionIndex","stored","parseInt","input","setInput","isOpen","setIsOpen","darkMode","setDarkMode","isExpanded","setIsExpanded","toast","setToast","visible","isTyping","setIsTyping","clarifySuggestions","setClarifySuggestions","clarifyMode","setClarifyMode","chatRef","inputRef","randomizeSuggestions","newIndex","Math","floor","random","setItem","toString","numSuggestions","visibleSuggestions","fill","_","i","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","scrollLeft","timer","setTimeout","t","clearTimeout","showToast","msg","handleSendMessage","userMessage","fromSuggestion","cleaned","matchedKey","Object","keys","find","k","updatedMessages","stringify","response","fetch","method","headers","body","assistant_message","finalized","prev","finalPrompt","test","replace","sql","statement","snowflakeRes","parsedAgentOutput","formatted","handleSuggestionToInput","sugg","focus","handleFeedback","idx","toggleTheme","handleCopy","navigator","clipboard","writeText","renderChatBubbleContent","h","colSpan","style","textAlign","color","row","ridx","cell","cidx","whiteSpace","fontFamily","undefined","parsed","paddingLeft","margin","item","fontWeight","sqlBlock","position","marginBottom","borderRadius","background","padding","fontSize","overflowX","right","border","cursor","onClick","title","marginTop","split","line","renderClarifySuggestions","renderHardcodedSuggestions","s","max","marginLeft","alignSelf","height","width","minHeight","bottom","zIndex","src","alt","viewBox","cx","cy","r","stroke","strokeWidth","x1","y1","x2","y2","d","removeItem","strokeLinecap","strokeLinejoin","points","ref","justifyContent","tabIndex","placeholder","onChange","target","onKeyDown","key","shiftKey","preventDefault","rows","overflow","resize","disabled","autoFocus","display","_c3","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE, LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\n\nconst HARDCODED_SUGGESTIONS = [\n  \"Which universes do we show in Accounts calculation?\",\n  \"Where can I find TRX Sales trends overtime?\",\n  \"Where can I find top 10 Gainer Prescriber over time?\",\n  \"What is Formulary Status?\",\n  \"What are the number of current monthly suggestion KPIs?\",\n  \"Which dossier gives a detailed analysis about the Payors?\",\n  \"Where can I find explanations about different KPIs?\",\n  \"What is MKT % LIS?\",\n  \"Are any physicians' sales dropped at a geo level?\"\n];\n\n// Helper: Parse CUSTOM_AGENT2 output\nfunction parseCustomAgent2Output(responseText) {\n  if (typeof responseText === \"string\" && responseText.startsWith(\"CUSTOM_AGENT2\")) {\n    const match = responseText.match(/CUSTOM_AGENT2\\s*({[\\s\\S]+})/);\n    if (match) {\n      try {\n        const obj = JSON.parse(match[1]);\n        if (obj && obj.output) return obj.output;\n      } catch (e) {}\n    }\n  }\n  return null;\n}\n\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    const columns =\n      (json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name)) ||\n      (json.rowType && json.rowType.map(col => col.name)) ||\n      (json.rowtype && json.rowtype.map(col => col.name)) ||\n      (json.columns && json.columns.map(col => col.name));\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return { type: \"error\", value: \"❌ Error: \" + json.error };\n    if (\n      json.code &&\n      json.code !== \"000000\" &&\n      (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))\n    ) {\n      return { type: \"error\", value: `❌ Error: ${json.code} - ${json.message}` };\n    }\n    if (json.message) return { type: \"output\", value: json.message };\n    return { type: \"output\", value: \"No data found.\" };\n  } catch {\n    return { type: \"error\", value: responseText || \"No response from backend.\" };\n  }\n}\n\nfunction extractSQLBlock(text) {\n  const match = text && text.match(/```sql\\s*([\\s\\S]*?)```/i);\n  return match ? match[1].trim() : null;\n}\n\nfunction TypingIndicator() {\n  return (\n    <span className=\"typing-indicator\">\n      <span></span><span></span><span></span>\n    </span>\n  );\n}\n\nconst Tooltip = ({ children, text }) => (\n  <span className=\"feedback-tooltip\">\n    {children}\n    <span className=\"feedback-tooltiptext\">{text}</span>\n  </span>\n);\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }];\n  });\n\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({ message: '', type: 'info', visible: false });\n  const [isTyping, setIsTyping] = useState(false);\n\n  // Clarify/refine state\n  const [clarifySuggestions, setClarifySuggestions] = useState([]);\n  const [clarifyMode, setClarifyMode] = useState(false);\n\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Suggestion randomizer for clear chat\n  const randomizeSuggestions = () => {\n    let newIndex = Math.floor(Math.random() * HARDCODED_SUGGESTIONS.length);\n    if (HARDCODED_SUGGESTIONS.length > 1 && newIndex === suggestionIndex) {\n      newIndex = (newIndex + 1) % HARDCODED_SUGGESTIONS.length;\n    }\n    setSuggestionIndex(newIndex);\n    localStorage.setItem('suggestionIndex', newIndex.toString());\n  };\n\n  const numSuggestions = isExpanded ? 4 : 2;\n  const visibleSuggestions = Array(numSuggestions)\n    .fill(0)\n    .map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n\n  useEffect(() => {\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\n  }, [messages, isTyping, isOpen, isExpanded, clarifySuggestions]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({ ...t, visible: false }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n\n  const showToast = (msg, type) => {\n    setToast({ message: msg, type: type, visible: true });\n  };\n\n  // Handles user sending a message, always goes through clarify/LLM\n  const handleSendMessage = async (userMessage, fromSuggestion = false) => {\n    if (!userMessage || typeof userMessage !== \"string\" || !userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // HARDCODED ANSWERS (instant, no LLM)\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      setIsTyping(false);\n      setClarifySuggestions([]);\n      setClarifyMode(false);\n      const updatedMessages = [...messages, { role: 'user', text: userMessage }, { role: 'assistant', text: HARDCODED_ANSWERS[matchedKey] }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // Always send message to clarify endpoint\n    const updatedMessages = [...messages, { role: 'user', text: userMessage }];\n    setMessages(updatedMessages);\n\n    try {\n      const response = await fetch('http://localhost:4000/api/clarify', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userMessage })\n      });\n      const { assistant_message, finalized } = await response.json();\n\n      // If finalized, auto-send to snowflake!\n      if (finalized) {\n        setClarifySuggestions([]);\n        setClarifyMode(false);\n        setMessages(prev => [...prev, { role: 'assistant', text: assistant_message }]);\n        setIsTyping(true);\n\n        // Unwrap the query from quotes if needed\n        let finalPrompt = assistant_message;\n        if (typeof finalPrompt === \"string\" && /^[\"“”'].*[\"“”']$/.test(finalPrompt.trim())) {\n          finalPrompt = finalPrompt.trim().replace(/^[\"“”']|[\"“”']$/g, \"\");\n        }\n\n        // Now send to snowflake agent\n        let sql = extractSQLBlock(finalPrompt) || finalPrompt;\n        let body = { statement: `CALL CUSTOM_AGENT2('${sql.replace(/'/g, \"''\")}')` };\n        const snowflakeRes = await fetch('http://localhost:4000/api/snowflake', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(body)\n        });\n        const responseText = await snowflakeRes.text();\n\n        // Use the helper to ONLY show output if present\n        const parsedAgentOutput = parseCustomAgent2Output(responseText);\n\n        setIsTyping(false);\n\n        if (parsedAgentOutput) {\n          setMessages(prev => [\n            ...prev,\n            { role: \"assistant\", text: parsedAgentOutput }\n          ]);\n        } else {\n          const formatted = formatSnowflakeResponse(responseText);\n          setMessages(prev => [\n            ...prev,\n            { role: \"assistant\", text: formatted }\n          ]);\n        }\n        return;\n      } else {\n        setClarifyMode(true);\n        setIsTyping(false);\n        setClarifySuggestions([]); // Not used right now\n        setMessages(prev => [...prev, { role: 'assistant', text: assistant_message }]);\n        return;\n      }\n    } catch (error) {\n      setIsTyping(false);\n      setClarifySuggestions([]);\n      setClarifyMode(false);\n      setMessages(prev => [...prev, { role: 'assistant', text: \"Sorry, I couldn't process your query. Please try again.\" }]);\n      return;\n    }\n  };\n\n  // Suggestion click just fills the input field, not send\n  const handleSuggestionToInput = (sugg) => {\n    setInput(sugg);\n    if (inputRef.current) inputRef.current.focus();\n  };\n\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({ ...prev, [idx]: type }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text);\n    showToast('Copied to clipboard!', 'success');\n  };\n\n  const renderChatBubbleContent = (msg) => {\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return (\n          <table className=\"snowflake-table\">\n            <thead>\n              <tr>\n                {obj.columns.map((h, i) => <th key={i}>{h}</th>)}\n              </tr>\n            </thead>\n            <tbody>\n              {obj.data.length === 0 ? (\n                <tr>\n                  <td colSpan={obj.columns.length} style={{ textAlign: 'center', color: '#888' }}>(no results)</td>\n                </tr>\n              ) : obj.data.map((row, ridx) => (\n                <tr key={ridx}>\n                  {row.map((cell, cidx) => (\n                    <td key={cidx} style={{\n                      whiteSpace: 'pre-wrap',\n                      fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                    }}>\n                      {(() => {\n                        try {\n                          if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                            const parsed = JSON.parse(cell);\n                            if (Array.isArray(parsed)) {\n                              return (\n                                <ul style={{ paddingLeft: '18px', margin: 0 }}>\n                                  {parsed.map((item, idx) => <li key={idx}>{item}</li>)}\n                                </ul>\n                              );\n                            }\n                            if (typeof parsed === 'object') {\n                              return <pre>{JSON.stringify(parsed, null, 2)}</pre>;\n                            }\n                          }\n                          return cell;\n                        } catch {\n                          return cell;\n                        }\n                      })()}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        );\n      }\n      if (obj.type === \"output\") {\n        return <div>{obj.value}</div>;\n      }\n      if (obj.type === \"error\") {\n        return <span style={{ color: \"#b91c1c\", fontWeight: 500 }}>{obj.value}</span>;\n      }\n      return <pre>{JSON.stringify(obj.value, null, 2)}</pre>;\n    }\n    // SQL/code blocks\n    if (typeof msg.text === \"string\") {\n      const sqlBlock = extractSQLBlock(msg.text);\n      if (sqlBlock) {\n        return (\n          <div className=\"assistant-output-block\" style={{ position: 'relative', marginBottom: 6 }}>\n            <div style={{ fontWeight: 600, marginBottom: 8 }}>Snowflake SQL Query:</div>\n            <pre className=\"assistant-sql-block\" style={{\n              marginBottom: 8,\n              borderRadius: 12,\n              background: '#f5f2fd',\n              padding: 15,\n              fontSize: 14,\n              overflowX: 'auto'\n            }}>{sqlBlock}</pre>\n            <button\n              style={{\n                position: 'absolute',\n                top: 8,\n                right: 8,\n                border: 'none',\n                background: '#ede7fa',\n                borderRadius: 7,\n                padding: '3px 10px',\n                fontSize: 13,\n                color: '#5233c0',\n                cursor: 'pointer'\n              }}\n              onClick={() => handleCopy(sqlBlock)}\n              title=\"Copy SQL\"\n            >\n              Copy\n            </button>\n            <div style={{ color: '#444', marginTop: 10, fontSize: 14 }}>\n              {msg.text.replace(/```sql[\\s\\S]*?```/i, '').trim()}\n            </div>\n          </div>\n        );\n      }\n    }\n    return (msg.text || \"\").split('\\n').map((line, i) => (\n      <div key={i}>{line}</div>\n    ));\n  };\n\n  // Suggestions during clarify/refine (optional: for now, not shown since LLM doesn’t return them)\n  const renderClarifySuggestions = () => (\n    clarifySuggestions.length === 0 ? null :\n    <div className=\"clarify-suggestion-block\">\n      <div className=\"clarify-section-label\">Suggestions:</div>\n      <div className=\"suggestions\">\n        {clarifySuggestions.map((sugg, idx) => (\n          <button\n            key={idx}\n            className=\"suggestion-button\"\n            onClick={() => handleSuggestionToInput(sugg)}\n          >{sugg}</button>\n        ))}\n      </div>\n    </div>\n  );\n\n  // Static suggestions (before clarify starts)\n  const renderHardcodedSuggestions = () => (\n    <div className=\"suggestions\" style={{ position: \"relative\" }}>\n      {visibleSuggestions.map((s, i) => (\n        <button\n          key={i}\n          onClick={() => handleSendMessage(s, true)}\n          className=\"suggestion-button\"\n        >\n          {s}\n        </button>\n      ))}\n      {!isExpanded &&\n        <button\n          className=\"suggestion-arrow right\"\n          aria-label=\"Next suggestions\"\n          onClick={() => {\n            const max = HARDCODED_SUGGESTIONS.length;\n            setSuggestionIndex((prev) => (prev + 1) % max);\n            localStorage.setItem(\n              \"suggestionIndex\",\n              ((suggestionIndex + 1) % max).toString()\n            );\n          }}\n          style={{\n            border: \"none\",\n            background: \"none\",\n            cursor: \"pointer\",\n            fontSize: 20,\n            marginLeft: 7,\n            color: \"#7c3aed\",\n            alignSelf: \"center\",\n            height: 28,\n            width: 28\n          }}\n        >&#8594;</button>\n      }\n    </div>\n  );\n\n  return (\n    <div style={{ background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)', minHeight: '100vh' }}>\n      <button\n        className=\"chatbot-toggler modern-toggler\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Toggle chatbot\"\n        style={{ position: 'fixed', right: '20px', bottom: '20px', zIndex: 10000 }}>\n        {isOpen ? '✖' : <img src={ChatbotIcon} alt=\"Chatbot\" style={{ width: 48, height: 48 }} />}\n      </button>\n      {isOpen && (\n        <div\n          className={\n            `chatbot modern-chatbot` +\n            (darkMode ? ' dark-mode' : '') +\n            (isExpanded ? ' expanded' : ' collapsed')\n          }\n        >\n          <header className=\"chatbot-header\">\n            <span className=\"header-title\">\n              Field Insights<span className=\"header-title-gradient\"> Assistant</span>\n            </span>\n            <div className=\"header-controls\">\n              <div className=\"header-actions\">\n                <button onClick={toggleTheme} title=\"Toggle theme\" className=\"header-action-btn\" aria-label=\"Toggle theme\">\n                  {darkMode ? (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <circle cx=\"12\" cy=\"12\" r=\"5\" fill=\"#7c3aed\" />\n                      <g stroke=\"#7c3aed\" strokeWidth=\"2\">\n                        <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"5\" />\n                        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"22\" />\n                        <line x1=\"4.22\" y1=\"4.22\" x2=\"6.34\" y2=\"6.34\" />\n                        <line x1=\"17.66\" y1=\"17.66\" x2=\"19.78\" y2=\"19.78\" />\n                        <line x1=\"2\" y1=\"12\" x2=\"5\" y2=\"12\" />\n                        <line x1=\"19\" y1=\"12\" x2=\"22\" y2=\"12\" />\n                        <line x1=\"4.22\" y1=\"19.78\" x2=\"6.34\" y2=\"17.66\" />\n                        <line x1=\"17.66\" y1=\"6.34\" x2=\"19.78\" y2=\"4.22\" />\n                      </g>\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <path d=\"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\" fill=\"#7c3aed\" />\n                    </svg>\n                  )}\n                </button>\n                <button\n                  onClick={() => {\n                    randomizeSuggestions();\n                    setMessages([{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }]);\n                    localStorage.removeItem('chatMessages');\n                    setFeedback({});\n                    setClarifySuggestions([]);\n                    setClarifyMode(false);\n                  }}\n                  title=\"Clear chat\"\n                  className=\"header-action-btn\"\n                  aria-label=\"Clear chat\"\n                >\n                  <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                    <path d=\"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                  </svg>\n                </button>\n                <button\n                  onClick={() => setIsExpanded((prev) => !prev)}\n                  title={isExpanded ? 'Collapse window' : 'Expand window'}\n                  className=\"header-action-btn\"\n                  aria-label={isExpanded ? 'Collapse window' : 'Expand window'}\n                >\n                  {isExpanded ? (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"8 3 3 3 3 8\" />\n                      <line x1=\"3\" y1=\"3\" x2=\"10\" y2=\"10\" />\n                      <polyline points=\"16 21 21 21 21 16\" />\n                      <line x1=\"21\" y1=\"21\" x2=\"14\" y2=\"14\" />\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"15 3 21 3 21 9\" />\n                      <line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\" />\n                      <polyline points=\"9 21 3 21 3 15\" />\n                      <line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n            </div>\n          </header>\n          <ul className=\"chatbox\" ref={chatRef}>\n            {messages.map((msg, idx) => (\n              <li\n                key={idx}\n                className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}\n                style={{ justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start' }}\n              >\n                <div className={`chat-bubble ${msg.role}`}>\n                  {renderChatBubbleContent(msg)}\n                </div>\n                {msg.role === 'assistant' && (\n                  <div className=\"feedback-row\">\n                    {feedback[idx] === undefined && (\n                      <>\n                        <Tooltip text=\"Mark as helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'up')}\n                            aria-label=\"Thumbs up\"\n                            tabIndex={0}\n                          >👍</button>\n                        </Tooltip>\n                        <Tooltip text=\"Mark as not helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'down')}\n                            aria-label=\"Thumbs down\"\n                            tabIndex={0}\n                          >👎</button>\n                        </Tooltip>\n                      </>\n                    )}\n                    {feedback[idx] === 'up' && (\n                      <Tooltip text=\"Marked as helpful!\">\n                        <button className=\"feedback-btn selected up\" aria-label=\"Thumbs up\" tabIndex={0}>👍</button>\n                      </Tooltip>\n                    )}\n                    {feedback[idx] === 'down' && (\n                      <Tooltip text=\"Marked as not helpful\">\n                        <button className=\"feedback-btn selected down\" aria-label=\"Thumbs down\" tabIndex={0}>👎</button>\n                      </Tooltip>\n                    )}\n                  </div>\n                )}\n              </li>\n            ))}\n            {isTyping && (\n              <li className=\"chat incoming\">\n                <div className=\"chat-bubble assistant\">\n                  <TypingIndicator />\n                </div>\n              </li>\n            )}\n          </ul>\n          {/* Suggestions panel after OpenAI clarify */}\n          {clarifyMode && renderClarifySuggestions()}\n          {/* If not in clarify/refinement, show static suggestions */}\n          {!clarifyMode && renderHardcodedSuggestions()}\n          {/* Main input is always present */}\n          <div className=\"chat-input\">\n            <textarea\n              ref={inputRef}\n              placeholder=\"Ask me anything...\"\n              value={input}\n              onChange={e => setInput(e.target.value)}\n              onKeyDown={e => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage(input);\n                }\n              }}\n              rows={1}\n              className=\"chat-input-textarea\"\n              style={{ overflow: 'hidden', resize: 'none' }}\n              disabled={isTyping}\n              autoFocus={isOpen}\n              aria-label=\"Type your message\"\n            />\n            <button\n              onClick={() => handleSendMessage(input)}\n              title=\"Send message\"\n              className={`send-button${input.trim() ? \" has-text\" : \"\"}`}\n              disabled={isTyping || !input.trim()}\n              aria-label=\"Send\"\n            >\n              <svg height=\"22\" width=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ display: \"block\" }}>\n                <path d=\"M4 20L20 12L4 4V10L16 12L4 14V20Z\" fill=\"currentColor\" />\n              </svg>\n            </button>\n          </div>\n          {toast.visible && (\n            <div\n              className={`toast toast-${toast.type}`}\n              onClick={() => setToast(t => ({ ...t, visible: false }))}\n              style={{ cursor: 'pointer' }}\n            >\n              {toast.message}\n            </div>\n          )}\n          <footer className=\"chatbot-footer\">\n            Powered by <img src={ZSIcon} alt=\"ZS Associates\" />\n          </footer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,qBAAqB;AAC5B,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,MAAM,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,iBAAiB,GAAG;EACxB,sDAAsD,EAAE,oEAAoE;EAC5H,2BAA2B,EAAE,8GAA8G;EAC3I,wDAAwD,EAAE,0EAA0E;EACpI,2DAA2D,EAAE,kFAAkF;EAC/I,qDAAqD,EAAE,0FAA0F;EACjJ,oBAAoB,EAAE,iNAAiN;EACvO,qDAAqD,EAAE,gHAAgH;EACvK,6CAA6C,EAAE,2FAA2F;EAC1I,mDAAmD,EAAE;AACvD,CAAC;AAED,MAAMC,qBAAqB,GAAG,CAC5B,qDAAqD,EACrD,6CAA6C,EAC7C,sDAAsD,EACtD,2BAA2B,EAC3B,yDAAyD,EACzD,2DAA2D,EAC3D,qDAAqD,EACrD,oBAAoB,EACpB,mDAAmD,CACpD;;AAED;AACA,SAASC,uBAAuBA,CAACC,YAAY,EAAE;EAC7C,IAAI,OAAOA,YAAY,KAAK,QAAQ,IAAIA,YAAY,CAACC,UAAU,CAAC,eAAe,CAAC,EAAE;IAChF,MAAMC,KAAK,GAAGF,YAAY,CAACE,KAAK,CAAC,6BAA6B,CAAC;IAC/D,IAAIA,KAAK,EAAE;MACT,IAAI;QACF,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,IAAIC,GAAG,IAAIA,GAAG,CAACG,MAAM,EAAE,OAAOH,GAAG,CAACG,MAAM;MAC1C,CAAC,CAAC,OAAOC,CAAC,EAAE,CAAC;IACf;EACF;EACA,OAAO,IAAI;AACb;AAEA,SAASC,uBAAuBA,CAACR,YAAY,EAAE;EAC7C,IAAI;IACF,IAAIS,IAAI,GAAG,OAAOT,YAAY,KAAK,QAAQ,GAAGI,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC,GAAGA,YAAY;IACrF,MAAMU,OAAO,GACVD,IAAI,CAACE,iBAAiB,IAAIF,IAAI,CAACE,iBAAiB,CAACC,OAAO,IAAIH,IAAI,CAACE,iBAAiB,CAACC,OAAO,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,IAC/GN,IAAI,CAACG,OAAO,IAAIH,IAAI,CAACG,OAAO,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAE,IAClDN,IAAI,CAACO,OAAO,IAAIP,IAAI,CAACO,OAAO,CAACH,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAE,IAClDN,IAAI,CAACC,OAAO,IAAID,IAAI,CAACC,OAAO,CAACG,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAE;IACrD,MAAME,IAAI,GAAGR,IAAI,CAACQ,IAAI;IACtB,IAAIC,KAAK,CAACC,OAAO,CAACT,OAAO,CAAC,IAAIA,OAAO,CAACU,MAAM,GAAG,CAAC,IAAIF,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;MACvE,OAAO;QACLI,IAAI,EAAE,OAAO;QACbX,OAAO;QACPO;MACF,CAAC;IACH;IACA,IAAIR,IAAI,CAACa,KAAK,EAAE,OAAO;MAAED,IAAI,EAAE,OAAO;MAAEE,KAAK,EAAE,WAAW,GAAGd,IAAI,CAACa;IAAM,CAAC;IACzE,IACEb,IAAI,CAACe,IAAI,IACTf,IAAI,CAACe,IAAI,KAAK,QAAQ,KACrB,CAACf,IAAI,CAACgB,OAAO,IAAI,CAAChB,IAAI,CAACgB,OAAO,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,uBAAuB,CAAC,CAAC,EAChF;MACA,OAAO;QAAEN,IAAI,EAAE,OAAO;QAAEE,KAAK,EAAE,YAAYd,IAAI,CAACe,IAAI,MAAMf,IAAI,CAACgB,OAAO;MAAG,CAAC;IAC5E;IACA,IAAIhB,IAAI,CAACgB,OAAO,EAAE,OAAO;MAAEJ,IAAI,EAAE,QAAQ;MAAEE,KAAK,EAAEd,IAAI,CAACgB;IAAQ,CAAC;IAChE,OAAO;MAAEJ,IAAI,EAAE,QAAQ;MAAEE,KAAK,EAAE;IAAiB,CAAC;EACpD,CAAC,CAAC,MAAM;IACN,OAAO;MAAEF,IAAI,EAAE,OAAO;MAAEE,KAAK,EAAEvB,YAAY,IAAI;IAA4B,CAAC;EAC9E;AACF;AAEA,SAAS4B,eAAeA,CAACC,IAAI,EAAE;EAC7B,MAAM3B,KAAK,GAAG2B,IAAI,IAAIA,IAAI,CAAC3B,KAAK,CAAC,yBAAyB,CAAC;EAC3D,OAAOA,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC4B,IAAI,CAAC,CAAC,GAAG,IAAI;AACvC;AAEA,SAASC,eAAeA,CAAA,EAAG;EACzB,oBACErC,OAAA;IAAMsC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAChCvC,OAAA;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAAA3C,OAAA;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAAA3C,OAAA;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX;AAACC,EAAA,GANQP,eAAe;AAQxB,MAAMQ,OAAO,GAAGA,CAAC;EAAEN,QAAQ;EAAEJ;AAAK,CAAC,kBACjCnC,OAAA;EAAMsC,SAAS,EAAC,kBAAkB;EAAAC,QAAA,GAC/BA,QAAQ,eACTvC,OAAA;IAAMsC,SAAS,EAAC,sBAAsB;IAAAC,QAAA,EAAEJ;EAAI;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAChD,CACP;AAACG,GAAA,GALID,OAAO;AAOb,MAAME,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtD,QAAQ,CAAC,MAAM;IAC7C,MAAMuD,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,IAAIF,KAAK,EAAE,OAAOzC,IAAI,CAACC,KAAK,CAACwC,KAAK,CAAC;IACnC,OAAO,CAAC;MAAEG,IAAI,EAAE,WAAW;MAAEnB,IAAI,EAAE;IAAkC,CAAC,CAAC;EACzE,CAAC,CAAC;EAEF,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAG5D,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAAC6D,eAAe,EAAEC,kBAAkB,CAAC,GAAG9D,QAAQ,CAAC,MAAM;IAC3D,MAAM+D,MAAM,GAAGP,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IACtD,OAAOM,MAAM,GAAGC,QAAQ,CAACD,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC;EAC1C,CAAC,CAAC;EACF,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGlE,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmE,MAAM,EAAEC,SAAS,CAAC,GAAGpE,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACqE,QAAQ,EAAEC,WAAW,CAAC,GAAGtE,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACuE,UAAU,EAAEC,aAAa,CAAC,GAAGxE,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACyE,KAAK,EAAEC,QAAQ,CAAC,GAAG1E,QAAQ,CAAC;IAAEmC,OAAO,EAAE,EAAE;IAAEJ,IAAI,EAAE,MAAM;IAAE4C,OAAO,EAAE;EAAM,CAAC,CAAC;EACjF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG7E,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAM,CAAC8E,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG/E,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACgF,WAAW,EAAEC,cAAc,CAAC,GAAGjF,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMkF,OAAO,GAAGnF,MAAM,CAAC,CAAC;EACxB,MAAMoF,QAAQ,GAAGpF,MAAM,CAAC,CAAC;;EAEzB;EACA,MAAMqF,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGhF,qBAAqB,CAACsB,MAAM,CAAC;IACvE,IAAItB,qBAAqB,CAACsB,MAAM,GAAG,CAAC,IAAIuD,QAAQ,KAAKxB,eAAe,EAAE;MACpEwB,QAAQ,GAAG,CAACA,QAAQ,GAAG,CAAC,IAAI7E,qBAAqB,CAACsB,MAAM;IAC1D;IACAgC,kBAAkB,CAACuB,QAAQ,CAAC;IAC5B7B,YAAY,CAACiC,OAAO,CAAC,iBAAiB,EAAEJ,QAAQ,CAACK,QAAQ,CAAC,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMC,cAAc,GAAGpB,UAAU,GAAG,CAAC,GAAG,CAAC;EACzC,MAAMqB,kBAAkB,GAAGhE,KAAK,CAAC+D,cAAc,CAAC,CAC7CE,IAAI,CAAC,CAAC,CAAC,CACPtE,GAAG,CAAC,CAACuE,CAAC,EAAEC,CAAC,KAAKvF,qBAAqB,CAAC,CAACqD,eAAe,GAAGkC,CAAC,IAAIvF,qBAAqB,CAACsB,MAAM,CAAC,CAAC;EAE7FhC,SAAS,CAAC,MAAM;IAAA,IAAAkG,gBAAA;IACd,CAAAA,gBAAA,GAAAd,OAAO,CAACe,OAAO,cAAAD,gBAAA,uBAAfA,gBAAA,CAAiBE,QAAQ,CAAC;MAAEC,GAAG,EAAEjB,OAAO,CAACe,OAAO,CAACG,YAAY;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EACtF,CAAC,EAAE,CAAChD,QAAQ,EAAEuB,QAAQ,EAAET,MAAM,EAAEI,UAAU,EAAEO,kBAAkB,CAAC,CAAC;EAEhEhF,SAAS,CAAC,MAAM;IACd,IAAIqF,QAAQ,CAACc,OAAO,EAAE;MACpBd,QAAQ,CAACc,OAAO,CAACK,UAAU,GAAGnB,QAAQ,CAACc,OAAO,CAAChE,KAAK,CAACH,MAAM,GAAG,CAAC;IACjE;EACF,CAAC,EAAE,CAACmC,KAAK,CAAC,CAAC;EAEXnE,SAAS,CAAC,MAAM;IACd,IAAI2E,KAAK,CAACE,OAAO,EAAE;MACjB,MAAM4B,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7B9B,QAAQ,CAAC+B,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAE9B,OAAO,EAAE;QAAM,CAAC,CAAC,CAAC;MAC3C,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAM+B,YAAY,CAACH,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAAC9B,KAAK,CAACE,OAAO,CAAC,CAAC;EAEnB,MAAMgC,SAAS,GAAGA,CAACC,GAAG,EAAE7E,IAAI,KAAK;IAC/B2C,QAAQ,CAAC;MAAEvC,OAAO,EAAEyE,GAAG;MAAE7E,IAAI,EAAEA,IAAI;MAAE4C,OAAO,EAAE;IAAK,CAAC,CAAC;EACvD,CAAC;;EAED;EACA,MAAMkC,iBAAiB,GAAG,MAAAA,CAAOC,WAAW,EAAEC,cAAc,GAAG,KAAK,KAAK;IACvE,IAAI,CAACD,WAAW,IAAI,OAAOA,WAAW,KAAK,QAAQ,IAAI,CAACA,WAAW,CAACtE,IAAI,CAAC,CAAC,EAAE;IAC5E0B,QAAQ,CAAC,EAAE,CAAC;IACZW,WAAW,CAAC,IAAI,CAAC;;IAEjB;IACA,MAAMmC,OAAO,GAAGF,WAAW,CAACtE,IAAI,CAAC,CAAC,CAACJ,WAAW,CAAC,CAAC;IAChD,MAAM6E,UAAU,GAAGC,MAAM,CAACC,IAAI,CAAC5G,iBAAiB,CAAC,CAAC6G,IAAI,CAACC,CAAC,IAAIL,OAAO,CAAC3E,QAAQ,CAACgF,CAAC,CAAC,CAAC;IAChF,IAAIJ,UAAU,EAAE;MACdpC,WAAW,CAAC,KAAK,CAAC;MAClBE,qBAAqB,CAAC,EAAE,CAAC;MACzBE,cAAc,CAAC,KAAK,CAAC;MACrB,MAAMqC,eAAe,GAAG,CAAC,GAAGjE,QAAQ,EAAE;QAAEK,IAAI,EAAE,MAAM;QAAEnB,IAAI,EAAEuE;MAAY,CAAC,EAAE;QAAEpD,IAAI,EAAE,WAAW;QAAEnB,IAAI,EAAEhC,iBAAiB,CAAC0G,UAAU;MAAE,CAAC,CAAC;MACtI3D,WAAW,CAACgE,eAAe,CAAC;MAC5B9D,YAAY,CAACiC,OAAO,CAAC,cAAc,EAAE3E,IAAI,CAACyG,SAAS,CAACD,eAAe,CAAC,CAAC;MACrE;IACF;;IAEA;IACA,MAAMA,eAAe,GAAG,CAAC,GAAGjE,QAAQ,EAAE;MAAEK,IAAI,EAAE,MAAM;MAAEnB,IAAI,EAAEuE;IAAY,CAAC,CAAC;IAC1ExD,WAAW,CAACgE,eAAe,CAAC;IAE5B,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAE9G,IAAI,CAACyG,SAAS,CAAC;UAAET;QAAY,CAAC;MACtC,CAAC,CAAC;MACF,MAAM;QAAEe,iBAAiB;QAAEC;MAAU,CAAC,GAAG,MAAMN,QAAQ,CAACrG,IAAI,CAAC,CAAC;;MAE9D;MACA,IAAI2G,SAAS,EAAE;QACb/C,qBAAqB,CAAC,EAAE,CAAC;QACzBE,cAAc,CAAC,KAAK,CAAC;QACrB3B,WAAW,CAACyE,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAAErE,IAAI,EAAE,WAAW;UAAEnB,IAAI,EAAEsF;QAAkB,CAAC,CAAC,CAAC;QAC9EhD,WAAW,CAAC,IAAI,CAAC;;QAEjB;QACA,IAAImD,WAAW,GAAGH,iBAAiB;QACnC,IAAI,OAAOG,WAAW,KAAK,QAAQ,IAAI,kBAAkB,CAACC,IAAI,CAACD,WAAW,CAACxF,IAAI,CAAC,CAAC,CAAC,EAAE;UAClFwF,WAAW,GAAGA,WAAW,CAACxF,IAAI,CAAC,CAAC,CAAC0F,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC;QAClE;;QAEA;QACA,IAAIC,GAAG,GAAG7F,eAAe,CAAC0F,WAAW,CAAC,IAAIA,WAAW;QACrD,IAAIJ,IAAI,GAAG;UAAEQ,SAAS,EAAE,uBAAuBD,GAAG,CAACD,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;QAAK,CAAC;QAC5E,MAAMG,YAAY,GAAG,MAAMZ,KAAK,CAAC,qCAAqC,EAAE;UACtEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAE9G,IAAI,CAACyG,SAAS,CAACK,IAAI;QAC3B,CAAC,CAAC;QACF,MAAMlH,YAAY,GAAG,MAAM2H,YAAY,CAAC9F,IAAI,CAAC,CAAC;;QAE9C;QACA,MAAM+F,iBAAiB,GAAG7H,uBAAuB,CAACC,YAAY,CAAC;QAE/DmE,WAAW,CAAC,KAAK,CAAC;QAElB,IAAIyD,iBAAiB,EAAE;UACrBhF,WAAW,CAACyE,IAAI,IAAI,CAClB,GAAGA,IAAI,EACP;YAAErE,IAAI,EAAE,WAAW;YAAEnB,IAAI,EAAE+F;UAAkB,CAAC,CAC/C,CAAC;QACJ,CAAC,MAAM;UACL,MAAMC,SAAS,GAAGrH,uBAAuB,CAACR,YAAY,CAAC;UACvD4C,WAAW,CAACyE,IAAI,IAAI,CAClB,GAAGA,IAAI,EACP;YAAErE,IAAI,EAAE,WAAW;YAAEnB,IAAI,EAAEgG;UAAU,CAAC,CACvC,CAAC;QACJ;QACA;MACF,CAAC,MAAM;QACLtD,cAAc,CAAC,IAAI,CAAC;QACpBJ,WAAW,CAAC,KAAK,CAAC;QAClBE,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3BzB,WAAW,CAACyE,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAAErE,IAAI,EAAE,WAAW;UAAEnB,IAAI,EAAEsF;QAAkB,CAAC,CAAC,CAAC;QAC9E;MACF;IACF,CAAC,CAAC,OAAO7F,KAAK,EAAE;MACd6C,WAAW,CAAC,KAAK,CAAC;MAClBE,qBAAqB,CAAC,EAAE,CAAC;MACzBE,cAAc,CAAC,KAAK,CAAC;MACrB3B,WAAW,CAACyE,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAErE,IAAI,EAAE,WAAW;QAAEnB,IAAI,EAAE;MAA0D,CAAC,CAAC,CAAC;MACtH;IACF;EACF,CAAC;;EAED;EACA,MAAMiG,uBAAuB,GAAIC,IAAI,IAAK;IACxCvE,QAAQ,CAACuE,IAAI,CAAC;IACd,IAAItD,QAAQ,CAACc,OAAO,EAAEd,QAAQ,CAACc,OAAO,CAACyC,KAAK,CAAC,CAAC;EAChD,CAAC;EAED,MAAMC,cAAc,GAAGA,CAACC,GAAG,EAAE7G,IAAI,KAAK;IACpC6B,WAAW,CAACmE,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACa,GAAG,GAAG7G;IAAK,CAAC,CAAC,CAAC;IAC/C4E,SAAS,CAAC5E,IAAI,KAAK,IAAI,GAAG,oBAAoB,GAAG,wBAAwB,EAAEA,IAAI,KAAK,IAAI,GAAG,SAAS,GAAG,OAAO,CAAC;EACjH,CAAC;EAED,MAAM8G,WAAW,GAAGA,CAAA,KAAMvE,WAAW,CAACyD,IAAI,IAAI,CAACA,IAAI,CAAC;EAEpD,MAAMe,UAAU,GAAIvG,IAAI,IAAK;IAC3BwG,SAAS,CAACC,SAAS,CAACC,SAAS,CAAC1G,IAAI,CAAC;IACnCoE,SAAS,CAAC,sBAAsB,EAAE,SAAS,CAAC;EAC9C,CAAC;EAED,MAAMuC,uBAAuB,GAAItC,GAAG,IAAK;IACvC,IAAI,OAAOA,GAAG,CAACrE,IAAI,KAAK,QAAQ,IAAIqE,GAAG,CAACrE,IAAI,KAAK,IAAI,EAAE;MACrD,MAAM1B,GAAG,GAAG+F,GAAG,CAACrE,IAAI;MACpB,IAAI1B,GAAG,CAACkB,IAAI,KAAK,OAAO,EAAE;QACxB,oBACE3B,OAAA;UAAOsC,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAChCvC,OAAA;YAAAuC,QAAA,eACEvC,OAAA;cAAAuC,QAAA,EACG9B,GAAG,CAACO,OAAO,CAACG,GAAG,CAAC,CAAC4H,CAAC,EAAEpD,CAAC,kBAAK3F,OAAA;gBAAAuC,QAAA,EAAawG;cAAC,GAALpD,CAAC;gBAAAnD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACR3C,OAAA;YAAAuC,QAAA,EACG9B,GAAG,CAACc,IAAI,CAACG,MAAM,KAAK,CAAC,gBACpB1B,OAAA;cAAAuC,QAAA,eACEvC,OAAA;gBAAIgJ,OAAO,EAAEvI,GAAG,CAACO,OAAO,CAACU,MAAO;gBAACuH,KAAK,EAAE;kBAAEC,SAAS,EAAE,QAAQ;kBAAEC,KAAK,EAAE;gBAAO,CAAE;gBAAA5G,QAAA,EAAC;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/F,CAAC,GACHlC,GAAG,CAACc,IAAI,CAACJ,GAAG,CAAC,CAACiI,GAAG,EAAEC,IAAI,kBACzBrJ,OAAA;cAAAuC,QAAA,EACG6G,GAAG,CAACjI,GAAG,CAAC,CAACmI,IAAI,EAAEC,IAAI,kBAClBvJ,OAAA;gBAAeiJ,KAAK,EAAE;kBACpBO,UAAU,EAAE,UAAU;kBACtBC,UAAU,EAAE,OAAOH,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAAClH,IAAI,CAAC,CAAC,CAAC7B,UAAU,CAAC,GAAG,CAAC,GAAG,WAAW,GAAGmJ;gBACtF,CAAE;gBAAAnH,QAAA,EACC,CAAC,MAAM;kBACN,IAAI;oBACF,IAAI,OAAO+G,IAAI,KAAK,QAAQ,KAAKA,IAAI,CAAClH,IAAI,CAAC,CAAC,CAAC7B,UAAU,CAAC,GAAG,CAAC,IAAI+I,IAAI,CAAClH,IAAI,CAAC,CAAC,CAAC7B,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;sBAC5F,MAAMoJ,MAAM,GAAGjJ,IAAI,CAACC,KAAK,CAAC2I,IAAI,CAAC;sBAC/B,IAAI9H,KAAK,CAACC,OAAO,CAACkI,MAAM,CAAC,EAAE;wBACzB,oBACE3J,OAAA;0BAAIiJ,KAAK,EAAE;4BAAEW,WAAW,EAAE,MAAM;4BAAEC,MAAM,EAAE;0BAAE,CAAE;0BAAAtH,QAAA,EAC3CoH,MAAM,CAACxI,GAAG,CAAC,CAAC2I,IAAI,EAAEtB,GAAG,kBAAKxI,OAAA;4BAAAuC,QAAA,EAAeuH;0BAAI,GAAVtB,GAAG;4BAAAhG,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAY,CAAC;wBAAC;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACnD,CAAC;sBAET;sBACA,IAAI,OAAOgH,MAAM,KAAK,QAAQ,EAAE;wBAC9B,oBAAO3J,OAAA;0BAAAuC,QAAA,EAAM7B,IAAI,CAACyG,SAAS,CAACwC,MAAM,EAAE,IAAI,EAAE,CAAC;wBAAC;0BAAAnH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC;sBACrD;oBACF;oBACA,OAAO2G,IAAI;kBACb,CAAC,CAAC,MAAM;oBACN,OAAOA,IAAI;kBACb;gBACF,CAAC,EAAE;cAAC,GAvBGC,IAAI;gBAAA/G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAwBT,CACL;YAAC,GA3BK0G,IAAI;cAAA7G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA4BT,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAEZ;MACA,IAAIlC,GAAG,CAACkB,IAAI,KAAK,QAAQ,EAAE;QACzB,oBAAO3B,OAAA;UAAAuC,QAAA,EAAM9B,GAAG,CAACoB;QAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAC/B;MACA,IAAIlC,GAAG,CAACkB,IAAI,KAAK,OAAO,EAAE;QACxB,oBAAO3B,OAAA;UAAMiJ,KAAK,EAAE;YAAEE,KAAK,EAAE,SAAS;YAAEY,UAAU,EAAE;UAAI,CAAE;UAAAxH,QAAA,EAAE9B,GAAG,CAACoB;QAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAC/E;MACA,oBAAO3C,OAAA;QAAAuC,QAAA,EAAM7B,IAAI,CAACyG,SAAS,CAAC1G,GAAG,CAACoB,KAAK,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACxD;IACA;IACA,IAAI,OAAO6D,GAAG,CAACrE,IAAI,KAAK,QAAQ,EAAE;MAChC,MAAM6H,QAAQ,GAAG9H,eAAe,CAACsE,GAAG,CAACrE,IAAI,CAAC;MAC1C,IAAI6H,QAAQ,EAAE;QACZ,oBACEhK,OAAA;UAAKsC,SAAS,EAAC,wBAAwB;UAAC2G,KAAK,EAAE;YAAEgB,QAAQ,EAAE,UAAU;YAAEC,YAAY,EAAE;UAAE,CAAE;UAAA3H,QAAA,gBACvFvC,OAAA;YAAKiJ,KAAK,EAAE;cAAEc,UAAU,EAAE,GAAG;cAAEG,YAAY,EAAE;YAAE,CAAE;YAAA3H,QAAA,EAAC;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5E3C,OAAA;YAAKsC,SAAS,EAAC,qBAAqB;YAAC2G,KAAK,EAAE;cAC1CiB,YAAY,EAAE,CAAC;cACfC,YAAY,EAAE,EAAE;cAChBC,UAAU,EAAE,SAAS;cACrBC,OAAO,EAAE,EAAE;cACXC,QAAQ,EAAE,EAAE;cACZC,SAAS,EAAE;YACb,CAAE;YAAAhI,QAAA,EAAEyH;UAAQ;YAAAxH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACnB3C,OAAA;YACEiJ,KAAK,EAAE;cACLgB,QAAQ,EAAE,UAAU;cACpBlE,GAAG,EAAE,CAAC;cACNyE,KAAK,EAAE,CAAC;cACRC,MAAM,EAAE,MAAM;cACdL,UAAU,EAAE,SAAS;cACrBD,YAAY,EAAE,CAAC;cACfE,OAAO,EAAE,UAAU;cACnBC,QAAQ,EAAE,EAAE;cACZnB,KAAK,EAAE,SAAS;cAChBuB,MAAM,EAAE;YACV,CAAE;YACFC,OAAO,EAAEA,CAAA,KAAMjC,UAAU,CAACsB,QAAQ,CAAE;YACpCY,KAAK,EAAC,UAAU;YAAArI,QAAA,EACjB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT3C,OAAA;YAAKiJ,KAAK,EAAE;cAAEE,KAAK,EAAE,MAAM;cAAE0B,SAAS,EAAE,EAAE;cAAEP,QAAQ,EAAE;YAAG,CAAE;YAAA/H,QAAA,EACxDiE,GAAG,CAACrE,IAAI,CAAC2F,OAAO,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC1F,IAAI,CAAC;UAAC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAEV;IACF;IACA,OAAO,CAAC6D,GAAG,CAACrE,IAAI,IAAI,EAAE,EAAE2I,KAAK,CAAC,IAAI,CAAC,CAAC3J,GAAG,CAAC,CAAC4J,IAAI,EAAEpF,CAAC,kBAC9C3F,OAAA;MAAAuC,QAAA,EAAcwI;IAAI,GAARpF,CAAC;MAAAnD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CACzB,CAAC;EACJ,CAAC;;EAED;EACA,MAAMqI,wBAAwB,GAAGA,CAAA,KAC/BtG,kBAAkB,CAAChD,MAAM,KAAK,CAAC,GAAG,IAAI,gBACtC1B,OAAA;IAAKsC,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvCvC,OAAA;MAAKsC,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzD3C,OAAA;MAAKsC,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBmC,kBAAkB,CAACvD,GAAG,CAAC,CAACkH,IAAI,EAAEG,GAAG,kBAChCxI,OAAA;QAEEsC,SAAS,EAAC,mBAAmB;QAC7BqI,OAAO,EAAEA,CAAA,KAAMvC,uBAAuB,CAACC,IAAI,CAAE;QAAA9F,QAAA,EAC7C8F;MAAI,GAHCG,GAAG;QAAAhG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGK,CAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;;EAED;EACA,MAAMsI,0BAA0B,GAAGA,CAAA,kBACjCjL,OAAA;IAAKsC,SAAS,EAAC,aAAa;IAAC2G,KAAK,EAAE;MAAEgB,QAAQ,EAAE;IAAW,CAAE;IAAA1H,QAAA,GAC1DiD,kBAAkB,CAACrE,GAAG,CAAC,CAAC+J,CAAC,EAAEvF,CAAC,kBAC3B3F,OAAA;MAEE2K,OAAO,EAAEA,CAAA,KAAMlE,iBAAiB,CAACyE,CAAC,EAAE,IAAI,CAAE;MAC1C5I,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAE5B2I;IAAC,GAJGvF,CAAC;MAAAnD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKA,CACT,CAAC,EACD,CAACwB,UAAU,iBACVnE,OAAA;MACEsC,SAAS,EAAC,wBAAwB;MAClC,cAAW,kBAAkB;MAC7BqI,OAAO,EAAEA,CAAA,KAAM;QACb,MAAMQ,GAAG,GAAG/K,qBAAqB,CAACsB,MAAM;QACxCgC,kBAAkB,CAAEiE,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIwD,GAAG,CAAC;QAC9C/H,YAAY,CAACiC,OAAO,CAClB,iBAAiB,EACjB,CAAC,CAAC5B,eAAe,GAAG,CAAC,IAAI0H,GAAG,EAAE7F,QAAQ,CAAC,CACzC,CAAC;MACH,CAAE;MACF2D,KAAK,EAAE;QACLwB,MAAM,EAAE,MAAM;QACdL,UAAU,EAAE,MAAM;QAClBM,MAAM,EAAE,SAAS;QACjBJ,QAAQ,EAAE,EAAE;QACZc,UAAU,EAAE,CAAC;QACbjC,KAAK,EAAE,SAAS;QAChBkC,SAAS,EAAE,QAAQ;QACnBC,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE;MACT,CAAE;MAAAhJ,QAAA,EACH;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhB,CACN;EAED,oBACE3C,OAAA;IAAKiJ,KAAK,EAAE;MAAEmB,UAAU,EAAE,oDAAoD;MAAEoB,SAAS,EAAE;IAAQ,CAAE;IAAAjJ,QAAA,gBACnGvC,OAAA;MACEsC,SAAS,EAAC,gCAAgC;MAC1CqI,OAAO,EAAEA,CAAA,KAAM3G,SAAS,CAAC,CAACD,MAAM,CAAE;MAClC,cAAW,gBAAgB;MAC3BkF,KAAK,EAAE;QAAEgB,QAAQ,EAAE,OAAO;QAAEO,KAAK,EAAE,MAAM;QAAEiB,MAAM,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAM,CAAE;MAAAnJ,QAAA,EAC1EwB,MAAM,GAAG,GAAG,gBAAG/D,OAAA;QAAK2L,GAAG,EAAE9L,WAAY;QAAC+L,GAAG,EAAC,SAAS;QAAC3C,KAAK,EAAE;UAAEsC,KAAK,EAAE,EAAE;UAAED,MAAM,EAAE;QAAG;MAAE;QAAA9I,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,EACRoB,MAAM,iBACL/D,OAAA;MACEsC,SAAS,EACP,wBAAwB,IACvB2B,QAAQ,GAAG,YAAY,GAAG,EAAE,CAAC,IAC7BE,UAAU,GAAG,WAAW,GAAG,YAAY,CACzC;MAAA5B,QAAA,gBAEDvC,OAAA;QAAQsC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAChCvC,OAAA;UAAMsC,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,gBACf,eAAAvC,OAAA;YAAMsC,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC,eACP3C,OAAA;UAAKsC,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC9BvC,OAAA;YAAKsC,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BvC,OAAA;cAAQ2K,OAAO,EAAElC,WAAY;cAACmC,KAAK,EAAC,cAAc;cAACtI,SAAS,EAAC,mBAAmB;cAAC,cAAW,cAAc;cAAAC,QAAA,EACvG0B,QAAQ,gBACPjE,OAAA;gBAAKuL,KAAK,EAAC,IAAI;gBAACD,MAAM,EAAC,IAAI;gBAACO,OAAO,EAAC,WAAW;gBAACpG,IAAI,EAAC,MAAM;gBAAAlD,QAAA,gBACzDvC,OAAA;kBAAQ8L,EAAE,EAAC,IAAI;kBAACC,EAAE,EAAC,IAAI;kBAACC,CAAC,EAAC,GAAG;kBAACvG,IAAI,EAAC;gBAAS;kBAAAjD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAC/C3C,OAAA;kBAAGiM,MAAM,EAAC,SAAS;kBAACC,WAAW,EAAC,GAAG;kBAAA3J,QAAA,gBACjCvC,OAAA;oBAAMmM,EAAE,EAAC,IAAI;oBAACC,EAAE,EAAC,GAAG;oBAACC,EAAE,EAAC,IAAI;oBAACC,EAAE,EAAC;kBAAG;oBAAA9J,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACtC3C,OAAA;oBAAMmM,EAAE,EAAC,IAAI;oBAACC,EAAE,EAAC,IAAI;oBAACC,EAAE,EAAC,IAAI;oBAACC,EAAE,EAAC;kBAAI;oBAAA9J,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACxC3C,OAAA;oBAAMmM,EAAE,EAAC,MAAM;oBAACC,EAAE,EAAC,MAAM;oBAACC,EAAE,EAAC,MAAM;oBAACC,EAAE,EAAC;kBAAM;oBAAA9J,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eAChD3C,OAAA;oBAAMmM,EAAE,EAAC,OAAO;oBAACC,EAAE,EAAC,OAAO;oBAACC,EAAE,EAAC,OAAO;oBAACC,EAAE,EAAC;kBAAO;oBAAA9J,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACpD3C,OAAA;oBAAMmM,EAAE,EAAC,GAAG;oBAACC,EAAE,EAAC,IAAI;oBAACC,EAAE,EAAC,GAAG;oBAACC,EAAE,EAAC;kBAAI;oBAAA9J,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACtC3C,OAAA;oBAAMmM,EAAE,EAAC,IAAI;oBAACC,EAAE,EAAC,IAAI;oBAACC,EAAE,EAAC,IAAI;oBAACC,EAAE,EAAC;kBAAI;oBAAA9J,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACxC3C,OAAA;oBAAMmM,EAAE,EAAC,MAAM;oBAACC,EAAE,EAAC,OAAO;oBAACC,EAAE,EAAC,MAAM;oBAACC,EAAE,EAAC;kBAAO;oBAAA9J,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eAClD3C,OAAA;oBAAMmM,EAAE,EAAC,OAAO;oBAACC,EAAE,EAAC,MAAM;oBAACC,EAAE,EAAC,OAAO;oBAACC,EAAE,EAAC;kBAAM;oBAAA9J,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,gBAEN3C,OAAA;gBAAKuL,KAAK,EAAC,IAAI;gBAACD,MAAM,EAAC,IAAI;gBAACO,OAAO,EAAC,WAAW;gBAACpG,IAAI,EAAC,MAAM;gBAAAlD,QAAA,eACzDvC,OAAA;kBAAMuM,CAAC,EAAC,+CAA+C;kBAAC9G,IAAI,EAAC;gBAAS;kBAAAjD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtE;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CAAC,eACT3C,OAAA;cACE2K,OAAO,EAAEA,CAAA,KAAM;gBACb3F,oBAAoB,CAAC,CAAC;gBACtB9B,WAAW,CAAC,CAAC;kBAAEI,IAAI,EAAE,WAAW;kBAAEnB,IAAI,EAAE;gBAAkC,CAAC,CAAC,CAAC;gBAC7EiB,YAAY,CAACoJ,UAAU,CAAC,cAAc,CAAC;gBACvChJ,WAAW,CAAC,CAAC,CAAC,CAAC;gBACfmB,qBAAqB,CAAC,EAAE,CAAC;gBACzBE,cAAc,CAAC,KAAK,CAAC;cACvB,CAAE;cACF+F,KAAK,EAAC,YAAY;cAClBtI,SAAS,EAAC,mBAAmB;cAC7B,cAAW,YAAY;cAAAC,QAAA,eAEvBvC,OAAA;gBAAKuL,KAAK,EAAC,IAAI;gBAACD,MAAM,EAAC,IAAI;gBAAC7F,IAAI,EAAC,MAAM;gBAACwG,MAAM,EAAC,SAAS;gBAACC,WAAW,EAAC,KAAK;gBAACL,OAAO,EAAC,WAAW;gBAAAtJ,QAAA,eAC5FvC,OAAA;kBAAMuM,CAAC,EAAC,wCAAwC;kBAACE,aAAa,EAAC,OAAO;kBAACC,cAAc,EAAC;gBAAO;kBAAAlK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7F;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACT3C,OAAA;cACE2K,OAAO,EAAEA,CAAA,KAAMvG,aAAa,CAAEuD,IAAI,IAAK,CAACA,IAAI,CAAE;cAC9CiD,KAAK,EAAEzG,UAAU,GAAG,iBAAiB,GAAG,eAAgB;cACxD7B,SAAS,EAAC,mBAAmB;cAC7B,cAAY6B,UAAU,GAAG,iBAAiB,GAAG,eAAgB;cAAA5B,QAAA,EAE5D4B,UAAU,gBACTnE,OAAA;gBAAKuL,KAAK,EAAC,IAAI;gBAACD,MAAM,EAAC,IAAI;gBAAC7F,IAAI,EAAC,MAAM;gBAACwG,MAAM,EAAC,SAAS;gBAACC,WAAW,EAAC,KAAK;gBAACL,OAAO,EAAC,WAAW;gBAAAtJ,QAAA,gBAC5FvC,OAAA;kBAAU2M,MAAM,EAAC;gBAAa;kBAAAnK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACjC3C,OAAA;kBAAMmM,EAAE,EAAC,GAAG;kBAACC,EAAE,EAAC,GAAG;kBAACC,EAAE,EAAC,IAAI;kBAACC,EAAE,EAAC;gBAAI;kBAAA9J,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACtC3C,OAAA;kBAAU2M,MAAM,EAAC;gBAAmB;kBAAAnK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACvC3C,OAAA;kBAAMmM,EAAE,EAAC,IAAI;kBAACC,EAAE,EAAC,IAAI;kBAACC,EAAE,EAAC,IAAI;kBAACC,EAAE,EAAC;gBAAI;kBAAA9J,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrC,CAAC,gBAEN3C,OAAA;gBAAKuL,KAAK,EAAC,IAAI;gBAACD,MAAM,EAAC,IAAI;gBAAC7F,IAAI,EAAC,MAAM;gBAACwG,MAAM,EAAC,SAAS;gBAACC,WAAW,EAAC,KAAK;gBAACL,OAAO,EAAC,WAAW;gBAAAtJ,QAAA,gBAC5FvC,OAAA;kBAAU2M,MAAM,EAAC;gBAAgB;kBAAAnK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACpC3C,OAAA;kBAAMmM,EAAE,EAAC,IAAI;kBAACC,EAAE,EAAC,GAAG;kBAACC,EAAE,EAAC,IAAI;kBAACC,EAAE,EAAC;gBAAI;kBAAA9J,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACvC3C,OAAA;kBAAU2M,MAAM,EAAC;gBAAgB;kBAAAnK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACpC3C,OAAA;kBAAMmM,EAAE,EAAC,GAAG;kBAACC,EAAE,EAAC,IAAI;kBAACC,EAAE,EAAC,IAAI;kBAACC,EAAE,EAAC;gBAAI;kBAAA9J,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACT3C,OAAA;QAAIsC,SAAS,EAAC,SAAS;QAACsK,GAAG,EAAE9H,OAAQ;QAAAvC,QAAA,GAClCU,QAAQ,CAAC9B,GAAG,CAAC,CAACqF,GAAG,EAAEgC,GAAG,kBACrBxI,OAAA;UAEEsC,SAAS,EAAE,QAAQkE,GAAG,CAAClD,IAAI,KAAK,MAAM,GAAG,UAAU,GAAG,UAAU,EAAG;UACnE2F,KAAK,EAAE;YAAE4D,cAAc,EAAErG,GAAG,CAAClD,IAAI,KAAK,MAAM,GAAG,UAAU,GAAG;UAAa,CAAE;UAAAf,QAAA,gBAE3EvC,OAAA;YAAKsC,SAAS,EAAE,eAAekE,GAAG,CAAClD,IAAI,EAAG;YAAAf,QAAA,EACvCuG,uBAAuB,CAACtC,GAAG;UAAC;YAAAhE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,EACL6D,GAAG,CAAClD,IAAI,KAAK,WAAW,iBACvBtD,OAAA;YAAKsC,SAAS,EAAC,cAAc;YAAAC,QAAA,GAC1BgB,QAAQ,CAACiF,GAAG,CAAC,KAAKkB,SAAS,iBAC1B1J,OAAA,CAAAE,SAAA;cAAAqC,QAAA,gBACEvC,OAAA,CAAC6C,OAAO;gBAACV,IAAI,EAAC,iBAAiB;gBAAAI,QAAA,eAC7BvC,OAAA;kBACEsC,SAAS,EAAC,cAAc;kBACxBqI,OAAO,EAAEA,CAAA,KAAMpC,cAAc,CAACC,GAAG,EAAE,IAAI,CAAE;kBACzC,cAAW,WAAW;kBACtBsE,QAAQ,EAAE,CAAE;kBAAAvK,QAAA,EACb;gBAAE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eACV3C,OAAA,CAAC6C,OAAO;gBAACV,IAAI,EAAC,qBAAqB;gBAAAI,QAAA,eACjCvC,OAAA;kBACEsC,SAAS,EAAC,cAAc;kBACxBqI,OAAO,EAAEA,CAAA,KAAMpC,cAAc,CAACC,GAAG,EAAE,MAAM,CAAE;kBAC3C,cAAW,aAAa;kBACxBsE,QAAQ,EAAE,CAAE;kBAAAvK,QAAA,EACb;gBAAE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA,eACV,CACH,EACAY,QAAQ,CAACiF,GAAG,CAAC,KAAK,IAAI,iBACrBxI,OAAA,CAAC6C,OAAO;cAACV,IAAI,EAAC,oBAAoB;cAAAI,QAAA,eAChCvC,OAAA;gBAAQsC,SAAS,EAAC,0BAA0B;gBAAC,cAAW,WAAW;gBAACwK,QAAQ,EAAE,CAAE;gBAAAvK,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrF,CACV,EACAY,QAAQ,CAACiF,GAAG,CAAC,KAAK,MAAM,iBACvBxI,OAAA,CAAC6C,OAAO;cAACV,IAAI,EAAC,uBAAuB;cAAAI,QAAA,eACnCvC,OAAA;gBAAQsC,SAAS,EAAC,4BAA4B;gBAAC,cAAW,aAAa;gBAACwK,QAAQ,EAAE,CAAE;gBAAAvK,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzF,CACV;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN;QAAA,GAxCI6F,GAAG;UAAAhG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAyCN,CACL,CAAC,EACD6B,QAAQ,iBACPxE,OAAA;UAAIsC,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC3BvC,OAAA;YAAKsC,SAAS,EAAC,uBAAuB;YAAAC,QAAA,eACpCvC,OAAA,CAACqC,eAAe;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAEJiC,WAAW,IAAIoG,wBAAwB,CAAC,CAAC,EAEzC,CAACpG,WAAW,IAAIqG,0BAA0B,CAAC,CAAC,eAE7CjL,OAAA;QAAKsC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBvC,OAAA;UACE4M,GAAG,EAAE7H,QAAS;UACdgI,WAAW,EAAC,oBAAoB;UAChClL,KAAK,EAAEgC,KAAM;UACbmJ,QAAQ,EAAEnM,CAAC,IAAIiD,QAAQ,CAACjD,CAAC,CAACoM,MAAM,CAACpL,KAAK,CAAE;UACxCqL,SAAS,EAAErM,CAAC,IAAI;YACd,IAAIA,CAAC,CAACsM,GAAG,KAAK,OAAO,IAAI,CAACtM,CAAC,CAACuM,QAAQ,EAAE;cACpCvM,CAAC,CAACwM,cAAc,CAAC,CAAC;cAClB5G,iBAAiB,CAAC5C,KAAK,CAAC;YAC1B;UACF,CAAE;UACFyJ,IAAI,EAAE,CAAE;UACRhL,SAAS,EAAC,qBAAqB;UAC/B2G,KAAK,EAAE;YAAEsE,QAAQ,EAAE,QAAQ;YAAEC,MAAM,EAAE;UAAO,CAAE;UAC9CC,QAAQ,EAAEjJ,QAAS;UACnBkJ,SAAS,EAAE3J,MAAO;UAClB,cAAW;QAAmB;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,eACF3C,OAAA;UACE2K,OAAO,EAAEA,CAAA,KAAMlE,iBAAiB,CAAC5C,KAAK,CAAE;UACxC+G,KAAK,EAAC,cAAc;UACpBtI,SAAS,EAAE,cAAcuB,KAAK,CAACzB,IAAI,CAAC,CAAC,GAAG,WAAW,GAAG,EAAE,EAAG;UAC3DqL,QAAQ,EAAEjJ,QAAQ,IAAI,CAACX,KAAK,CAACzB,IAAI,CAAC,CAAE;UACpC,cAAW,MAAM;UAAAG,QAAA,eAEjBvC,OAAA;YAAKsL,MAAM,EAAC,IAAI;YAACC,KAAK,EAAC,IAAI;YAACM,OAAO,EAAC,WAAW;YAACpG,IAAI,EAAC,MAAM;YAACwD,KAAK,EAAE;cAAE0E,OAAO,EAAE;YAAQ,CAAE;YAAApL,QAAA,eACtFvC,OAAA;cAAMuM,CAAC,EAAC,mCAAmC;cAAC9G,IAAI,EAAC;YAAc;cAAAjD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACL0B,KAAK,CAACE,OAAO,iBACZvE,OAAA;QACEsC,SAAS,EAAE,eAAe+B,KAAK,CAAC1C,IAAI,EAAG;QACvCgJ,OAAO,EAAEA,CAAA,KAAMrG,QAAQ,CAAC+B,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAE9B,OAAO,EAAE;QAAM,CAAC,CAAC,CAAE;QACzD0E,KAAK,EAAE;UAAEyB,MAAM,EAAE;QAAU,CAAE;QAAAnI,QAAA,EAE5B8B,KAAK,CAACtC;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CACN,eACD3C,OAAA;QAAQsC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAAC,aACtB,eAAAvC,OAAA;UAAK2L,GAAG,EAAE7L,MAAO;UAAC8L,GAAG,EAAC;QAAe;UAAApJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACK,EAAA,CA3gBID,OAAO;AAAA6K,GAAA,GAAP7K,OAAO;AA6gBb,eAAeA,OAAO;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAA8K,GAAA;AAAAC,YAAA,CAAAjL,EAAA;AAAAiL,YAAA,CAAA/K,GAAA;AAAA+K,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}