{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// --- HELPER FUNCTIONS ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isClarificationNeeded(text) {\n  const clarificationPhrases = [\"I need some additional information\", \"Could you please specify\", \"missing information\", \"can you clarify\", \"could you provide\", \"please provide\"];\n  return clarificationPhrases.some(p => text.toLowerCase().includes(p.toLowerCase()));\n}\nfunction isReadyToSend(text) {\n  return text.toLowerCase().includes(\"is that correct\") || text.toLowerCase().includes(\"is this correct\") || text.toLowerCase().includes(\"ready to submit\") || text.toLowerCase().includes(\"should i send\") || text.toLowerCase().includes(\"can i send\");\n}\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = JSON.parse(responseText);\n    const columns = json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name) || json.rowType && json.rowType.map(col => col.name) || json.rowtype && json.rowtype.map(col => col.name) || json.columns && json.columns.map(col => col.name);\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return {\n      type: \"error\",\n      value: \"❌ Error: \" + json.error\n    };\n    if (json.code && json.code !== \"000000\" && (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))) {\n      return {\n        type: \"error\",\n        value: `❌ Error: ${json.code} - ${json.message}`\n      };\n    }\n    if (json.message) return {\n      type: \"output\",\n      value: json.message\n    };\n    return {\n      type: \"output\",\n      value: \"No data found.\"\n    };\n  } catch {\n    return {\n      type: \"error\",\n      value: responseText || \"No response from backend.\"\n    };\n  }\n}\n\n// --- TYPING INDICATOR ---\nfunction TypingIndicator() {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"typing-indicator\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n// --- MAIN COMPONENT ---\n_c = TypingIndicator;\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    return saved ? JSON.parse(saved) : [{\n      role: 'assistant',\n      text: 'Hello 👋! How may I assist you?'\n    }];\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [clarifyMode, setClarifyMode] = useState(false);\n  const [clarifyHistory, setClarifyHistory] = useState([]);\n  const [awaitingConfirm, setAwaitingConfirm] = useState(false);\n  const [clarifiedQuery, setClarifiedQuery] = useState(\"\");\n  const chatRef = useRef();\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollTo({\n      top: chatRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [messages, isTyping, isOpen]);\n\n  // --- SENDING A MESSAGE ---\n  const handleSendMessage = async userMessage => {\n    if (!userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // --- CLARIFICATION FLOW ---\n    if (clarifyMode) {\n      const newHistory = [...clarifyHistory, {\n        role: \"user\",\n        content: userMessage\n      }];\n      const response = await fetch('http://localhost:4000/clarify', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userMessage,\n          conversationHistory: newHistory\n        })\n      });\n      const {\n        response: aiText\n      } = await response.json();\n      setIsTyping(false);\n      const newMessages = [...messages, {\n        role: \"user\",\n        text: userMessage\n      }, {\n        role: \"assistant\",\n        text: aiText\n      }];\n      setMessages(newMessages);\n      setClarifyHistory([...newHistory, {\n        role: \"assistant\",\n        content: aiText\n      }]);\n      localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n      if (isReadyToSend(aiText)) {\n        setAwaitingConfirm(true);\n        setClarifiedQuery(aiText);\n      }\n      return;\n    }\n\n    // --- INITIAL MESSAGE TO CLARIFICATION ENDPOINT ---\n    const response = await fetch('http://localhost:4000/api/clarify', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userMessage,\n        conversationHistory: []\n      })\n    });\n    const {\n      response: aiText\n    } = await response.json();\n    setIsTyping(false);\n    let newMessages = [...messages, {\n      role: 'user',\n      text: userMessage\n    }, {\n      role: 'assistant',\n      text: aiText\n    }];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setClarifyHistory([{\n      role: \"user\",\n      content: userMessage\n    }, {\n      role: \"assistant\",\n      content: aiText\n    }]);\n    if (isClarificationNeeded(aiText)) {\n      setClarifyMode(true);\n    } else if (isReadyToSend(aiText)) {\n      setAwaitingConfirm(true);\n      setClarifiedQuery(aiText);\n    } else {\n      setClarifyMode(false);\n    }\n  };\n\n  // --- SEND CLARIFIED QUERY TO CORTEX/SNOWFLAKE ---\n  const handleConfirmSend = async () => {\n    setIsTyping(true);\n    setAwaitingConfirm(false);\n    setClarifyMode(false);\n    let body = {\n      statement: clarifiedQuery\n    };\n    const response = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    const responseText = await response.text();\n    const formatted = formatSnowflakeResponse(responseText);\n    setIsTyping(false);\n    const newMessages = [...messages, {\n      role: \"assistant\",\n      text: \"Sending clarified query to report system...\"\n    }, {\n      role: \"assistant\",\n      text: formatted\n    }];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setClarifiedQuery(\"\");\n    setClarifyHistory([]);\n  };\n\n  // --- RENDER CHAT BUBBLES ---\n  const renderChatBubbleContent = msg => {\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"snowflake-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: obj.columns.map((h, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: h\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 44\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: obj.data.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: obj.columns.length,\n                style: {\n                  textAlign: 'center',\n                  color: '#888'\n                },\n                children: \"(no results)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this) : obj.data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.map((cell, cidx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: (() => {\n                  try {\n                    if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                      const parsed = JSON.parse(cell);\n                      if (Array.isArray(parsed)) {\n                        return /*#__PURE__*/_jsxDEV(\"ul\", {\n                          style: {\n                            paddingLeft: '18px',\n                            margin: 0\n                          },\n                          children: parsed.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: item\n                          }, idx, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 212,\n                            columnNumber: 62\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 211,\n                          columnNumber: 33\n                        }, this);\n                      }\n                      if (typeof parsed === 'object') {\n                        return /*#__PURE__*/_jsxDEV(\"pre\", {\n                          children: JSON.stringify(parsed, null, 2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 217,\n                          columnNumber: 38\n                        }, this);\n                      }\n                    }\n                    return cell;\n                  } catch {\n                    return cell;\n                  }\n                })()\n              }, cidx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this))\n            }, ridx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this);\n      }\n      if (obj.type === \"output\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 16\n        }, this);\n      }\n      if (obj.type === \"error\") {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#b91c1c\",\n            fontWeight: 500\n          },\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 16\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(obj.value, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 14\n      }, this);\n    }\n    return (msg.text || \"\").split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: line\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this));\n  };\n\n  // --- MAIN RENDER ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggler modern-toggler\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Toggle chatbot\",\n      style: {\n        position: 'fixed',\n        right: '20px',\n        bottom: '20px',\n        zIndex: 10000\n      },\n      children: isOpen ? '✖' : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ChatbotIcon,\n        alt: \"Chatbot\",\n        style: {\n          width: 48,\n          height: 48\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot modern-chatbot\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chatbot-header\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-title\",\n          children: [\"Field Insights\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header-title-gradient\",\n            children: \" Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chatbox\",\n        ref: chatRef,\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n          style: {\n            justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-bubble ${msg.role}`,\n            children: renderChatBubbleContent(msg)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chat incoming\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bubble assistant\",\n            children: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), awaitingConfirm && clarifyMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clarify-confirm-box\",\n        style: {\n          textAlign: \"center\",\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleConfirmSend,\n          children: \"\\u2705 Yes, send to report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: () => {\n            setAwaitingConfirm(false);\n            setClarifyMode(true);\n          },\n          style: {\n            marginLeft: 8\n          },\n          children: \"\\u274C No, I want to change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Ask me anything...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input),\n          rows: 1,\n          className: \"chat-input-textarea\",\n          style: {\n            overflow: 'hidden',\n            resize: 'none'\n          },\n          disabled: isTyping || awaitingConfirm && clarifyMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSendMessage(input),\n          title: \"Send message\",\n          className: `send-button${input.trim() ? \" has-text\" : \"\"}`,\n          disabled: isTyping || awaitingConfirm && clarifyMode,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            height: \"22\",\n            width: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            style: {\n              display: \"block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M4 20L20 12L4 4V10L16 12L4 14V20Z\",\n              fill: \"currentColor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chatbot-footer\",\n        children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ZSIcon,\n          alt: \"ZS Associates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"YL1/Ev20CJRs8oqmOIhWufC7Xso=\");\n_c2 = ChatBot;\nexport default ChatBot;\nvar _c, _c2;\n$RefreshReg$(_c, \"TypingIndicator\");\n$RefreshReg$(_c2, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotIcon","ZSIcon","jsxDEV","_jsxDEV","isClarificationNeeded","text","clarificationPhrases","some","p","toLowerCase","includes","isReadyToSend","formatSnowflakeResponse","responseText","json","JSON","parse","columns","resultSetMetaData","rowType","map","col","name","rowtype","data","Array","isArray","length","type","error","value","code","message","TypingIndicator","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ChatBot","_s","messages","setMessages","saved","localStorage","getItem","role","input","setInput","isOpen","setIsOpen","isTyping","setIsTyping","clarifyMode","setClarifyMode","clarifyHistory","setClarifyHistory","awaitingConfirm","setAwaitingConfirm","clarifiedQuery","setClarifiedQuery","chatRef","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","handleSendMessage","userMessage","trim","newHistory","content","response","fetch","method","headers","body","stringify","conversationHistory","aiText","newMessages","setItem","handleConfirmSend","statement","formatted","renderChatBubbleContent","msg","obj","h","i","colSpan","style","textAlign","color","row","ridx","cell","cidx","whiteSpace","startsWith","parsed","paddingLeft","margin","item","idx","fontWeight","split","line","onClick","position","right","bottom","zIndex","src","alt","width","height","ref","justifyContent","marginLeft","placeholder","onChange","e","target","onKeyDown","key","shiftKey","rows","overflow","resize","disabled","title","viewBox","fill","display","d","_c2","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// --- HELPER FUNCTIONS ---\nfunction isClarificationNeeded(text) {\n  const clarificationPhrases = [\n    \"I need some additional information\",\n    \"Could you please specify\",\n    \"missing information\",\n    \"can you clarify\",\n    \"could you provide\",\n    \"please provide\"\n  ];\n  return clarificationPhrases.some(p => text.toLowerCase().includes(p.toLowerCase()));\n}\n\nfunction isReadyToSend(text) {\n  return text.toLowerCase().includes(\"is that correct\") ||\n         text.toLowerCase().includes(\"is this correct\") ||\n         text.toLowerCase().includes(\"ready to submit\") ||\n         text.toLowerCase().includes(\"should i send\") ||\n         text.toLowerCase().includes(\"can i send\");\n}\n\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = JSON.parse(responseText);\n\n    const columns =\n      (json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name)) ||\n      (json.rowType && json.rowType.map(col => col.name)) ||\n      (json.rowtype && json.rowtype.map(col => col.name)) ||\n      (json.columns && json.columns.map(col => col.name));\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n\n    if (json.error) return { type: \"error\", value: \"❌ Error: \" + json.error };\n    if (\n      json.code &&\n      json.code !== \"000000\" &&\n      (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))\n    ) {\n      return { type: \"error\", value: `❌ Error: ${json.code} - ${json.message}` };\n    }\n    if (json.message) return { type: \"output\", value: json.message };\n\n    return { type: \"output\", value: \"No data found.\" };\n  } catch {\n    return { type: \"error\", value: responseText || \"No response from backend.\" };\n  }\n}\n\n// --- TYPING INDICATOR ---\nfunction TypingIndicator() {\n  return (\n    <span className=\"typing-indicator\">\n      <span></span><span></span><span></span>\n    </span>\n  );\n}\n\n// --- MAIN COMPONENT ---\nconst ChatBot = () => {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    return saved ? JSON.parse(saved) : [{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }];\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [clarifyMode, setClarifyMode] = useState(false);\n  const [clarifyHistory, setClarifyHistory] = useState([]);\n  const [awaitingConfirm, setAwaitingConfirm] = useState(false);\n  const [clarifiedQuery, setClarifiedQuery] = useState(\"\");\n  const chatRef = useRef();\n\n  useEffect(() => {\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\n  }, [messages, isTyping, isOpen]);\n\n  // --- SENDING A MESSAGE ---\n  const handleSendMessage = async (userMessage) => {\n    if (!userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // --- CLARIFICATION FLOW ---\n    if (clarifyMode) {\n      const newHistory = [\n        ...clarifyHistory,\n        { role: \"user\", content: userMessage }\n      ];\n\n      const response = await fetch('http://localhost:4000/clarify', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userMessage,\n          conversationHistory: newHistory\n        })\n      });\n      const { response: aiText } = await response.json();\n\n      setIsTyping(false);\n\n      const newMessages = [\n        ...messages,\n        { role: \"user\", text: userMessage },\n        { role: \"assistant\", text: aiText }\n      ];\n      setMessages(newMessages);\n      setClarifyHistory([\n        ...newHistory,\n        { role: \"assistant\", content: aiText }\n      ]);\n      localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n\n      if (isReadyToSend(aiText)) {\n        setAwaitingConfirm(true);\n        setClarifiedQuery(aiText);\n      }\n      return;\n    }\n\n    // --- INITIAL MESSAGE TO CLARIFICATION ENDPOINT ---\n    const response = await fetch('http://localhost:4000/api/clarify', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userMessage, conversationHistory: [] })\n    });\n    const { response: aiText } = await response.json();\n\n    setIsTyping(false);\n    let newMessages = [...messages, { role: 'user', text: userMessage }, { role: 'assistant', text: aiText }];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setClarifyHistory([{ role: \"user\", content: userMessage }, { role: \"assistant\", content: aiText }]);\n\n    if (isClarificationNeeded(aiText)) {\n      setClarifyMode(true);\n    } else if (isReadyToSend(aiText)) {\n      setAwaitingConfirm(true);\n      setClarifiedQuery(aiText);\n    } else {\n      setClarifyMode(false);\n    }\n  };\n\n  // --- SEND CLARIFIED QUERY TO CORTEX/SNOWFLAKE ---\n  const handleConfirmSend = async () => {\n    setIsTyping(true);\n    setAwaitingConfirm(false);\n    setClarifyMode(false);\n\n    let body = { statement: clarifiedQuery };\n    const response = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    });\n    const responseText = await response.text();\n    const formatted = formatSnowflakeResponse(responseText);\n\n    setIsTyping(false);\n    const newMessages = [\n      ...messages,\n      { role: \"assistant\", text: \"Sending clarified query to report system...\" },\n      { role: \"assistant\", text: formatted }\n    ];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setClarifiedQuery(\"\");\n    setClarifyHistory([]);\n  };\n\n  // --- RENDER CHAT BUBBLES ---\n  const renderChatBubbleContent = (msg) => {\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return (\n          <table className=\"snowflake-table\">\n            <thead>\n              <tr>\n                {obj.columns.map((h, i) => <th key={i}>{h}</th>)}\n              </tr>\n            </thead>\n            <tbody>\n              {obj.data.length === 0 ? (\n                <tr>\n                  <td colSpan={obj.columns.length} style={{ textAlign: 'center', color: '#888' }}>(no results)</td>\n                </tr>\n              ) : obj.data.map((row, ridx) => (\n                <tr key={ridx}>\n                  {row.map((cell, cidx) => (\n                    <td key={cidx} style={{whiteSpace: 'pre-wrap'}}>\n                      {(() => {\n                        try {\n                          if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                            const parsed = JSON.parse(cell);\n                            if (Array.isArray(parsed)) {\n                              return (\n                                <ul style={{ paddingLeft: '18px', margin: 0 }}>\n                                  {parsed.map((item, idx) => <li key={idx}>{item}</li>)}\n                                </ul>\n                              );\n                            }\n                            if (typeof parsed === 'object') {\n                              return <pre>{JSON.stringify(parsed, null, 2)}</pre>;\n                            }\n                          }\n                          return cell;\n                        } catch {\n                          return cell;\n                        }\n                      })()}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        );\n      }\n      if (obj.type === \"output\") {\n        return <div>{obj.value}</div>;\n      }\n      if (obj.type === \"error\") {\n        return <span style={{ color: \"#b91c1c\", fontWeight: 500 }}>{obj.value}</span>;\n      }\n      return <pre>{JSON.stringify(obj.value, null, 2)}</pre>;\n    }\n    return (msg.text || \"\").split('\\n').map((line, i) => (\n      <div key={i}>{line}</div>\n    ));\n  };\n\n  // --- MAIN RENDER ---\n  return (\n    <div>\n      <button\n        className=\"chatbot-toggler modern-toggler\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Toggle chatbot\"\n        style={{ position: 'fixed', right: '20px', bottom: '20px', zIndex: 10000 }}>\n        {isOpen ? '✖' : <img src={ChatbotIcon} alt=\"Chatbot\" style={{ width: 48, height: 48 }} />}\n      </button>\n      {isOpen && (\n        <div className=\"chatbot modern-chatbot\">\n          <header className=\"chatbot-header\">\n            <span className=\"header-title\">\n              Field Insights<span className=\"header-title-gradient\"> Assistant</span>\n            </span>\n          </header>\n          <ul className=\"chatbox\" ref={chatRef}>\n            {messages.map((msg, idx) => (\n              <li\n                key={idx}\n                className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}\n                style={{justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start'}}\n              >\n                <div className={`chat-bubble ${msg.role}`}>\n                  {renderChatBubbleContent(msg)}\n                </div>\n              </li>\n            ))}\n            {isTyping && (\n              <li className=\"chat incoming\">\n                <div className=\"chat-bubble assistant\">\n                  <TypingIndicator />\n                </div>\n              </li>\n            )}\n          </ul>\n          {/* Clarification confirmation box */}\n          {awaitingConfirm && clarifyMode && (\n            <div className=\"clarify-confirm-box\" style={{textAlign: \"center\", margin: 10}}>\n              <button\n                className=\"send-button\"\n                onClick={handleConfirmSend}\n              >\n                ✅ Yes, send to report\n              </button>\n              <button\n                className=\"send-button\"\n                onClick={() => {\n                  setAwaitingConfirm(false);\n                  setClarifyMode(true);\n                }}\n                style={{marginLeft: 8}}\n              >\n                ❌ No, I want to change\n              </button>\n            </div>\n          )}\n          <div className=\"chat-input\">\n            <textarea\n              placeholder=\"Ask me anything...\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input)}\n              rows={1}\n              className=\"chat-input-textarea\"\n              style={{overflow: 'hidden', resize: 'none'}}\n              disabled={isTyping || (awaitingConfirm && clarifyMode)}\n            />\n            <button\n              onClick={() => handleSendMessage(input)}\n              title=\"Send message\"\n              className={`send-button${input.trim() ? \" has-text\" : \"\"}`}\n              disabled={isTyping || (awaitingConfirm && clarifyMode)}\n            >\n              <svg height=\"22\" width=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" style={{display:\"block\"}}>\n                <path d=\"M4 20L20 12L4 4V10L16 12L4 14V20Z\" fill=\"currentColor\"/>\n              </svg>\n            </button>\n          </div>\n          <footer className=\"chatbot-footer\">\n            Powered by <img src={ZSIcon} alt=\"ZS Associates\" />\n          </footer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}