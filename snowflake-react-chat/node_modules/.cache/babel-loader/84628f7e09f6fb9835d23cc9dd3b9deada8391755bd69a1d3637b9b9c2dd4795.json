{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// Business Q&A\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', OPC = $0 - $12 and LIS patient flag = LIS-DE , LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\"\n};\nconst HARDCODED_SUGGESTIONS = [\"Where can I find top 10 Gainer Prescriber over time?\", \"What is Formulary Status?\", \"What are the Number of Current Monthly suggestion KPI?\", \"Which dossier gives a detailed analysis about the Payors?\", \"Where can I find explanations about different KPIS?\", \"What is Mkt % LIS?\", \"Which universes do we show in Accounts calculation?\", \"Where can I find TRX Sales trends overtime?\"];\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === \"string\" ? JSON.parse(responseText) : responseText;\n\n    // Agent output in Snowflake variant/table format\n    if (json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.length === 1 && /^CUSTOM_AGENT/i.test(json.resultSetMetaData.rowType[0].name) && Array.isArray(json.data) && json.data.length > 0 && json.data[0][0]) {\n      try {\n        const cellValue = json.data[0][0];\n        const agentObj = JSON.parse(cellValue);\n        if (typeof agentObj.output === \"string\") {\n          return {\n            type: \"output\",\n            value: agentObj.output\n          };\n        }\n      } catch (e) {\n        return {\n          type: \"output\",\n          value: json.data[0][0]\n        };\n      }\n    }\n\n    // Agent gateway direct output\n    const agentKey = Object.keys(json).find(key => key.startsWith(\"CUSTOM_AGENT\"));\n    if (agentKey && typeof json[agentKey] === \"string\") {\n      try {\n        const agentObj = JSON.parse(json[agentKey]);\n        if (typeof agentObj.output === \"string\") {\n          return {\n            type: \"output\",\n            value: agentObj.output\n          };\n        }\n        return {\n          type: \"json\",\n          value: agentObj\n        };\n      } catch {\n        return {\n          type: \"output\",\n          value: json[agentKey]\n        };\n      }\n    }\n\n    // Table/structured result (Snowflake direct query)\n    const columns = json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name) || json.rowType && json.rowType.map(col => col.name) || json.rowtype && json.rowtype.map(col => col.name) || json.columns && json.columns.map(col => col.name);\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return {\n      type: \"error\",\n      value: \"❌ Error: \" + json.error\n    };\n    if (json.code && json.code !== \"000000\" && (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))) {\n      return {\n        type: \"error\",\n        value: `❌ Error: ${json.code} - ${json.message}`\n      };\n    }\n    if (json.message) return {\n      type: \"output\",\n      value: json.message\n    };\n    return {\n      type: \"output\",\n      value: \"No data found.\"\n    };\n  } catch {\n    return {\n      type: \"error\",\n      value: responseText || \"No response from backend.\"\n    };\n  }\n}\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{\n      role: 'assistant',\n      text: 'Hello 👋! How may I assist you?'\n    }];\n  });\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState('');\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Only show 4 rotating suggestions\n  const visibleSuggestions = Array(4).fill(0).map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollTo({\n      top: chatRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Send user message to backend and update chat\n  const handleSendMessage = async userMessage => {\n    if (!userMessage.trim()) return;\n    const newMessages = [...messages, {\n      role: 'user',\n      text: userMessage\n    }];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setInput('');\n\n    // HARDCODED ANSWER CHECK\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      const hardcodedAnswer = HARDCODED_ANSWERS[matchedKey];\n      const updatedMessages = [...newMessages, {\n        role: 'assistant',\n        text: hardcodedAnswer\n      }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // Show loading message\n    const pendingList = [...newMessages, {\n      role: 'assistant',\n      text: '⏳ Thinking...'\n    }];\n    setMessages(pendingList);\n    localStorage.setItem('chatMessages', JSON.stringify(pendingList));\n\n    // Decide: SQL (Snowflake) or LLM (OpenAI)\n    const isLikelySQL = userMessage.trim().toLowerCase().match(/^(select|show|desc|describe)/);\n    try {\n      let apiUrl, reqBody;\n      if (isLikelySQL) {\n        apiUrl = 'http://localhost:4000/api/snowflake';\n        reqBody = {\n          statement: userMessage\n        };\n      } else {\n        apiUrl = 'http://localhost:4000/api/llm';\n        reqBody = {\n          message: userMessage\n        };\n      }\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reqBody)\n      });\n      let formatted;\n      if (isLikelySQL) {\n        const responseText = await response.text();\n        formatted = formatSnowflakeResponse(responseText);\n      } else {\n        const llmData = await response.json();\n        if (llmData.answer) {\n          formatted = {\n            type: 'output',\n            value: llmData.answer\n          };\n        } else {\n          formatted = {\n            type: 'error',\n            value: llmData.error || \"No answer from LLM.\"\n          };\n        }\n      }\n      const updatedMessages = [...newMessages, {\n        role: 'assistant',\n        text: formatted\n      }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    } catch (err) {\n      const formatted = {\n        type: \"error\",\n        value: \"⚠️ Unable to connect to backend.\"\n      };\n      const updatedMessages = [...newMessages, {\n        role: 'assistant',\n        text: formatted\n      }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    }\n  };\n\n  // Feedback handlers\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({\n      ...prev,\n      [idx]: type\n    }));\n    setToast('Thanks for your feedback!');\n    setTimeout(() => setToast(''), 1100);\n  };\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  // Render assistant output smartly\n  const renderChatBubbleContent = msg => {\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"snowflake-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: obj.columns.map((h, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: h\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 44\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: obj.data.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: obj.columns.length,\n                style: {\n                  textAlign: 'center',\n                  color: '#888'\n                },\n                children: \"(no results)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this) : obj.data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.map((cell, cidx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  whiteSpace: 'pre-wrap',\n                  fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                },\n                children: (() => {\n                  try {\n                    if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                      const parsed = JSON.parse(cell);\n                      if (Array.isArray(parsed)) {\n                        return /*#__PURE__*/_jsxDEV(\"ul\", {\n                          style: {\n                            paddingLeft: '18px',\n                            margin: 0\n                          },\n                          children: parsed.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: item\n                          }, idx, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 237,\n                            columnNumber: 62\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 236,\n                          columnNumber: 33\n                        }, this);\n                      }\n                      if (typeof parsed === 'object') {\n                        return /*#__PURE__*/_jsxDEV(\"pre\", {\n                          children: JSON.stringify(parsed, null, 2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 242,\n                          columnNumber: 38\n                        }, this);\n                      }\n                    }\n                    return cell;\n                  } catch {\n                    return cell;\n                  }\n                })()\n              }, cidx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this))\n            }, ridx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this);\n      }\n      if (obj.type === \"output\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 16\n        }, this);\n      }\n      if (obj.type === \"error\") {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#b91c1c\",\n            fontWeight: 500\n          },\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 16\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(obj.value, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 14\n      }, this);\n    }\n    // fallback plain text\n    return (msg.text || \"\").split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: line\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 58\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggler modern-toggler\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Toggle chatbot\",\n      style: {\n        position: 'fixed',\n        right: '20px',\n        bottom: '20px',\n        zIndex: 10000\n      },\n      children: isOpen ? '✖' : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ChatbotIcon,\n        alt: \"Chatbot\",\n        style: {\n          width: 48,\n          height: 48\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot modern-chatbot` + (darkMode ? ' dark-mode' : '') + (isExpanded ? ' expanded' : ' collapsed'),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 600\n          },\n          children: [\"Field Insights\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#6b38fb'\n            },\n            children: \" Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleTheme,\n            title: \"Toggle theme\",\n            className: \"header-action-btn\",\n            \"aria-label\": \"Toggle theme\",\n            children: darkMode ? /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"23\",\n              height: \"23\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"12\",\n                cy: \"12\",\n                r: \"5\",\n                fill: \"#7c3aed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2\",\n                children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"12\",\n                  y1: \"2\",\n                  x2: \"12\",\n                  y2: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"12\",\n                  y1: \"19\",\n                  x2: \"12\",\n                  y2: \"22\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"4.22\",\n                  y1: \"4.22\",\n                  x2: \"6.34\",\n                  y2: \"6.34\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"17.66\",\n                  y1: \"17.66\",\n                  x2: \"19.78\",\n                  y2: \"19.78\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"2\",\n                  y1: \"12\",\n                  x2: \"5\",\n                  y2: \"12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"19\",\n                  y1: \"12\",\n                  x2: \"22\",\n                  y2: \"12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"4.22\",\n                  y1: \"19.78\",\n                  x2: \"6.34\",\n                  y2: \"17.66\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"17.66\",\n                  y1: \"6.34\",\n                  x2: \"19.78\",\n                  y2: \"4.22\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"23\",\n              height: \"23\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\",\n                fill: \"#7c3aed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const newIndex = (suggestionIndex + 4) % HARDCODED_SUGGESTIONS.length;\n              setSuggestionIndex(newIndex);\n              localStorage.setItem('suggestionIndex', newIndex.toString());\n              setMessages([{\n                role: 'assistant',\n                text: 'Hello 👋! How may I assist you?'\n              }]);\n              localStorage.removeItem('chatMessages');\n              setFeedback({});\n            },\n            title: \"Clear chat\",\n            className: \"header-action-btn\",\n            \"aria-label\": \"Clear chat\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"23\",\n              height: \"23\",\n              fill: \"none\",\n              stroke: \"#7c3aed\",\n              strokeWidth: \"2.1\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsExpanded(prev => !prev),\n            title: isExpanded ? 'Collapse window' : 'Expand window',\n            className: \"header-action-btn\",\n            \"aria-label\": isExpanded ? 'Collapse window' : 'Expand window',\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"23\",\n              height: \"23\",\n              fill: \"none\",\n              stroke: \"#7c3aed\",\n              strokeWidth: \"2.1\",\n              viewBox: \"0 0 24 24\",\n              children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"8 3 3 3 3 8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"3\",\n                y1: \"3\",\n                x2: \"10\",\n                y2: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"16 21 21 21 21 16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"21\",\n                y1: \"21\",\n                x2: \"14\",\n                y2: \"14\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"23\",\n              height: \"23\",\n              fill: \"none\",\n              stroke: \"#7c3aed\",\n              strokeWidth: \"2.1\",\n              viewBox: \"0 0 24 24\",\n              children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"15 3 21 3 21 9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"21\",\n                y1: \"3\",\n                x2: \"14\",\n                y2: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"9 21 3 21 3 15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"3\",\n                y1: \"21\",\n                x2: \"10\",\n                y2: \"14\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chatbox\",\n        ref: chatRef,\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n          style: {\n            justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start',\n            animation: 'fadeIn 0.25s cubic-bezier(.36,1.7,.72,.97)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-bubble ${msg.role}`,\n            children: renderChatBubbleContent(msg)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this), msg.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-row\",\n            children: [feedback[idx] === undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn\",\n                onClick: () => handleFeedback(idx, 'up'),\n                \"aria-label\": \"Thumbs up\",\n                children: \"\\uD83D\\uDC4D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn\",\n                onClick: () => handleFeedback(idx, 'down'),\n                \"aria-label\": \"Thumbs down\",\n                children: \"\\uD83D\\uDC4E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true), feedback[idx] === 'up' && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"feedback-btn selected\",\n              \"aria-label\": \"Thumbs up\",\n              children: \"\\uD83D\\uDC4D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 23\n            }, this), feedback[idx] === 'down' && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"feedback-btn selected\",\n              \"aria-label\": \"Thumbs down\",\n              children: \"\\uD83D\\uDC4E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions\",\n        children: visibleSuggestions.map((s, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSendMessage(s),\n          className: \"suggestion-button\",\n          children: s\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: inputRef,\n          placeholder: \"Ask me anything...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input),\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSendMessage(input),\n          title: \"Send message\",\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chatbot-footer\",\n        children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ZSIcon,\n          alt: \"ZS Associates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), toast && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast\",\n        children: toast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"3DfwNzS2nx0X7ktKaD/Jmp9G3pI=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotIcon","ZSIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","HARDCODED_ANSWERS","HARDCODED_SUGGESTIONS","formatSnowflakeResponse","responseText","json","JSON","parse","resultSetMetaData","rowType","length","test","name","Array","isArray","data","cellValue","agentObj","output","type","value","e","agentKey","Object","keys","find","key","startsWith","columns","map","col","rowtype","error","code","message","toLowerCase","includes","ChatBot","_s","messages","setMessages","saved","localStorage","getItem","role","text","feedback","setFeedback","suggestionIndex","setSuggestionIndex","stored","parseInt","input","setInput","isOpen","setIsOpen","darkMode","setDarkMode","isExpanded","setIsExpanded","toast","setToast","chatRef","inputRef","visibleSuggestions","fill","_","i","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","handleSendMessage","userMessage","trim","newMessages","setItem","stringify","cleaned","matchedKey","k","hardcodedAnswer","updatedMessages","pendingList","isLikelySQL","match","apiUrl","reqBody","statement","response","fetch","method","headers","body","formatted","llmData","answer","err","handleFeedback","idx","prev","setTimeout","toggleTheme","renderChatBubbleContent","msg","obj","className","children","h","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","style","textAlign","color","row","ridx","cell","cidx","whiteSpace","fontFamily","undefined","parsed","paddingLeft","margin","item","fontWeight","split","line","background","minHeight","onClick","position","right","bottom","zIndex","src","alt","width","height","title","viewBox","cx","cy","r","stroke","strokeWidth","x1","y1","x2","y2","d","newIndex","toString","removeItem","strokeLinecap","strokeLinejoin","points","ref","justifyContent","animation","s","placeholder","onChange","target","onKeyDown","shiftKey","rows","_c","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// Business Q&A\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', OPC = $0 - $12 and LIS patient flag = LIS-DE , LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\"\n};\n\nconst HARDCODED_SUGGESTIONS = [\n  \"Where can I find top 10 Gainer Prescriber over time?\",\n  \"What is Formulary Status?\",\n  \"What are the Number of Current Monthly suggestion KPI?\",\n  \"Which dossier gives a detailed analysis about the Payors?\",\n  \"Where can I find explanations about different KPIS?\",\n  \"What is Mkt % LIS?\",\n  \"Which universes do we show in Accounts calculation?\",\n  \"Where can I find TRX Sales trends overtime?\"\n];\n\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === \"string\" ? JSON.parse(responseText) : responseText;\n\n    // Agent output in Snowflake variant/table format\n    if (\n      json.resultSetMetaData &&\n      json.resultSetMetaData.rowType &&\n      json.resultSetMetaData.rowType.length === 1 &&\n      /^CUSTOM_AGENT/i.test(json.resultSetMetaData.rowType[0].name) &&\n      Array.isArray(json.data) &&\n      json.data.length > 0 &&\n      json.data[0][0]\n    ) {\n      try {\n        const cellValue = json.data[0][0];\n        const agentObj = JSON.parse(cellValue);\n        if (typeof agentObj.output === \"string\") {\n          return { type: \"output\", value: agentObj.output };\n        }\n      } catch (e) {\n        return { type: \"output\", value: json.data[0][0] };\n      }\n    }\n\n    // Agent gateway direct output\n    const agentKey = Object.keys(json).find(key => key.startsWith(\"CUSTOM_AGENT\"));\n    if (agentKey && typeof json[agentKey] === \"string\") {\n      try {\n        const agentObj = JSON.parse(json[agentKey]);\n        if (typeof agentObj.output === \"string\") {\n          return { type: \"output\", value: agentObj.output };\n        }\n        return { type: \"json\", value: agentObj };\n      } catch {\n        return { type: \"output\", value: json[agentKey] };\n      }\n    }\n\n    // Table/structured result (Snowflake direct query)\n    const columns =\n      (json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name)) ||\n      (json.rowType && json.rowType.map(col => col.name)) ||\n      (json.rowtype && json.rowtype.map(col => col.name)) ||\n      (json.columns && json.columns.map(col => col.name));\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return { type: \"table\", columns, data };\n    }\n\n    if (json.error) return { type: \"error\", value: \"❌ Error: \" + json.error };\n    if (\n      json.code &&\n      json.code !== \"000000\" &&\n      (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))\n    ) {\n      return { type: \"error\", value: `❌ Error: ${json.code} - ${json.message}` };\n    }\n    if (json.message) return { type: \"output\", value: json.message };\n\n    return { type: \"output\", value: \"No data found.\" };\n  } catch {\n    return { type: \"error\", value: responseText || \"No response from backend.\" };\n  }\n}\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }];\n  });\n\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState('');\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Only show 4 rotating suggestions\n  const visibleSuggestions = Array(4)\n    .fill(0)\n    .map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n\n  useEffect(() => {\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\n  }, [messages]);\n\n  // Send user message to backend and update chat\n  const handleSendMessage = async (userMessage) => {\n    if (!userMessage.trim()) return;\n    const newMessages = [...messages, { role: 'user', text: userMessage }];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setInput('');\n\n    // HARDCODED ANSWER CHECK\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(\n      k => cleaned.includes(k)\n    );\n    if (matchedKey) {\n      const hardcodedAnswer = HARDCODED_ANSWERS[matchedKey];\n      const updatedMessages = [...newMessages, { role: 'assistant', text: hardcodedAnswer }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // Show loading message\n    const pendingList = [...newMessages, { role: 'assistant', text: '⏳ Thinking...' }];\n    setMessages(pendingList);\n    localStorage.setItem('chatMessages', JSON.stringify(pendingList));\n\n    // Decide: SQL (Snowflake) or LLM (OpenAI)\n    const isLikelySQL = userMessage.trim().toLowerCase().match(/^(select|show|desc|describe)/);\n\n    try {\n      let apiUrl, reqBody;\n      if (isLikelySQL) {\n        apiUrl = 'http://localhost:4000/api/snowflake';\n        reqBody = { statement: userMessage };\n      } else {\n        apiUrl = 'http://localhost:4000/api/llm';\n        reqBody = { message: userMessage };\n      }\n\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(reqBody)\n      });\n\n      let formatted;\n      if (isLikelySQL) {\n        const responseText = await response.text();\n        formatted = formatSnowflakeResponse(responseText);\n      } else {\n        const llmData = await response.json();\n        if (llmData.answer) {\n          formatted = { type: 'output', value: llmData.answer };\n        } else {\n          formatted = { type: 'error', value: llmData.error || \"No answer from LLM.\" };\n        }\n      }\n\n      const updatedMessages = [\n        ...newMessages,\n        { role: 'assistant', text: formatted }\n      ];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    } catch (err) {\n      const formatted = { type: \"error\", value: \"⚠️ Unable to connect to backend.\" };\n      const updatedMessages = [...newMessages, { role: 'assistant', text: formatted }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    }\n  };\n\n  // Feedback handlers\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({ ...prev, [idx]: type }));\n    setToast('Thanks for your feedback!');\n    setTimeout(() => setToast(''), 1100);\n  };\n\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  // Render assistant output smartly\n  const renderChatBubbleContent = (msg) => {\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return (\n          <table className=\"snowflake-table\">\n            <thead>\n              <tr>\n                {obj.columns.map((h, i) => <th key={i}>{h}</th>)}\n              </tr>\n            </thead>\n            <tbody>\n              {obj.data.length === 0 ? (\n                <tr>\n                  <td colSpan={obj.columns.length} style={{ textAlign: 'center', color: '#888' }}>(no results)</td>\n                </tr>\n              ) : obj.data.map((row, ridx) => (\n                <tr key={ridx}>\n                  {row.map((cell, cidx) => (\n                    <td key={cidx} style={{\n                      whiteSpace: 'pre-wrap',\n                      fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                    }}>\n                      {(() => {\n                        try {\n                          if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                            const parsed = JSON.parse(cell);\n                            if (Array.isArray(parsed)) {\n                              return (\n                                <ul style={{ paddingLeft: '18px', margin: 0 }}>\n                                  {parsed.map((item, idx) => <li key={idx}>{item}</li>)}\n                                </ul>\n                              );\n                            }\n                            if (typeof parsed === 'object') {\n                              return <pre>{JSON.stringify(parsed, null, 2)}</pre>;\n                            }\n                          }\n                          return cell;\n                        } catch {\n                          return cell;\n                        }\n                      })()}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        );\n      }\n      if (obj.type === \"output\") {\n        return <div>{obj.value}</div>;\n      }\n      if (obj.type === \"error\") {\n        return <span style={{ color: \"#b91c1c\", fontWeight: 500 }}>{obj.value}</span>;\n      }\n      return <pre>{JSON.stringify(obj.value, null, 2)}</pre>;\n    }\n    // fallback plain text\n    return (msg.text || \"\").split('\\n').map((line, i) => <div key={i}>{line}</div>);\n  };\n\n  return (\n    <div style={{ background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)', minHeight: '100vh' }}>\n      <button\n        className=\"chatbot-toggler modern-toggler\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Toggle chatbot\"\n        style={{ position: 'fixed', right: '20px', bottom: '20px', zIndex: 10000 }}>\n        {isOpen ? '✖' : <img src={ChatbotIcon} alt=\"Chatbot\" style={{ width: 48, height: 48 }} />}\n      </button>\n      {isOpen && (\n        <div\n          className={\n            `chatbot modern-chatbot` +\n            (darkMode ? ' dark-mode' : '') +\n            (isExpanded ? ' expanded' : ' collapsed')\n          }\n        >\n          <header className=\"chatbot-header\">\n            <span style={{ fontWeight: 600 }}>\n              Field Insights<span style={{ color: '#6b38fb' }}> Assistant</span>\n            </span>\n            <div className=\"header-actions\">\n              {/* Theme toggle */}\n              <button\n                onClick={toggleTheme}\n                title=\"Toggle theme\"\n                className=\"header-action-btn\"\n                aria-label=\"Toggle theme\"\n              >\n                {darkMode ? (\n                  <svg width=\"23\" height=\"23\" viewBox=\"0 0 24 24\" fill=\"none\">\n                    <circle cx=\"12\" cy=\"12\" r=\"5\" fill=\"#7c3aed\" />\n                    <g stroke=\"#7c3aed\" strokeWidth=\"2\">\n                      <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"5\" />\n                      <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"22\" />\n                      <line x1=\"4.22\" y1=\"4.22\" x2=\"6.34\" y2=\"6.34\" />\n                      <line x1=\"17.66\" y1=\"17.66\" x2=\"19.78\" y2=\"19.78\" />\n                      <line x1=\"2\" y1=\"12\" x2=\"5\" y2=\"12\" />\n                      <line x1=\"19\" y1=\"12\" x2=\"22\" y2=\"12\" />\n                      <line x1=\"4.22\" y1=\"19.78\" x2=\"6.34\" y2=\"17.66\" />\n                      <line x1=\"17.66\" y1=\"6.34\" x2=\"19.78\" y2=\"4.22\" />\n                    </g>\n                  </svg>\n                ) : (\n                  <svg width=\"23\" height=\"23\" viewBox=\"0 0 24 24\" fill=\"none\">\n                    <path d=\"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\" fill=\"#7c3aed\" />\n                  </svg>\n                )}\n              </button>\n              {/* Refresh */}\n              <button\n                onClick={() => {\n                  const newIndex = (suggestionIndex + 4) % HARDCODED_SUGGESTIONS.length;\n                  setSuggestionIndex(newIndex);\n                  localStorage.setItem('suggestionIndex', newIndex.toString());\n                  setMessages([{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }]);\n                  localStorage.removeItem('chatMessages');\n                  setFeedback({});\n                }}\n                title=\"Clear chat\"\n                className=\"header-action-btn\"\n                aria-label=\"Clear chat\"\n              >\n                <svg width=\"23\" height=\"23\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                  <path d=\"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                </svg>\n              </button>\n              {/* Expand/Collapse */}\n              <button\n                onClick={() => setIsExpanded((prev) => !prev)}\n                title={isExpanded ? 'Collapse window' : 'Expand window'}\n                className=\"header-action-btn\"\n                aria-label={isExpanded ? 'Collapse window' : 'Expand window'}\n              >\n                {isExpanded ? (\n                  <svg width=\"23\" height=\"23\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                    <polyline points=\"8 3 3 3 3 8\" />\n                    <line x1=\"3\" y1=\"3\" x2=\"10\" y2=\"10\" />\n                    <polyline points=\"16 21 21 21 21 16\" />\n                    <line x1=\"21\" y1=\"21\" x2=\"14\" y2=\"14\" />\n                  </svg>\n                ) : (\n                  <svg width=\"23\" height=\"23\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                    <polyline points=\"15 3 21 3 21 9\" />\n                    <line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\" />\n                    <polyline points=\"9 21 3 21 3 15\" />\n                    <line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\" />\n                  </svg>\n                )}\n              </button>\n            </div>\n          </header>\n          <ul className=\"chatbox\" ref={chatRef}>\n            {messages.map((msg, idx) => (\n              <li\n                key={idx}\n                className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}\n                style={{\n                  justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start',\n                  animation: 'fadeIn 0.25s cubic-bezier(.36,1.7,.72,.97)'\n                }}\n              >\n                <div className={`chat-bubble ${msg.role}`}>\n                  {renderChatBubbleContent(msg)}\n                </div>\n                {msg.role === 'assistant' && (\n                  <div className=\"feedback-row\">\n                    {feedback[idx] === undefined && (\n                      <>\n                        <button\n                          className=\"feedback-btn\"\n                          onClick={() => handleFeedback(idx, 'up')}\n                          aria-label=\"Thumbs up\"\n                        >👍</button>\n                        <button\n                          className=\"feedback-btn\"\n                          onClick={() => handleFeedback(idx, 'down')}\n                          aria-label=\"Thumbs down\"\n                        >👎</button>\n                      </>\n                    )}\n                    {feedback[idx] === 'up' && (\n                      <button className=\"feedback-btn selected\" aria-label=\"Thumbs up\">👍</button>\n                    )}\n                    {feedback[idx] === 'down' && (\n                      <button className=\"feedback-btn selected\" aria-label=\"Thumbs down\">👎</button>\n                    )}\n                  </div>\n                )}\n              </li>\n            ))}\n          </ul>\n          <div className=\"suggestions\">\n            {visibleSuggestions.map((s, i) => (\n              <button\n                key={i}\n                onClick={() => handleSendMessage(s)}\n                className=\"suggestion-button\"\n              >\n                {s}\n              </button>\n            ))}\n          </div>\n          <div className=\"chat-input\">\n            <textarea\n              ref={inputRef}\n              placeholder=\"Ask me anything...\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input)}\n              rows={2}\n            ></textarea>\n            <button onClick={() => handleSendMessage(input)} title=\"Send message\" className=\"send-button\">\n              Send\n            </button>\n          </div>\n          <footer className=\"chatbot-footer\">\n            Powered by <img src={ZSIcon} alt=\"ZS Associates\" />\n          </footer>\n          {toast && <div className=\"toast\">{toast}</div>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}