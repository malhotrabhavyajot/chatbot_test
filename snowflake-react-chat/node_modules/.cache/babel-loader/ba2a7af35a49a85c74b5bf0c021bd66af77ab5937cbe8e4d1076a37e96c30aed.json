{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE, LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\nconst HARDCODED_SUGGESTIONS = [\"Which universes do we show in Accounts calculation?\", \"Where can I find TRX Sales trends overtime?\", \"Where can I find top 10 Gainer Prescriber over time?\", \"What is Formulary Status?\", \"What are the number of current monthly suggestion KPIs?\", \"Which dossier gives a detailed analysis about the Payors?\", \"Where can I find explanations about different KPIs?\", \"What is MKT % LIS?\", \"Are any physicians' sales dropped at a geo level?\"];\n\n// ========== Helper: Parse Snowflake Agent Response ==========\nfunction extractAgentOutput(sfJson) {\n  let json = typeof sfJson === 'string' ? JSON.parse(sfJson) : sfJson;\n  if (json && json.data && Array.isArray(json.data) && json.data[0] && typeof json.data[0][0] === \"string\") {\n    try {\n      // The embedded agent JSON as a string\n      const inner = JSON.parse(json.data[0][0]);\n      if (inner && inner.output) {\n        return {\n          type: \"output\",\n          value: inner.output\n        };\n      }\n      return {\n        type: \"output\",\n        value: \"No output found in agent response.\"\n      };\n    } catch {\n      return {\n        type: \"output\",\n        value: json.data[0][0]\n      };\n    }\n  }\n  return {\n    type: \"output\",\n    value: \"No data found.\"\n  };\n}\nfunction TypingIndicator() {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"typing-indicator\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c = TypingIndicator;\nconst Tooltip = ({\n  children,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"feedback-tooltip\",\n  children: [children, /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"feedback-tooltiptext\",\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 3\n}, this);\n_c2 = Tooltip;\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{\n      role: 'assistant',\n      text: 'Hello 👋! How may I assist you?'\n    }];\n  });\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({\n    message: '',\n    type: 'info',\n    visible: false\n  });\n  const [isTyping, setIsTyping] = useState(false);\n\n  // Suggestion & refinement state\n  const [clarifySuggestions, setClarifySuggestions] = useState([]);\n  const [clarifyAssistantMsg, setClarifyAssistantMsg] = useState(\"\");\n  const [clarifyFinal, setClarifyFinal] = useState(\"\"); // not used now\n\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Suggestion randomizer for clear chat\n  const randomizeSuggestions = () => {\n    let newIndex = Math.floor(Math.random() * HARDCODED_SUGGESTIONS.length);\n    if (HARDCODED_SUGGESTIONS.length > 1 && newIndex === suggestionIndex) {\n      newIndex = (newIndex + 1) % HARDCODED_SUGGESTIONS.length;\n    }\n    setSuggestionIndex(newIndex);\n    localStorage.setItem('suggestionIndex', newIndex.toString());\n  };\n  const numSuggestions = isExpanded ? 4 : 2;\n  const visibleSuggestions = Array(numSuggestions).fill(0).map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollTo({\n      top: chatRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [messages, isTyping, isOpen, isExpanded, clarifySuggestions]);\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({\n          ...t,\n          visible: false\n        }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n  const showToast = (msg, type) => {\n    setToast({\n      message: msg,\n      type: type,\n      visible: true\n    });\n  };\n\n  // === CLARIFY/REFINE & FINALIZE LOGIC ===\n  const handleSendMessage = async (userMessage, fromSuggestion = false) => {\n    if (!userMessage || typeof userMessage !== \"string\" || !userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // HARDCODED ANSWERS - instant, no API\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      setIsTyping(false);\n      setClarifySuggestions([]);\n      setClarifyAssistantMsg(\"\");\n      const updatedMessages = [...messages, {\n        role: 'user',\n        text: userMessage\n      }, {\n        role: 'assistant',\n        text: HARDCODED_ANSWERS[matchedKey]\n      }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // CLARIFY with OpenAI: always after user types or picks suggestion\n    const updatedMessages = [...messages, {\n      role: 'user',\n      text: userMessage\n    }];\n    setMessages(updatedMessages);\n    const response = await fetch('http://localhost:4000/api/clarify', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userMessage\n      })\n    });\n    const {\n      assistant_message,\n      suggestions,\n      finalized,\n      final_query\n    } = await response.json();\n\n    // Show assistant message and suggestions\n    setIsTyping(false);\n    setClarifyAssistantMsg(assistant_message || \"\");\n    setClarifySuggestions(suggestions || []);\n    setMessages([...updatedMessages, {\n      role: 'assistant',\n      text: assistant_message\n    }]);\n\n    // If finalized flag is set, auto-send to Snowflake\n    if (finalized && final_query) {\n      setIsTyping(true);\n      setClarifySuggestions([]);\n      setClarifyAssistantMsg(\"\");\n      setInput('');\n      setTimeout(() => handleProceed(final_query), 500); // Delay for smooth UX\n    }\n  };\n\n  // When suggestion is clicked: fill input, don't send!\n  const handleSuggestionToInput = sugg => {\n    setInput(sugg);\n    if (inputRef.current) inputRef.current.focus();\n  };\n\n  // On \"Proceed\" (finalize) send to Snowflake - **Now called automatically**\n  const handleProceed = async queryToSend => {\n    const messageToSend = queryToSend.trim();\n    if (!messageToSend) return;\n    setIsTyping(true);\n    setClarifySuggestions([]);\n    setClarifyAssistantMsg(\"\");\n    setInput('');\n    setMessages(prev => [...prev, {\n      role: 'user',\n      text: messageToSend\n    }]);\n    let body = {\n      statement: `CALL CUSTOM_AGENT2('${messageToSend.replace(/'/g, \"''\")}')`\n    };\n    const response = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    const responseText = await response.text();\n\n    // Agent output extractor: Shows ONLY the output string\n    const agentResponse = extractAgentOutput(responseText);\n    setIsTyping(false);\n    setMessages(prev => [...prev, {\n      role: \"assistant\",\n      text: agentResponse.value\n    }]);\n  };\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({\n      ...prev,\n      [idx]: type\n    }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  // Suggestions (after OpenAI, for refinement—DO NOT send)\n  const renderClarifySuggestions = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clarify-suggestion-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clarify-section-label\",\n      children: \"Suggestions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions\",\n      children: clarifySuggestions.map((sugg, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"suggestion-button\",\n        onClick: () => handleSuggestionToInput(sugg),\n        children: sugg\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n\n  // Static suggestions (before first clarify)\n  const renderHardcodedSuggestions = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suggestions\",\n    style: {\n      position: \"relative\"\n    },\n    children: [visibleSuggestions.map((s, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSendMessage(s, true),\n      className: \"suggestion-button\",\n      children: s\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this)), !isExpanded && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"suggestion-arrow right\",\n      \"aria-label\": \"Next suggestions\",\n      onClick: () => {\n        const max = HARDCODED_SUGGESTIONS.length;\n        setSuggestionIndex(prev => (prev + 1) % max);\n        localStorage.setItem(\"suggestionIndex\", ((suggestionIndex + 1) % max).toString());\n      },\n      style: {\n        border: \"none\",\n        background: \"none\",\n        cursor: \"pointer\",\n        fontSize: 20,\n        marginLeft: 7,\n        color: \"#7c3aed\",\n        alignSelf: \"center\",\n        height: 28,\n        width: 28\n      },\n      children: \"\\u2192\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggler modern-toggler\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Toggle chatbot\",\n      style: {\n        position: 'fixed',\n        right: '20px',\n        bottom: '20px',\n        zIndex: 10000\n      },\n      children: isOpen ? '✖' : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ChatbotIcon,\n        alt: \"Chatbot\",\n        style: {\n          width: 48,\n          height: 48\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot modern-chatbot` + (darkMode ? ' dark-mode' : '') + (isExpanded ? ' expanded' : ' collapsed'),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-title\",\n          children: [\"Field Insights\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header-title-gradient\",\n            children: \" Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleTheme,\n              title: \"Toggle theme\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Toggle theme\",\n              children: darkMode ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"5\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                  stroke: \"#7c3aed\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"2\",\n                    x2: \"12\",\n                    y2: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"19\",\n                    x2: \"12\",\n                    y2: \"22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"4.22\",\n                    x2: \"6.34\",\n                    y2: \"6.34\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"17.66\",\n                    x2: \"19.78\",\n                    y2: \"19.78\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"2\",\n                    y1: \"12\",\n                    x2: \"5\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"19\",\n                    y1: \"12\",\n                    x2: \"22\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"19.78\",\n                    x2: \"6.34\",\n                    y2: \"17.66\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"6.34\",\n                    x2: \"19.78\",\n                    y2: \"4.22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                randomizeSuggestions();\n                setMessages([{\n                  role: 'assistant',\n                  text: 'Hello 👋! How may I assist you?'\n                }]);\n                localStorage.removeItem('chatMessages');\n                setFeedback({});\n                setClarifySuggestions([]);\n                setClarifyAssistantMsg(\"\");\n              },\n              title: \"Clear chat\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Clear chat\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsExpanded(prev => !prev),\n              title: isExpanded ? 'Collapse window' : 'Expand window',\n              className: \"header-action-btn\",\n              \"aria-label\": isExpanded ? 'Collapse window' : 'Expand window',\n              children: isExpanded ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"8 3 3 3 3 8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"3\",\n                  x2: \"10\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"16 21 21 21 21 16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"21\",\n                  x2: \"14\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"15 3 21 3 21 9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"3\",\n                  x2: \"14\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"9 21 3 21 3 15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"21\",\n                  x2: \"10\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chatbox\",\n        ref: chatRef,\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n          style: {\n            justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-bubble ${msg.role}`,\n            children: (msg.text || \"\").split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: line\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this), msg.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-row\",\n            children: [feedback[idx] === undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'up'),\n                  \"aria-label\": \"Thumbs up\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as not helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'down'),\n                  \"aria-label\": \"Thumbs down\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true), feedback[idx] === 'up' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as helpful!\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected up\",\n                \"aria-label\": \"Thumbs up\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 23\n            }, this), feedback[idx] === 'down' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as not helpful\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected down\",\n                \"aria-label\": \"Thumbs down\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 15\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chat incoming\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bubble assistant\",\n            children: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), clarifySuggestions.length > 0 && renderClarifySuggestions(), clarifySuggestions.length === 0 && renderHardcodedSuggestions(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: inputRef,\n          placeholder: \"Ask me anything...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              handleSendMessage(input);\n            }\n          },\n          rows: 1,\n          className: \"chat-input-textarea\",\n          style: {\n            overflow: 'hidden',\n            resize: 'none'\n          },\n          disabled: isTyping,\n          autoFocus: isOpen,\n          \"aria-label\": \"Type your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSendMessage(input),\n          title: \"Send message\",\n          className: `send-button${input.trim() ? \" has-text\" : \"\"}`,\n          disabled: isTyping || !input.trim(),\n          \"aria-label\": \"Send\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            height: \"22\",\n            width: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            style: {\n              display: \"block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M4 20L20 12L4 4V10L16 12L4 14V20Z\",\n              fill: \"currentColor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), toast.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toast toast-${toast.type}`,\n        onClick: () => setToast(t => ({\n          ...t,\n          visible: false\n        })),\n        style: {\n          cursor: 'pointer'\n        },\n        children: toast.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chatbot-footer\",\n        children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ZSIcon,\n          alt: \"ZS Associates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"H0PnxZdTqDh96+MLTG8wHUurdRc=\");\n_c3 = ChatBot;\nexport default ChatBot;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TypingIndicator\");\n$RefreshReg$(_c2, \"Tooltip\");\n$RefreshReg$(_c3, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotIcon","ZSIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","HARDCODED_ANSWERS","HARDCODED_SUGGESTIONS","extractAgentOutput","sfJson","json","JSON","parse","data","Array","isArray","inner","output","type","value","TypingIndicator","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Tooltip","text","_c2","ChatBot","_s","messages","setMessages","saved","localStorage","getItem","role","feedback","setFeedback","suggestionIndex","setSuggestionIndex","stored","parseInt","input","setInput","isOpen","setIsOpen","darkMode","setDarkMode","isExpanded","setIsExpanded","toast","setToast","message","visible","isTyping","setIsTyping","clarifySuggestions","setClarifySuggestions","clarifyAssistantMsg","setClarifyAssistantMsg","clarifyFinal","setClarifyFinal","chatRef","inputRef","randomizeSuggestions","newIndex","Math","floor","random","length","setItem","toString","numSuggestions","visibleSuggestions","fill","map","_","i","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","scrollLeft","timer","setTimeout","t","clearTimeout","showToast","msg","handleSendMessage","userMessage","fromSuggestion","trim","cleaned","toLowerCase","matchedKey","Object","keys","find","k","includes","updatedMessages","stringify","response","fetch","method","headers","body","assistant_message","suggestions","finalized","final_query","handleProceed","handleSuggestionToInput","sugg","focus","queryToSend","messageToSend","prev","statement","replace","responseText","agentResponse","handleFeedback","idx","toggleTheme","renderClarifySuggestions","onClick","renderHardcodedSuggestions","style","position","s","max","border","background","cursor","fontSize","marginLeft","color","alignSelf","height","width","minHeight","right","bottom","zIndex","src","alt","title","viewBox","cx","cy","r","stroke","strokeWidth","x1","y1","x2","y2","d","removeItem","strokeLinecap","strokeLinejoin","points","ref","justifyContent","split","line","undefined","tabIndex","placeholder","onChange","e","target","onKeyDown","key","shiftKey","preventDefault","rows","overflow","resize","disabled","autoFocus","display","_c3","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE, LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\n\nconst HARDCODED_SUGGESTIONS = [\n  \"Which universes do we show in Accounts calculation?\",\n  \"Where can I find TRX Sales trends overtime?\",\n  \"Where can I find top 10 Gainer Prescriber over time?\",\n  \"What is Formulary Status?\",\n  \"What are the number of current monthly suggestion KPIs?\",\n  \"Which dossier gives a detailed analysis about the Payors?\",\n  \"Where can I find explanations about different KPIs?\",\n  \"What is MKT % LIS?\",\n  \"Are any physicians' sales dropped at a geo level?\"\n];\n\n// ========== Helper: Parse Snowflake Agent Response ==========\nfunction extractAgentOutput(sfJson) {\n  let json = typeof sfJson === 'string' ? JSON.parse(sfJson) : sfJson;\n  if (\n    json &&\n    json.data &&\n    Array.isArray(json.data) &&\n    json.data[0] &&\n    typeof json.data[0][0] === \"string\"\n  ) {\n    try {\n      // The embedded agent JSON as a string\n      const inner = JSON.parse(json.data[0][0]);\n      if (inner && inner.output) {\n        return { type: \"output\", value: inner.output };\n      }\n      return { type: \"output\", value: \"No output found in agent response.\" };\n    } catch {\n      return { type: \"output\", value: json.data[0][0] };\n    }\n  }\n  return { type: \"output\", value: \"No data found.\" };\n}\n\nfunction TypingIndicator() {\n  return (\n    <span className=\"typing-indicator\">\n      <span></span><span></span><span></span>\n    </span>\n  );\n}\n\nconst Tooltip = ({ children, text }) => (\n  <span className=\"feedback-tooltip\">\n    {children}\n    <span className=\"feedback-tooltiptext\">{text}</span>\n  </span>\n);\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }];\n  });\n\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({ message: '', type: 'info', visible: false });\n  const [isTyping, setIsTyping] = useState(false);\n\n  // Suggestion & refinement state\n  const [clarifySuggestions, setClarifySuggestions] = useState([]);\n  const [clarifyAssistantMsg, setClarifyAssistantMsg] = useState(\"\");\n  const [clarifyFinal, setClarifyFinal] = useState(\"\"); // not used now\n\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Suggestion randomizer for clear chat\n  const randomizeSuggestions = () => {\n    let newIndex = Math.floor(Math.random() * HARDCODED_SUGGESTIONS.length);\n    if (HARDCODED_SUGGESTIONS.length > 1 && newIndex === suggestionIndex) {\n      newIndex = (newIndex + 1) % HARDCODED_SUGGESTIONS.length;\n    }\n    setSuggestionIndex(newIndex);\n    localStorage.setItem('suggestionIndex', newIndex.toString());\n  };\n\n  const numSuggestions = isExpanded ? 4 : 2;\n  const visibleSuggestions = Array(numSuggestions)\n    .fill(0)\n    .map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n\n  useEffect(() => {\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\n  }, [messages, isTyping, isOpen, isExpanded, clarifySuggestions]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({ ...t, visible: false }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n\n  const showToast = (msg, type) => {\n    setToast({ message: msg, type: type, visible: true });\n  };\n\n  // === CLARIFY/REFINE & FINALIZE LOGIC ===\n  const handleSendMessage = async (userMessage, fromSuggestion = false) => {\n    if (!userMessage || typeof userMessage !== \"string\" || !userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // HARDCODED ANSWERS - instant, no API\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      setIsTyping(false);\n      setClarifySuggestions([]);\n      setClarifyAssistantMsg(\"\");\n      const updatedMessages = [...messages, { role: 'user', text: userMessage }, { role: 'assistant', text: HARDCODED_ANSWERS[matchedKey] }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // CLARIFY with OpenAI: always after user types or picks suggestion\n    const updatedMessages = [...messages, { role: 'user', text: userMessage }];\n    setMessages(updatedMessages);\n\n    const response = await fetch('http://localhost:4000/api/clarify', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userMessage })\n    });\n    const { assistant_message, suggestions, finalized, final_query } = await response.json();\n\n    // Show assistant message and suggestions\n    setIsTyping(false);\n    setClarifyAssistantMsg(assistant_message || \"\");\n    setClarifySuggestions(suggestions || []);\n\n    setMessages([\n      ...updatedMessages,\n      { role: 'assistant', text: assistant_message }\n    ]);\n\n    // If finalized flag is set, auto-send to Snowflake\n    if (finalized && final_query) {\n      setIsTyping(true);\n      setClarifySuggestions([]);\n      setClarifyAssistantMsg(\"\");\n      setInput('');\n      setTimeout(() => handleProceed(final_query), 500); // Delay for smooth UX\n    }\n  };\n\n  // When suggestion is clicked: fill input, don't send!\n  const handleSuggestionToInput = (sugg) => {\n    setInput(sugg);\n    if (inputRef.current) inputRef.current.focus();\n  };\n\n  // On \"Proceed\" (finalize) send to Snowflake - **Now called automatically**\n  const handleProceed = async (queryToSend) => {\n    const messageToSend = queryToSend.trim();\n    if (!messageToSend) return;\n    setIsTyping(true);\n    setClarifySuggestions([]);\n    setClarifyAssistantMsg(\"\");\n    setInput('');\n    setMessages(prev => [...prev, { role: 'user', text: messageToSend }]);\n    let body = { statement: `CALL CUSTOM_AGENT2('${messageToSend.replace(/'/g, \"''\")}')` };\n    const response = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    });\n    const responseText = await response.text();\n\n    // Agent output extractor: Shows ONLY the output string\n    const agentResponse = extractAgentOutput(responseText);\n\n    setIsTyping(false);\n    setMessages(prev => [\n      ...prev,\n      { role: \"assistant\", text: agentResponse.value }\n    ]);\n  };\n\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({ ...prev, [idx]: type }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  // Suggestions (after OpenAI, for refinement—DO NOT send)\n  const renderClarifySuggestions = () => (\n    <div className=\"clarify-suggestion-block\">\n      <div className=\"clarify-section-label\">Suggestions:</div>\n      <div className=\"suggestions\">\n        {clarifySuggestions.map((sugg, idx) => (\n          <button\n            key={idx}\n            className=\"suggestion-button\"\n            onClick={() => handleSuggestionToInput(sugg)}\n          >{sugg}</button>\n        ))}\n      </div>\n    </div>\n  );\n\n  // Static suggestions (before first clarify)\n  const renderHardcodedSuggestions = () => (\n    <div className=\"suggestions\" style={{ position: \"relative\" }}>\n      {visibleSuggestions.map((s, i) => (\n        <button\n          key={i}\n          onClick={() => handleSendMessage(s, true)}\n          className=\"suggestion-button\"\n        >\n          {s}\n        </button>\n      ))}\n      {!isExpanded &&\n        <button\n          className=\"suggestion-arrow right\"\n          aria-label=\"Next suggestions\"\n          onClick={() => {\n            const max = HARDCODED_SUGGESTIONS.length;\n            setSuggestionIndex((prev) => (prev + 1) % max);\n            localStorage.setItem(\n              \"suggestionIndex\",\n              ((suggestionIndex + 1) % max).toString()\n            );\n          }}\n          style={{\n            border: \"none\",\n            background: \"none\",\n            cursor: \"pointer\",\n            fontSize: 20,\n            marginLeft: 7,\n            color: \"#7c3aed\",\n            alignSelf: \"center\",\n            height: 28,\n            width: 28\n          }}\n        >&#8594;</button>\n      }\n    </div>\n  );\n\n  return (\n    <div style={{ background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)', minHeight: '100vh' }}>\n      <button\n        className=\"chatbot-toggler modern-toggler\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Toggle chatbot\"\n        style={{ position: 'fixed', right: '20px', bottom: '20px', zIndex: 10000 }}>\n        {isOpen ? '✖' : <img src={ChatbotIcon} alt=\"Chatbot\" style={{ width: 48, height: 48 }} />}\n      </button>\n      {isOpen && (\n        <div\n          className={\n            `chatbot modern-chatbot` +\n            (darkMode ? ' dark-mode' : '') +\n            (isExpanded ? ' expanded' : ' collapsed')\n          }\n        >\n          <header className=\"chatbot-header\">\n            <span className=\"header-title\">\n              Field Insights<span className=\"header-title-gradient\"> Assistant</span>\n            </span>\n            <div className=\"header-controls\">\n              <div className=\"header-actions\">\n                <button onClick={toggleTheme} title=\"Toggle theme\" className=\"header-action-btn\" aria-label=\"Toggle theme\">\n                  {darkMode ? (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <circle cx=\"12\" cy=\"12\" r=\"5\" fill=\"#7c3aed\" />\n                      <g stroke=\"#7c3aed\" strokeWidth=\"2\">\n                        <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"5\" />\n                        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"22\" />\n                        <line x1=\"4.22\" y1=\"4.22\" x2=\"6.34\" y2=\"6.34\" />\n                        <line x1=\"17.66\" y1=\"17.66\" x2=\"19.78\" y2=\"19.78\" />\n                        <line x1=\"2\" y1=\"12\" x2=\"5\" y2=\"12\" />\n                        <line x1=\"19\" y1=\"12\" x2=\"22\" y2=\"12\" />\n                        <line x1=\"4.22\" y1=\"19.78\" x2=\"6.34\" y2=\"17.66\" />\n                        <line x1=\"17.66\" y1=\"6.34\" x2=\"19.78\" y2=\"4.22\" />\n                      </g>\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <path d=\"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\" fill=\"#7c3aed\" />\n                    </svg>\n                  )}\n                </button>\n                <button\n                  onClick={() => {\n                    randomizeSuggestions();\n                    setMessages([{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }]);\n                    localStorage.removeItem('chatMessages');\n                    setFeedback({});\n                    setClarifySuggestions([]);\n                    setClarifyAssistantMsg(\"\");\n                  }}\n                  title=\"Clear chat\"\n                  className=\"header-action-btn\"\n                  aria-label=\"Clear chat\"\n                >\n                  <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                    <path d=\"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                  </svg>\n                </button>\n                <button\n                  onClick={() => setIsExpanded((prev) => !prev)}\n                  title={isExpanded ? 'Collapse window' : 'Expand window'}\n                  className=\"header-action-btn\"\n                  aria-label={isExpanded ? 'Collapse window' : 'Expand window'}\n                >\n                  {isExpanded ? (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"8 3 3 3 3 8\" />\n                      <line x1=\"3\" y1=\"3\" x2=\"10\" y2=\"10\" />\n                      <polyline points=\"16 21 21 21 21 16\" />\n                      <line x1=\"21\" y1=\"21\" x2=\"14\" y2=\"14\" />\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"15 3 21 3 21 9\" />\n                      <line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\" />\n                      <polyline points=\"9 21 3 21 3 15\" />\n                      <line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n            </div>\n          </header>\n          <ul className=\"chatbox\" ref={chatRef}>\n            {messages.map((msg, idx) => (\n              <li\n                key={idx}\n                className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}\n                style={{ justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start' }}\n              >\n                <div className={`chat-bubble ${msg.role}`}>\n                  {(msg.text || \"\").split('\\n').map((line, i) => (\n                    <div key={i}>{line}</div>\n                  ))}\n                </div>\n                {msg.role === 'assistant' && (\n                  <div className=\"feedback-row\">\n                    {feedback[idx] === undefined && (\n                      <>\n                        <Tooltip text=\"Mark as helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'up')}\n                            aria-label=\"Thumbs up\"\n                            tabIndex={0}\n                          >👍</button>\n                        </Tooltip>\n                        <Tooltip text=\"Mark as not helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'down')}\n                            aria-label=\"Thumbs down\"\n                            tabIndex={0}\n                          >👎</button>\n                        </Tooltip>\n                      </>\n                    )}\n                    {feedback[idx] === 'up' && (\n                      <Tooltip text=\"Marked as helpful!\">\n                        <button className=\"feedback-btn selected up\" aria-label=\"Thumbs up\" tabIndex={0}>👍</button>\n                      </Tooltip>\n                    )}\n                    {feedback[idx] === 'down' && (\n                      <Tooltip text=\"Marked as not helpful\">\n                        <button className=\"feedback-btn selected down\" aria-label=\"Thumbs down\" tabIndex={0}>👎</button>\n                      </Tooltip>\n                    )}\n                  </div>\n                )}\n              </li>\n            ))}\n            {isTyping && (\n              <li className=\"chat incoming\">\n                <div className=\"chat-bubble assistant\">\n                  <TypingIndicator />\n                </div>\n              </li>\n            )}\n          </ul>\n          {/* Suggestions panel after OpenAI clarify */}\n          {clarifySuggestions.length > 0 && renderClarifySuggestions()}\n          {/* If not in clarify/refinement, show static suggestions */}\n          {clarifySuggestions.length === 0 && renderHardcodedSuggestions()}\n          {/* Main input is always present */}\n          <div className=\"chat-input\">\n            <textarea\n              ref={inputRef}\n              placeholder=\"Ask me anything...\"\n              value={input}\n              onChange={e => setInput(e.target.value)}\n              onKeyDown={e => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage(input);\n                }\n              }}\n              rows={1}\n              className=\"chat-input-textarea\"\n              style={{ overflow: 'hidden', resize: 'none' }}\n              disabled={isTyping}\n              autoFocus={isOpen}\n              aria-label=\"Type your message\"\n            />\n            <button\n              onClick={() => handleSendMessage(input)}\n              title=\"Send message\"\n              className={`send-button${input.trim() ? \" has-text\" : \"\"}`}\n              disabled={isTyping || !input.trim()}\n              aria-label=\"Send\"\n            >\n              <svg height=\"22\" width=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ display: \"block\" }}>\n                <path d=\"M4 20L20 12L4 4V10L16 12L4 14V20Z\" fill=\"currentColor\" />\n              </svg>\n            </button>\n          </div>\n          {toast.visible && (\n            <div\n              className={`toast toast-${toast.type}`}\n              onClick={() => setToast(t => ({ ...t, visible: false }))}\n              style={{ cursor: 'pointer' }}\n            >\n              {toast.message}\n            </div>\n          )}\n          <footer className=\"chatbot-footer\">\n            Powered by <img src={ZSIcon} alt=\"ZS Associates\" />\n          </footer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}