{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE, LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\n\n// Helper: Parse CUSTOM_AGENT2 output\nfunction parseCustomAgent2Output(responseText) {\n  if (typeof responseText === \"string\" && responseText.startsWith(\"CUSTOM_AGENT2\")) {\n    const match = responseText.match(/CUSTOM_AGENT2\\s*({[\\s\\S]+})/);\n    if (match) {\n      try {\n        const obj = JSON.parse(match[1]);\n        if (obj && obj.output) return obj.output;\n      } catch (e) {}\n    }\n  }\n  return null;\n}\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    const columns = json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name) || json.rowType && json.rowType.map(col => col.name) || json.rowtype && json.rowtype.map(col => col.name) || json.columns && json.columns.map(col => col.name);\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return {\n      type: \"error\",\n      value: \"❌ Error: \" + json.error\n    };\n    if (json.code && json.code !== \"000000\" && (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))) {\n      return {\n        type: \"error\",\n        value: `❌ Error: ${json.code} - ${json.message}`\n      };\n    }\n    if (json.message) return {\n      type: \"output\",\n      value: json.message\n    };\n    return {\n      type: \"output\",\n      value: \"No data found.\"\n    };\n  } catch {\n    return {\n      type: \"error\",\n      value: responseText || \"No response from backend.\"\n    };\n  }\n}\nfunction extractSQLBlock(text) {\n  const match = text && text.match(/```sql\\s*([\\s\\S]*?)```/i);\n  return match ? match[1].trim() : null;\n}\nfunction TypingIndicator() {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"typing-indicator\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_c = TypingIndicator;\nconst Tooltip = ({\n  children,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"feedback-tooltip\",\n  children: [children, /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"feedback-tooltiptext\",\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 77,\n  columnNumber: 3\n}, this);\n_c2 = Tooltip;\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{\n      role: 'assistant',\n      text: 'Hello 👋! How may I assist you?'\n    }];\n  });\n  const [feedback, setFeedback] = useState({});\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({\n    message: '',\n    type: 'info',\n    visible: false\n  });\n  const [isTyping, setIsTyping] = useState(false);\n\n  // Clarify/refine state (not used now)\n  const [clarifySuggestions, setClarifySuggestions] = useState([]);\n  const [clarifyMode, setClarifyMode] = useState(false);\n  const chatRef = useRef();\n  const inputRef = useRef();\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollTo({\n      top: chatRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [messages, isTyping, isOpen, isExpanded, clarifySuggestions]);\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({\n          ...t,\n          visible: false\n        }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n  const showToast = (msg, type) => {\n    setToast({\n      message: msg,\n      type: type,\n      visible: true\n    });\n  };\n\n  // Handles user sending a message, always goes through clarify/LLM\n  const handleSendMessage = async (userMessage, fromSuggestion = false) => {\n    if (!userMessage || typeof userMessage !== \"string\" || !userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // HARDCODED ANSWERS (instant, no LLM)\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      setIsTyping(false);\n      setClarifySuggestions([]);\n      setClarifyMode(false);\n      const updatedMessages = [...messages, {\n        role: 'user',\n        text: userMessage\n      }, {\n        role: 'assistant',\n        text: HARDCODED_ANSWERS[matchedKey]\n      }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // Always send message to clarify endpoint\n    const updatedMessages = [...messages, {\n      role: 'user',\n      text: userMessage\n    }];\n    setMessages(updatedMessages);\n    try {\n      const response = await fetch('http://localhost:4000/api/clarify', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userMessage\n        })\n      });\n      const {\n        assistant_message,\n        finalized\n      } = await response.json();\n\n      // If finalized, auto-send to snowflake!\n      if (finalized) {\n        setClarifySuggestions([]);\n        setClarifyMode(false);\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          text: assistant_message\n        }]);\n        setIsTyping(true);\n\n        // Unwrap the query from quotes if needed\n        let finalPrompt = assistant_message;\n        if (typeof finalPrompt === \"string\" && /^[\"“”'].*[\"“”']$/.test(finalPrompt.trim())) {\n          finalPrompt = finalPrompt.trim().replace(/^[\"“”']|[\"“”']$/g, \"\");\n        }\n\n        // Now send to snowflake agent\n        let sql = extractSQLBlock(finalPrompt) || finalPrompt;\n        let body = {\n          statement: `CALL CUSTOM_AGENT2('${sql.replace(/'/g, \"''\")}')`\n        };\n        const snowflakeRes = await fetch('http://localhost:4000/api/snowflake', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        });\n        const responseText = await snowflakeRes.text();\n\n        // Use the helper to ONLY show output if present\n        const parsedAgentOutput = parseCustomAgent2Output(responseText);\n        setIsTyping(false);\n        if (parsedAgentOutput) {\n          setMessages(prev => [...prev, {\n            role: \"assistant\",\n            text: parsedAgentOutput\n          }]);\n        } else {\n          const formatted = formatSnowflakeResponse(responseText);\n          setMessages(prev => [...prev, {\n            role: \"assistant\",\n            text: formatted\n          }]);\n        }\n        return;\n      } else {\n        setClarifyMode(true);\n        setIsTyping(false);\n        setClarifySuggestions([]); // Not used anymore\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          text: assistant_message\n        }]);\n        return;\n      }\n    } catch (error) {\n      setIsTyping(false);\n      setClarifySuggestions([]);\n      setClarifyMode(false);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        text: \"Sorry, I couldn't process your query. Please try again.\"\n      }]);\n      return;\n    }\n  };\n\n  // Suggestion click just fills the input field, not send\n  // (Unused, can delete if not needed)\n  // const handleSuggestionToInput = (sugg) => {\n  //   setInput(sugg);\n  //   if (inputRef.current) inputRef.current.focus();\n  // };\n\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({\n      ...prev,\n      [idx]: type\n    }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n  const toggleTheme = () => setDarkMode(prev => !prev);\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n    showToast('Copied to clipboard!', 'success');\n  };\n  const renderChatBubbleContent = msg => {\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"snowflake-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: obj.columns.map((h, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: h\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 44\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: obj.data.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: obj.columns.length,\n                style: {\n                  textAlign: 'center',\n                  color: '#888'\n                },\n                children: \"(no results)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this) : obj.data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.map((cell, cidx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  whiteSpace: 'pre-wrap',\n                  fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                },\n                children: (() => {\n                  try {\n                    if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                      const parsed = JSON.parse(cell);\n                      if (Array.isArray(parsed)) {\n                        return /*#__PURE__*/_jsxDEV(\"ul\", {\n                          style: {\n                            paddingLeft: '18px',\n                            margin: 0\n                          },\n                          children: parsed.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: item\n                          }, idx, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 265,\n                            columnNumber: 62\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 264,\n                          columnNumber: 33\n                        }, this);\n                      }\n                      if (typeof parsed === 'object') {\n                        return /*#__PURE__*/_jsxDEV(\"pre\", {\n                          children: JSON.stringify(parsed, null, 2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 270,\n                          columnNumber: 38\n                        }, this);\n                      }\n                    }\n                    return cell;\n                  } catch {\n                    return cell;\n                  }\n                })()\n              }, cidx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this))\n            }, ridx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this);\n      }\n      if (obj.type === \"output\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 16\n        }, this);\n      }\n      if (obj.type === \"error\") {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#b91c1c\",\n            fontWeight: 500\n          },\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 16\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(obj.value, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 14\n      }, this);\n    }\n    // SQL/code blocks\n    if (typeof msg.text === \"string\") {\n      const sqlBlock = extractSQLBlock(msg.text);\n      if (sqlBlock) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assistant-output-block\",\n          style: {\n            position: 'relative',\n            marginBottom: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 600,\n              marginBottom: 8\n            },\n            children: \"Snowflake SQL Query:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"assistant-sql-block\",\n            style: {\n              marginBottom: 8,\n              borderRadius: 12,\n              background: '#f5f2fd',\n              padding: 15,\n              fontSize: 14,\n              overflowX: 'auto'\n            },\n            children: sqlBlock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              border: 'none',\n              background: '#ede7fa',\n              borderRadius: 7,\n              padding: '3px 10px',\n              fontSize: 13,\n              color: '#5233c0',\n              cursor: 'pointer'\n            },\n            onClick: () => handleCopy(sqlBlock),\n            title: \"Copy SQL\",\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#444',\n              marginTop: 10,\n              fontSize: 14\n            },\n            children: msg.text.replace(/```sql[\\s\\S]*?```/i, '').trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this);\n      }\n    }\n    return (msg.text || \"\").split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: line\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggler modern-toggler\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Toggle chatbot\",\n      style: {\n        position: 'fixed',\n        right: '20px',\n        bottom: '20px',\n        zIndex: 10000\n      },\n      children: isOpen ? '✖' : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ChatbotIcon,\n        alt: \"Chatbot\",\n        style: {\n          width: 48,\n          height: 48\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot modern-chatbot` + (darkMode ? ' dark-mode' : '') + (isExpanded ? ' expanded' : ' collapsed'),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-title\",\n          children: [\"Field Insights\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header-title-gradient\",\n            children: \" Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleTheme,\n              title: \"Toggle theme\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Toggle theme\",\n              children: darkMode ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"5\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                  stroke: \"#7c3aed\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"2\",\n                    x2: \"12\",\n                    y2: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"19\",\n                    x2: \"12\",\n                    y2: \"22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"4.22\",\n                    x2: \"6.34\",\n                    y2: \"6.34\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"17.66\",\n                    x2: \"19.78\",\n                    y2: \"19.78\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"2\",\n                    y1: \"12\",\n                    x2: \"5\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"19\",\n                    y1: \"12\",\n                    x2: \"22\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"19.78\",\n                    x2: \"6.34\",\n                    y2: \"17.66\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"6.34\",\n                    x2: \"19.78\",\n                    y2: \"4.22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setMessages([{\n                  role: 'assistant',\n                  text: 'Hello 👋! How may I assist you?'\n                }]);\n                localStorage.removeItem('chatMessages');\n                setFeedback({});\n                setClarifySuggestions([]);\n                setClarifyMode(false);\n              },\n              title: \"Clear chat\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Clear chat\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsExpanded(prev => !prev),\n              title: isExpanded ? 'Collapse window' : 'Expand window',\n              className: \"header-action-btn\",\n              \"aria-label\": isExpanded ? 'Collapse window' : 'Expand window',\n              children: isExpanded ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"8 3 3 3 3 8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"3\",\n                  x2: \"10\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"16 21 21 21 21 16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"21\",\n                  x2: \"14\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"15 3 21 3 21 9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"3\",\n                  x2: \"14\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"9 21 3 21 3 15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"21\",\n                  x2: \"10\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chatbox\",\n        ref: chatRef,\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n          style: {\n            justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-bubble ${msg.role}`,\n            children: renderChatBubbleContent(msg)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this), msg.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-row\",\n            children: [feedback[idx] === undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'up'),\n                  \"aria-label\": \"Thumbs up\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as not helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'down'),\n                  \"aria-label\": \"Thumbs down\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true), feedback[idx] === 'up' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as helpful!\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected up\",\n                \"aria-label\": \"Thumbs up\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 23\n            }, this), feedback[idx] === 'down' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as not helpful\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected down\",\n                \"aria-label\": \"Thumbs down\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 15\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chat incoming\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bubble assistant\",\n            children: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: inputRef,\n          placeholder: \"Ask me anything...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              handleSendMessage(input);\n            }\n          },\n          rows: 1,\n          className: \"chat-input-textarea\",\n          style: {\n            overflow: 'hidden',\n            resize: 'none'\n          },\n          disabled: isTyping,\n          autoFocus: isOpen,\n          \"aria-label\": \"Type your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSendMessage(input),\n          title: \"Send message\",\n          className: `send-button${input.trim() ? \" has-text\" : \"\"}`,\n          disabled: isTyping || !input.trim(),\n          \"aria-label\": \"Send\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            height: \"22\",\n            width: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            style: {\n              display: \"block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M4 20L20 12L4 4V10L16 12L4 14V20Z\",\n              fill: \"currentColor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this), toast.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toast toast-${toast.type}`,\n        onClick: () => setToast(t => ({\n          ...t,\n          visible: false\n        })),\n        style: {\n          cursor: 'pointer'\n        },\n        children: toast.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chatbot-footer\",\n        children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ZSIcon,\n          alt: \"ZS Associates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"Ax8e5BSlej/5Bk6alOTEaWJweNE=\");\n_c3 = ChatBot;\nexport default ChatBot;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TypingIndicator\");\n$RefreshReg$(_c2, \"Tooltip\");\n$RefreshReg$(_c3, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotIcon","ZSIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","HARDCODED_ANSWERS","parseCustomAgent2Output","responseText","startsWith","match","obj","JSON","parse","output","e","formatSnowflakeResponse","json","columns","resultSetMetaData","rowType","map","col","name","rowtype","data","Array","isArray","length","type","error","value","code","message","toLowerCase","includes","extractSQLBlock","text","trim","TypingIndicator","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Tooltip","_c2","ChatBot","_s","messages","setMessages","saved","localStorage","getItem","role","feedback","setFeedback","input","setInput","isOpen","setIsOpen","darkMode","setDarkMode","isExpanded","setIsExpanded","toast","setToast","visible","isTyping","setIsTyping","clarifySuggestions","setClarifySuggestions","clarifyMode","setClarifyMode","chatRef","inputRef","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","scrollLeft","timer","setTimeout","t","clearTimeout","showToast","msg","handleSendMessage","userMessage","fromSuggestion","cleaned","matchedKey","Object","keys","find","k","updatedMessages","setItem","stringify","response","fetch","method","headers","body","assistant_message","finalized","prev","finalPrompt","test","replace","sql","statement","snowflakeRes","parsedAgentOutput","formatted","handleFeedback","idx","toggleTheme","handleCopy","navigator","clipboard","writeText","renderChatBubbleContent","h","i","colSpan","style","textAlign","color","row","ridx","cell","cidx","whiteSpace","fontFamily","undefined","parsed","paddingLeft","margin","item","fontWeight","sqlBlock","position","marginBottom","borderRadius","background","padding","fontSize","overflowX","right","border","cursor","onClick","title","marginTop","split","line","minHeight","bottom","zIndex","src","alt","width","height","viewBox","fill","cx","cy","r","stroke","strokeWidth","x1","y1","x2","y2","d","removeItem","strokeLinecap","strokeLinejoin","points","ref","justifyContent","tabIndex","placeholder","onChange","target","onKeyDown","key","shiftKey","preventDefault","rows","overflow","resize","disabled","autoFocus","display","_c3","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE, LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\n\n// Helper: Parse CUSTOM_AGENT2 output\nfunction parseCustomAgent2Output(responseText) {\n  if (typeof responseText === \"string\" && responseText.startsWith(\"CUSTOM_AGENT2\")) {\n    const match = responseText.match(/CUSTOM_AGENT2\\s*({[\\s\\S]+})/);\n    if (match) {\n      try {\n        const obj = JSON.parse(match[1]);\n        if (obj && obj.output) return obj.output;\n      } catch (e) {}\n    }\n  }\n  return null;\n}\n\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    const columns =\n      (json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name)) ||\n      (json.rowType && json.rowType.map(col => col.name)) ||\n      (json.rowtype && json.rowtype.map(col => col.name)) ||\n      (json.columns && json.columns.map(col => col.name));\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return { type: \"error\", value: \"❌ Error: \" + json.error };\n    if (\n      json.code &&\n      json.code !== \"000000\" &&\n      (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))\n    ) {\n      return { type: \"error\", value: `❌ Error: ${json.code} - ${json.message}` };\n    }\n    if (json.message) return { type: \"output\", value: json.message };\n    return { type: \"output\", value: \"No data found.\" };\n  } catch {\n    return { type: \"error\", value: responseText || \"No response from backend.\" };\n  }\n}\n\nfunction extractSQLBlock(text) {\n  const match = text && text.match(/```sql\\s*([\\s\\S]*?)```/i);\n  return match ? match[1].trim() : null;\n}\n\nfunction TypingIndicator() {\n  return (\n    <span className=\"typing-indicator\">\n      <span></span><span></span><span></span>\n    </span>\n  );\n}\n\nconst Tooltip = ({ children, text }) => (\n  <span className=\"feedback-tooltip\">\n    {children}\n    <span className=\"feedback-tooltiptext\">{text}</span>\n  </span>\n);\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }];\n  });\n\n  const [feedback, setFeedback] = useState({});\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({ message: '', type: 'info', visible: false });\n  const [isTyping, setIsTyping] = useState(false);\n\n  // Clarify/refine state (not used now)\n  const [clarifySuggestions, setClarifySuggestions] = useState([]);\n  const [clarifyMode, setClarifyMode] = useState(false);\n\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  useEffect(() => {\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\n  }, [messages, isTyping, isOpen, isExpanded, clarifySuggestions]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({ ...t, visible: false }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n\n  const showToast = (msg, type) => {\n    setToast({ message: msg, type: type, visible: true });\n  };\n\n  // Handles user sending a message, always goes through clarify/LLM\n  const handleSendMessage = async (userMessage, fromSuggestion = false) => {\n    if (!userMessage || typeof userMessage !== \"string\" || !userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // HARDCODED ANSWERS (instant, no LLM)\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      setIsTyping(false);\n      setClarifySuggestions([]);\n      setClarifyMode(false);\n      const updatedMessages = [...messages, { role: 'user', text: userMessage }, { role: 'assistant', text: HARDCODED_ANSWERS[matchedKey] }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // Always send message to clarify endpoint\n    const updatedMessages = [...messages, { role: 'user', text: userMessage }];\n    setMessages(updatedMessages);\n\n    try {\n      const response = await fetch('http://localhost:4000/api/clarify', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userMessage })\n      });\n      const { assistant_message, finalized } = await response.json();\n\n      // If finalized, auto-send to snowflake!\n      if (finalized) {\n        setClarifySuggestions([]);\n        setClarifyMode(false);\n        setMessages(prev => [...prev, { role: 'assistant', text: assistant_message }]);\n        setIsTyping(true);\n\n        // Unwrap the query from quotes if needed\n        let finalPrompt = assistant_message;\n        if (typeof finalPrompt === \"string\" && /^[\"“”'].*[\"“”']$/.test(finalPrompt.trim())) {\n          finalPrompt = finalPrompt.trim().replace(/^[\"“”']|[\"“”']$/g, \"\");\n        }\n\n        // Now send to snowflake agent\n        let sql = extractSQLBlock(finalPrompt) || finalPrompt;\n        let body = { statement: `CALL CUSTOM_AGENT2('${sql.replace(/'/g, \"''\")}')` };\n        const snowflakeRes = await fetch('http://localhost:4000/api/snowflake', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(body)\n        });\n        const responseText = await snowflakeRes.text();\n\n        // Use the helper to ONLY show output if present\n        const parsedAgentOutput = parseCustomAgent2Output(responseText);\n\n        setIsTyping(false);\n\n        if (parsedAgentOutput) {\n          setMessages(prev => [\n            ...prev,\n            { role: \"assistant\", text: parsedAgentOutput }\n          ]);\n        } else {\n          const formatted = formatSnowflakeResponse(responseText);\n          setMessages(prev => [\n            ...prev,\n            { role: \"assistant\", text: formatted }\n          ]);\n        }\n        return;\n      } else {\n        setClarifyMode(true);\n        setIsTyping(false);\n        setClarifySuggestions([]); // Not used anymore\n        setMessages(prev => [...prev, { role: 'assistant', text: assistant_message }]);\n        return;\n      }\n    } catch (error) {\n      setIsTyping(false);\n      setClarifySuggestions([]);\n      setClarifyMode(false);\n      setMessages(prev => [...prev, { role: 'assistant', text: \"Sorry, I couldn't process your query. Please try again.\" }]);\n      return;\n    }\n  };\n\n  // Suggestion click just fills the input field, not send\n  // (Unused, can delete if not needed)\n  // const handleSuggestionToInput = (sugg) => {\n  //   setInput(sugg);\n  //   if (inputRef.current) inputRef.current.focus();\n  // };\n\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({ ...prev, [idx]: type }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text);\n    showToast('Copied to clipboard!', 'success');\n  };\n\n  const renderChatBubbleContent = (msg) => {\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return (\n          <table className=\"snowflake-table\">\n            <thead>\n              <tr>\n                {obj.columns.map((h, i) => <th key={i}>{h}</th>)}\n              </tr>\n            </thead>\n            <tbody>\n              {obj.data.length === 0 ? (\n                <tr>\n                  <td colSpan={obj.columns.length} style={{ textAlign: 'center', color: '#888' }}>(no results)</td>\n                </tr>\n              ) : obj.data.map((row, ridx) => (\n                <tr key={ridx}>\n                  {row.map((cell, cidx) => (\n                    <td key={cidx} style={{\n                      whiteSpace: 'pre-wrap',\n                      fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                    }}>\n                      {(() => {\n                        try {\n                          if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                            const parsed = JSON.parse(cell);\n                            if (Array.isArray(parsed)) {\n                              return (\n                                <ul style={{ paddingLeft: '18px', margin: 0 }}>\n                                  {parsed.map((item, idx) => <li key={idx}>{item}</li>)}\n                                </ul>\n                              );\n                            }\n                            if (typeof parsed === 'object') {\n                              return <pre>{JSON.stringify(parsed, null, 2)}</pre>;\n                            }\n                          }\n                          return cell;\n                        } catch {\n                          return cell;\n                        }\n                      })()}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        );\n      }\n      if (obj.type === \"output\") {\n        return <div>{obj.value}</div>;\n      }\n      if (obj.type === \"error\") {\n        return <span style={{ color: \"#b91c1c\", fontWeight: 500 }}>{obj.value}</span>;\n      }\n      return <pre>{JSON.stringify(obj.value, null, 2)}</pre>;\n    }\n    // SQL/code blocks\n    if (typeof msg.text === \"string\") {\n      const sqlBlock = extractSQLBlock(msg.text);\n      if (sqlBlock) {\n        return (\n          <div className=\"assistant-output-block\" style={{ position: 'relative', marginBottom: 6 }}>\n            <div style={{ fontWeight: 600, marginBottom: 8 }}>Snowflake SQL Query:</div>\n            <pre className=\"assistant-sql-block\" style={{\n              marginBottom: 8,\n              borderRadius: 12,\n              background: '#f5f2fd',\n              padding: 15,\n              fontSize: 14,\n              overflowX: 'auto'\n            }}>{sqlBlock}</pre>\n            <button\n              style={{\n                position: 'absolute',\n                top: 8,\n                right: 8,\n                border: 'none',\n                background: '#ede7fa',\n                borderRadius: 7,\n                padding: '3px 10px',\n                fontSize: 13,\n                color: '#5233c0',\n                cursor: 'pointer'\n              }}\n              onClick={() => handleCopy(sqlBlock)}\n              title=\"Copy SQL\"\n            >\n              Copy\n            </button>\n            <div style={{ color: '#444', marginTop: 10, fontSize: 14 }}>\n              {msg.text.replace(/```sql[\\s\\S]*?```/i, '').trim()}\n            </div>\n          </div>\n        );\n      }\n    }\n    return (msg.text || \"\").split('\\n').map((line, i) => (\n      <div key={i}>{line}</div>\n    ));\n  };\n\n  return (\n    <div style={{ background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)', minHeight: '100vh' }}>\n      <button\n        className=\"chatbot-toggler modern-toggler\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Toggle chatbot\"\n        style={{ position: 'fixed', right: '20px', bottom: '20px', zIndex: 10000 }}>\n        {isOpen ? '✖' : <img src={ChatbotIcon} alt=\"Chatbot\" style={{ width: 48, height: 48 }} />}\n      </button>\n      {isOpen && (\n        <div\n          className={\n            `chatbot modern-chatbot` +\n            (darkMode ? ' dark-mode' : '') +\n            (isExpanded ? ' expanded' : ' collapsed')\n          }\n        >\n          <header className=\"chatbot-header\">\n            <span className=\"header-title\">\n              Field Insights<span className=\"header-title-gradient\"> Assistant</span>\n            </span>\n            <div className=\"header-controls\">\n              <div className=\"header-actions\">\n                <button onClick={toggleTheme} title=\"Toggle theme\" className=\"header-action-btn\" aria-label=\"Toggle theme\">\n                  {darkMode ? (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <circle cx=\"12\" cy=\"12\" r=\"5\" fill=\"#7c3aed\" />\n                      <g stroke=\"#7c3aed\" strokeWidth=\"2\">\n                        <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"5\" />\n                        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"22\" />\n                        <line x1=\"4.22\" y1=\"4.22\" x2=\"6.34\" y2=\"6.34\" />\n                        <line x1=\"17.66\" y1=\"17.66\" x2=\"19.78\" y2=\"19.78\" />\n                        <line x1=\"2\" y1=\"12\" x2=\"5\" y2=\"12\" />\n                        <line x1=\"19\" y1=\"12\" x2=\"22\" y2=\"12\" />\n                        <line x1=\"4.22\" y1=\"19.78\" x2=\"6.34\" y2=\"17.66\" />\n                        <line x1=\"17.66\" y1=\"6.34\" x2=\"19.78\" y2=\"4.22\" />\n                      </g>\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <path d=\"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\" fill=\"#7c3aed\" />\n                    </svg>\n                  )}\n                </button>\n                <button\n                  onClick={() => {\n                    setMessages([{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }]);\n                    localStorage.removeItem('chatMessages');\n                    setFeedback({});\n                    setClarifySuggestions([]);\n                    setClarifyMode(false);\n                  }}\n                  title=\"Clear chat\"\n                  className=\"header-action-btn\"\n                  aria-label=\"Clear chat\"\n                >\n                  <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                    <path d=\"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                  </svg>\n                </button>\n                <button\n                  onClick={() => setIsExpanded((prev) => !prev)}\n                  title={isExpanded ? 'Collapse window' : 'Expand window'}\n                  className=\"header-action-btn\"\n                  aria-label={isExpanded ? 'Collapse window' : 'Expand window'}\n                >\n                  {isExpanded ? (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"8 3 3 3 3 8\" />\n                      <line x1=\"3\" y1=\"3\" x2=\"10\" y2=\"10\" />\n                      <polyline points=\"16 21 21 21 21 16\" />\n                      <line x1=\"21\" y1=\"21\" x2=\"14\" y2=\"14\" />\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"15 3 21 3 21 9\" />\n                      <line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\" />\n                      <polyline points=\"9 21 3 21 3 15\" />\n                      <line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n            </div>\n          </header>\n          <ul className=\"chatbox\" ref={chatRef}>\n            {messages.map((msg, idx) => (\n              <li\n                key={idx}\n                className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}\n                style={{ justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start' }}\n              >\n                <div className={`chat-bubble ${msg.role}`}>\n                  {renderChatBubbleContent(msg)}\n                </div>\n                {msg.role === 'assistant' && (\n                  <div className=\"feedback-row\">\n                    {feedback[idx] === undefined && (\n                      <>\n                        <Tooltip text=\"Mark as helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'up')}\n                            aria-label=\"Thumbs up\"\n                            tabIndex={0}\n                          >👍</button>\n                        </Tooltip>\n                        <Tooltip text=\"Mark as not helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'down')}\n                            aria-label=\"Thumbs down\"\n                            tabIndex={0}\n                          >👎</button>\n                        </Tooltip>\n                      </>\n                    )}\n                    {feedback[idx] === 'up' && (\n                      <Tooltip text=\"Marked as helpful!\">\n                        <button className=\"feedback-btn selected up\" aria-label=\"Thumbs up\" tabIndex={0}>👍</button>\n                      </Tooltip>\n                    )}\n                    {feedback[idx] === 'down' && (\n                      <Tooltip text=\"Marked as not helpful\">\n                        <button className=\"feedback-btn selected down\" aria-label=\"Thumbs down\" tabIndex={0}>👎</button>\n                      </Tooltip>\n                    )}\n                  </div>\n                )}\n              </li>\n            ))}\n            {isTyping && (\n              <li className=\"chat incoming\">\n                <div className=\"chat-bubble assistant\">\n                  <TypingIndicator />\n                </div>\n              </li>\n            )}\n          </ul>\n          <div className=\"chat-input\">\n            <textarea\n              ref={inputRef}\n              placeholder=\"Ask me anything...\"\n              value={input}\n              onChange={e => setInput(e.target.value)}\n              onKeyDown={e => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage(input);\n                }\n              }}\n              rows={1}\n              className=\"chat-input-textarea\"\n              style={{ overflow: 'hidden', resize: 'none' }}\n              disabled={isTyping}\n              autoFocus={isOpen}\n              aria-label=\"Type your message\"\n            />\n            <button\n              onClick={() => handleSendMessage(input)}\n              title=\"Send message\"\n              className={`send-button${input.trim() ? \" has-text\" : \"\"}`}\n              disabled={isTyping || !input.trim()}\n              aria-label=\"Send\"\n            >\n              <svg height=\"22\" width=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ display: \"block\" }}>\n                <path d=\"M4 20L20 12L4 4V10L16 12L4 14V20Z\" fill=\"currentColor\" />\n              </svg>\n            </button>\n          </div>\n          {toast.visible && (\n            <div\n              className={`toast toast-${toast.type}`}\n              onClick={() => setToast(t => ({ ...t, visible: false }))}\n              style={{ cursor: 'pointer' }}\n            >\n              {toast.message}\n            </div>\n          )}\n          <footer className=\"chatbot-footer\">\n            Powered by <img src={ZSIcon} alt=\"ZS Associates\" />\n          </footer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}