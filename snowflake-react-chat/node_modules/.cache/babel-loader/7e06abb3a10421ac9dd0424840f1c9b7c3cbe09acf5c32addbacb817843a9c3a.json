{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HARDCODED_ANSWERS = {\n  // ... your hardcoded answers as before\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE, LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\nconst HARDCODED_SUGGESTIONS = [\"Which universes do we show in Accounts calculation?\", \"Where can I find TRX Sales trends overtime?\", \"Where can I find top 10 Gainer Prescriber over time?\", \"What is Formulary Status?\", \"What are the number of current monthly suggestion KPIs?\", \"Which dossier gives a detailed analysis about the Payors?\", \"Where can I find explanations about different KPIs?\", \"What is MKT % LIS?\", \"Are any physicians' sales dropped at a geo level?\"];\n\n// ----------------- CUSTOM_AGENT2 parsing helpers -----------------\nfunction parseCustomAgent2(text) {\n  if (typeof text !== \"string\" || !text.startsWith(\"CUSTOM_AGENT2\")) return null;\n  const match = text.match(/CUSTOM_AGENT2\\s*({[\\s\\S]+})/);\n  if (!match) return null;\n  try {\n    return JSON.parse(match[1]);\n  } catch {\n    return null;\n  }\n}\nfunction isMultiDataPoint(output) {\n  // True if more than one bullet-style line is present (e.g., \"- KEY: VALUE\")\n  return typeof output === \"string\" && output.split(\"\\n\").filter(line => line.trim().startsWith(\"- \")).length > 1;\n}\n\n// ----------------- Standard format helpers ----------------------\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    const columns = json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name) || json.rowType && json.rowType.map(col => col.name) || json.rowtype && json.rowtype.map(col => col.name) || json.columns && json.columns.map(col => col.name);\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return {\n      type: \"error\",\n      value: \"❌ Error: \" + json.error\n    };\n    if (json.code && json.code !== \"000000\" && (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))) {\n      return {\n        type: \"error\",\n        value: `❌ Error: ${json.code} - ${json.message}`\n      };\n    }\n    if (json.message) return {\n      type: \"output\",\n      value: json.message\n    };\n    return {\n      type: \"output\",\n      value: \"No data found.\"\n    };\n  } catch {\n    return {\n      type: \"error\",\n      value: responseText || \"No response from backend.\"\n    };\n  }\n}\nfunction extractSQLBlock(text) {\n  const match = text && text.match(/```sql\\s*([\\s\\S]*?)```/i);\n  return match ? match[1].trim() : null;\n}\nfunction TypingIndicator() {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"typing-indicator\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_c = TypingIndicator;\nconst Tooltip = ({\n  children,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"feedback-tooltip\",\n  children: [children, /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"feedback-tooltiptext\",\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 94,\n  columnNumber: 3\n}, this);\n\n// ========================== MAIN COMPONENT =============================\n_c2 = Tooltip;\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{\n      role: 'assistant',\n      text: 'Hello 👋! How may I assist you?'\n    }];\n  });\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({\n    message: '',\n    type: 'info',\n    visible: false\n  });\n  const [isTyping, setIsTyping] = useState(false);\n\n  // Suggestion & refinement state\n  const [clarifySuggestions, setClarifySuggestions] = useState([]);\n  const [clarifyFinal, setClarifyFinal] = useState(\"\"); // Stores the finalized query from clarify step\n\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Suggestion randomizer for clear chat\n  const randomizeSuggestions = () => {\n    let newIndex = Math.floor(Math.random() * HARDCODED_SUGGESTIONS.length);\n    if (HARDCODED_SUGGESTIONS.length > 1 && newIndex === suggestionIndex) {\n      newIndex = (newIndex + 1) % HARDCODED_SUGGESTIONS.length;\n    }\n    setSuggestionIndex(newIndex);\n    localStorage.setItem('suggestionIndex', newIndex.toString());\n  };\n  const numSuggestions = isExpanded ? 4 : 2;\n  const visibleSuggestions = Array(numSuggestions).fill(0).map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollTo({\n      top: chatRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [messages, isTyping, isOpen, isExpanded, clarifySuggestions]);\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({\n          ...t,\n          visible: false\n        }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n  const showToast = (msg, type) => {\n    setToast({\n      message: msg,\n      type: type,\n      visible: true\n    });\n  };\n\n  // === CLARIFY/REFINE LOGIC ===\n  const handleSendMessage = async (userMessage, fromSuggestion = false) => {\n    if (!userMessage || typeof userMessage !== \"string\" || !userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n    setClarifyFinal(\"\"); // Clear old finalized query\n\n    // HARDCODED ANSWERS - instant, no API\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      setIsTyping(false);\n      setClarifySuggestions([]);\n      const updatedMessages = [...messages, {\n        role: 'user',\n        text: userMessage\n      }, {\n        role: 'assistant',\n        text: HARDCODED_ANSWERS[matchedKey]\n      }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // Go to OpenAI clarify endpoint, show suggestions, allow further edits/convo\n    const updatedMessages = [...messages, {\n      role: 'user',\n      text: userMessage\n    }];\n    setMessages(updatedMessages);\n    const response = await fetch('http://localhost:4000/api/clarify', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userMessage\n      })\n    });\n    const {\n      assistant_message,\n      suggestions,\n      finalized\n    } = await response.json();\n\n    // If the backend returns a \"finalized\" flag and a final query, go to Snowflake now\n    if (finalized && typeof assistant_message === \"string\") {\n      setIsTyping(true);\n      setClarifySuggestions([]);\n      setClarifyFinal(\"\");\n      setMessages([...updatedMessages, {\n        role: 'assistant',\n        text: assistant_message\n      }]);\n      handleSendToSnowflake(assistant_message, updatedMessages);\n      return;\n    }\n\n    // Otherwise: Show clarify message + suggestions, allow further user input\n    if (suggestions && suggestions.length > 0) {\n      setIsTyping(false);\n      setClarifySuggestions(suggestions);\n      setClarifyFinal(\"\"); // Not finalized yet\n      setMessages([...updatedMessages, {\n        role: 'assistant',\n        text: assistant_message\n      }]);\n      return;\n    }\n    setIsTyping(false);\n    setClarifySuggestions([]);\n    setClarifyFinal(\"\");\n    setMessages([...updatedMessages, {\n      role: 'assistant',\n      text: assistant_message || \"Could you clarify your query?\"\n    }]);\n    return;\n  };\n\n  // Send the final query to Snowflake (called either directly after clarify, or by user input)\n  const handleSendToSnowflake = async (finalQuery, msgHistory) => {\n    setIsTyping(true);\n    setInput('');\n    let sql = extractSQLBlock(finalQuery) || finalQuery;\n    let body = {\n      statement: `CALL CUSTOM_AGENT2('${sql.replace(/'/g, \"''\")}')`\n    };\n    const response = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    const responseText = await response.text();\n    setIsTyping(false);\n    setMessages(prev => [...(msgHistory || prev), {\n      role: \"assistant\",\n      text: responseText\n    }]);\n  };\n\n  // When suggestion is clicked: fill input (not send)\n  const handleSuggestionToInput = sugg => {\n    setInput(sugg);\n    if (inputRef.current) inputRef.current.focus();\n  };\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({\n      ...prev,\n      [idx]: type\n    }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n  const toggleTheme = () => setDarkMode(prev => !prev);\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n    showToast('Copied to clipboard!', 'success');\n  };\n\n  // --- UPDATED: renderChatBubbleContent, cleanly handle CUSTOM_AGENT2 output ---\n  function renderAssistantResponse(msg) {\n    const parsed = parseCustomAgent2(msg.text);\n    if (parsed && parsed.output) {\n      if (isMultiDataPoint(parsed.output)) {\n        const lines = parsed.output.split(\"\\n\");\n        // The first line might be a general message\n        const firstNonBullet = lines.find(line => !line.trim().startsWith(\"- \")) || \"\";\n        const rows = lines.filter(line => line.trim().startsWith(\"- \")).map(line => {\n          // \"- KEY: VALUE\"\n          const parts = line.replace(/^- /, '').split(':');\n          return {\n            label: parts[0].trim(),\n            value: parts.slice(1).join(':').trim()\n          };\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [firstNonBullet && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 8\n            },\n            children: firstNonBullet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"snowflake-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Label\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: rows.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this);\n      }\n      // Single value: show as a plain message\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: parsed.output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 14\n      }, this);\n    }\n    // fallback: old rendering\n    return (msg.text || \"\").split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: line\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 58\n    }, this));\n  }\n\n  // Suggestions (after OpenAI, for refinement—DO NOT send)\n  const renderClarifySuggestions = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clarify-suggestion-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clarify-section-label\",\n      children: \"Suggestions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions\",\n      children: clarifySuggestions.map((sugg, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"suggestion-button\",\n        onClick: () => handleSuggestionToInput(sugg),\n        children: sugg\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n\n  // Static suggestions (before first clarify)\n  const renderHardcodedSuggestions = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suggestions\",\n    style: {\n      position: \"relative\"\n    },\n    children: [visibleSuggestions.map((s, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSendMessage(s, true),\n      className: \"suggestion-button\",\n      children: s\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }, this)), !isExpanded && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"suggestion-arrow right\",\n      \"aria-label\": \"Next suggestions\",\n      onClick: () => {\n        const max = HARDCODED_SUGGESTIONS.length;\n        setSuggestionIndex(prev => (prev + 1) % max);\n        localStorage.setItem(\"suggestionIndex\", ((suggestionIndex + 1) % max).toString());\n      },\n      style: {\n        border: \"none\",\n        background: \"none\",\n        cursor: \"pointer\",\n        fontSize: 20,\n        marginLeft: 7,\n        color: \"#7c3aed\",\n        alignSelf: \"center\",\n        height: 28,\n        width: 28\n      },\n      children: \"\\u2192\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggler modern-toggler\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Toggle chatbot\",\n      style: {\n        position: 'fixed',\n        right: '20px',\n        bottom: '20px',\n        zIndex: 10000\n      },\n      children: isOpen ? '✖' : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ChatbotIcon,\n        alt: \"Chatbot\",\n        style: {\n          width: 48,\n          height: 48\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot modern-chatbot` + (darkMode ? ' dark-mode' : '') + (isExpanded ? ' expanded' : ' collapsed'),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-title\",\n          children: [\"Field Insights\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header-title-gradient\",\n            children: \" Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleTheme,\n              title: \"Toggle theme\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Toggle theme\",\n              children: darkMode ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"5\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                  stroke: \"#7c3aed\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"2\",\n                    x2: \"12\",\n                    y2: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"19\",\n                    x2: \"12\",\n                    y2: \"22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"4.22\",\n                    x2: \"6.34\",\n                    y2: \"6.34\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"17.66\",\n                    x2: \"19.78\",\n                    y2: \"19.78\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"2\",\n                    y1: \"12\",\n                    x2: \"5\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"19\",\n                    y1: \"12\",\n                    x2: \"22\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"19.78\",\n                    x2: \"6.34\",\n                    y2: \"17.66\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"6.34\",\n                    x2: \"19.78\",\n                    y2: \"4.22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                randomizeSuggestions();\n                setMessages([{\n                  role: 'assistant',\n                  text: 'Hello 👋! How may I assist you?'\n                }]);\n                localStorage.removeItem('chatMessages');\n                setFeedback({});\n                setClarifySuggestions([]);\n              },\n              title: \"Clear chat\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Clear chat\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsExpanded(prev => !prev),\n              title: isExpanded ? 'Collapse window' : 'Expand window',\n              className: \"header-action-btn\",\n              \"aria-label\": isExpanded ? 'Collapse window' : 'Expand window',\n              children: isExpanded ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"8 3 3 3 3 8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"3\",\n                  x2: \"10\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"16 21 21 21 21 16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"21\",\n                  x2: \"14\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"15 3 21 3 21 9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"3\",\n                  x2: \"14\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"9 21 3 21 3 15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"21\",\n                  x2: \"10\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chatbox\",\n        ref: chatRef,\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n          style: {\n            justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-bubble ${msg.role}`,\n            children: msg.role === 'assistant' ? renderAssistantResponse(msg) : (msg.text || \"\").split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: line\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 69\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this), msg.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-row\",\n            children: [feedback[idx] === undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'up'),\n                  \"aria-label\": \"Thumbs up\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as not helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'down'),\n                  \"aria-label\": \"Thumbs down\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true), feedback[idx] === 'up' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as helpful!\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected up\",\n                \"aria-label\": \"Thumbs up\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 23\n            }, this), feedback[idx] === 'down' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as not helpful\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected down\",\n                \"aria-label\": \"Thumbs down\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 15\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chat incoming\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bubble assistant\",\n            children: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this), clarifySuggestions.length > 0 && renderClarifySuggestions(), clarifySuggestions.length === 0 && renderHardcodedSuggestions(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: inputRef,\n          placeholder: \"Ask me anything...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              handleSendMessage(input);\n            }\n          },\n          rows: 1,\n          className: \"chat-input-textarea\",\n          style: {\n            overflow: 'hidden',\n            resize: 'none'\n          },\n          disabled: isTyping,\n          autoFocus: isOpen,\n          \"aria-label\": \"Type your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSendMessage(input),\n          title: \"Send message\",\n          className: `send-button${input.trim() ? \" has-text\" : \"\"}`,\n          disabled: isTyping || !input.trim(),\n          \"aria-label\": \"Send\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            height: \"22\",\n            width: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            style: {\n              display: \"block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M4 20L20 12L4 4V10L16 12L4 14V20Z\",\n              fill: \"currentColor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }, this), toast.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toast toast-${toast.type}`,\n        onClick: () => setToast(t => ({\n          ...t,\n          visible: false\n        })),\n        style: {\n          cursor: 'pointer'\n        },\n        children: toast.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chatbot-footer\",\n        children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ZSIcon,\n          alt: \"ZS Associates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"ybW3kITWec/kVX22jwGSLjSNbGw=\");\n_c3 = ChatBot;\nexport default ChatBot;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TypingIndicator\");\n$RefreshReg$(_c2, \"Tooltip\");\n$RefreshReg$(_c3, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotIcon","ZSIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","HARDCODED_ANSWERS","HARDCODED_SUGGESTIONS","parseCustomAgent2","text","startsWith","match","JSON","parse","isMultiDataPoint","output","split","filter","line","trim","length","formatSnowflakeResponse","responseText","json","columns","resultSetMetaData","rowType","map","col","name","rowtype","data","Array","isArray","type","error","value","code","message","toLowerCase","includes","extractSQLBlock","TypingIndicator","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Tooltip","_c2","ChatBot","_s","messages","setMessages","saved","localStorage","getItem","role","feedback","setFeedback","suggestionIndex","setSuggestionIndex","stored","parseInt","input","setInput","isOpen","setIsOpen","darkMode","setDarkMode","isExpanded","setIsExpanded","toast","setToast","visible","isTyping","setIsTyping","clarifySuggestions","setClarifySuggestions","clarifyFinal","setClarifyFinal","chatRef","inputRef","randomizeSuggestions","newIndex","Math","floor","random","setItem","toString","numSuggestions","visibleSuggestions","fill","_","i","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","scrollLeft","timer","setTimeout","t","clearTimeout","showToast","msg","handleSendMessage","userMessage","fromSuggestion","cleaned","matchedKey","Object","keys","find","k","updatedMessages","stringify","response","fetch","method","headers","body","assistant_message","suggestions","finalized","handleSendToSnowflake","finalQuery","msgHistory","sql","statement","replace","prev","handleSuggestionToInput","sugg","focus","handleFeedback","idx","toggleTheme","handleCopy","navigator","clipboard","writeText","renderAssistantResponse","parsed","lines","firstNonBullet","rows","parts","label","slice","join","style","marginBottom","row","renderClarifySuggestions","onClick","renderHardcodedSuggestions","position","s","max","border","background","cursor","fontSize","marginLeft","color","alignSelf","height","width","minHeight","right","bottom","zIndex","src","alt","title","viewBox","cx","cy","r","stroke","strokeWidth","x1","y1","x2","y2","d","removeItem","strokeLinecap","strokeLinejoin","points","ref","justifyContent","undefined","tabIndex","placeholder","onChange","e","target","onKeyDown","key","shiftKey","preventDefault","overflow","resize","disabled","autoFocus","display","_c3","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\nconst HARDCODED_ANSWERS = {\n  // ... your hardcoded answers as before\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE, LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\n\nconst HARDCODED_SUGGESTIONS = [\n  \"Which universes do we show in Accounts calculation?\",\n  \"Where can I find TRX Sales trends overtime?\",\n  \"Where can I find top 10 Gainer Prescriber over time?\",\n  \"What is Formulary Status?\",\n  \"What are the number of current monthly suggestion KPIs?\",\n  \"Which dossier gives a detailed analysis about the Payors?\",\n  \"Where can I find explanations about different KPIs?\",\n  \"What is MKT % LIS?\",\n  \"Are any physicians' sales dropped at a geo level?\"\n];\n\n// ----------------- CUSTOM_AGENT2 parsing helpers -----------------\nfunction parseCustomAgent2(text) {\n  if (typeof text !== \"string\" || !text.startsWith(\"CUSTOM_AGENT2\")) return null;\n  const match = text.match(/CUSTOM_AGENT2\\s*({[\\s\\S]+})/);\n  if (!match) return null;\n  try {\n    return JSON.parse(match[1]);\n  } catch {\n    return null;\n  }\n}\n\nfunction isMultiDataPoint(output) {\n  // True if more than one bullet-style line is present (e.g., \"- KEY: VALUE\")\n  return typeof output === \"string\" && output.split(\"\\n\").filter(line => line.trim().startsWith(\"- \")).length > 1;\n}\n\n// ----------------- Standard format helpers ----------------------\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    const columns =\n      (json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name)) ||\n      (json.rowType && json.rowType.map(col => col.name)) ||\n      (json.rowtype && json.rowtype.map(col => col.name)) ||\n      (json.columns && json.columns.map(col => col.name));\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return { type: \"error\", value: \"❌ Error: \" + json.error };\n    if (\n      json.code &&\n      json.code !== \"000000\" &&\n      (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))\n    ) {\n      return { type: \"error\", value: `❌ Error: ${json.code} - ${json.message}` };\n    }\n    if (json.message) return { type: \"output\", value: json.message };\n    return { type: \"output\", value: \"No data found.\" };\n  } catch {\n    return { type: \"error\", value: responseText || \"No response from backend.\" };\n  }\n}\n\nfunction extractSQLBlock(text) {\n  const match = text && text.match(/```sql\\s*([\\s\\S]*?)```/i);\n  return match ? match[1].trim() : null;\n}\n\nfunction TypingIndicator() {\n  return (\n    <span className=\"typing-indicator\">\n      <span></span><span></span><span></span>\n    </span>\n  );\n}\n\nconst Tooltip = ({ children, text }) => (\n  <span className=\"feedback-tooltip\">\n    {children}\n    <span className=\"feedback-tooltiptext\">{text}</span>\n  </span>\n);\n\n// ========================== MAIN COMPONENT =============================\nconst ChatBot = () => {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }];\n  });\n\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({ message: '', type: 'info', visible: false });\n  const [isTyping, setIsTyping] = useState(false);\n\n  // Suggestion & refinement state\n  const [clarifySuggestions, setClarifySuggestions] = useState([]);\n  const [clarifyFinal, setClarifyFinal] = useState(\"\"); // Stores the finalized query from clarify step\n\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Suggestion randomizer for clear chat\n  const randomizeSuggestions = () => {\n    let newIndex = Math.floor(Math.random() * HARDCODED_SUGGESTIONS.length);\n    if (HARDCODED_SUGGESTIONS.length > 1 && newIndex === suggestionIndex) {\n      newIndex = (newIndex + 1) % HARDCODED_SUGGESTIONS.length;\n    }\n    setSuggestionIndex(newIndex);\n    localStorage.setItem('suggestionIndex', newIndex.toString());\n  };\n\n  const numSuggestions = isExpanded ? 4 : 2;\n  const visibleSuggestions = Array(numSuggestions)\n    .fill(0)\n    .map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n\n  useEffect(() => {\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\n  }, [messages, isTyping, isOpen, isExpanded, clarifySuggestions]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({ ...t, visible: false }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n\n  const showToast = (msg, type) => {\n    setToast({ message: msg, type: type, visible: true });\n  };\n\n  // === CLARIFY/REFINE LOGIC ===\n  const handleSendMessage = async (userMessage, fromSuggestion = false) => {\n    if (!userMessage || typeof userMessage !== \"string\" || !userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n    setClarifyFinal(\"\"); // Clear old finalized query\n\n    // HARDCODED ANSWERS - instant, no API\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      setIsTyping(false);\n      setClarifySuggestions([]);\n      const updatedMessages = [...messages, { role: 'user', text: userMessage }, { role: 'assistant', text: HARDCODED_ANSWERS[matchedKey] }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // Go to OpenAI clarify endpoint, show suggestions, allow further edits/convo\n    const updatedMessages = [...messages, { role: 'user', text: userMessage }];\n    setMessages(updatedMessages);\n\n    const response = await fetch('http://localhost:4000/api/clarify', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userMessage })\n    });\n    const { assistant_message, suggestions, finalized } = await response.json();\n\n    // If the backend returns a \"finalized\" flag and a final query, go to Snowflake now\n    if (finalized && typeof assistant_message === \"string\") {\n      setIsTyping(true);\n      setClarifySuggestions([]);\n      setClarifyFinal(\"\");\n      setMessages([...updatedMessages, { role: 'assistant', text: assistant_message }]);\n      handleSendToSnowflake(assistant_message, updatedMessages);\n      return;\n    }\n\n    // Otherwise: Show clarify message + suggestions, allow further user input\n    if (suggestions && suggestions.length > 0) {\n      setIsTyping(false);\n      setClarifySuggestions(suggestions);\n      setClarifyFinal(\"\"); // Not finalized yet\n      setMessages([\n        ...updatedMessages,\n        { role: 'assistant', text: assistant_message }\n      ]);\n      return;\n    }\n    setIsTyping(false);\n    setClarifySuggestions([]);\n    setClarifyFinal(\"\");\n    setMessages([\n      ...updatedMessages,\n      { role: 'assistant', text: assistant_message || \"Could you clarify your query?\" }\n    ]);\n    return;\n  };\n\n  // Send the final query to Snowflake (called either directly after clarify, or by user input)\n  const handleSendToSnowflake = async (finalQuery, msgHistory) => {\n    setIsTyping(true);\n    setInput('');\n    let sql = extractSQLBlock(finalQuery) || finalQuery;\n    let body = { statement: `CALL CUSTOM_AGENT2('${sql.replace(/'/g, \"''\")}')` };\n    const response = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    });\n    const responseText = await response.text();\n\n    setIsTyping(false);\n    setMessages(prev => [\n      ...(msgHistory || prev),\n      { role: \"assistant\", text: responseText }\n    ]);\n  };\n\n  // When suggestion is clicked: fill input (not send)\n  const handleSuggestionToInput = (sugg) => {\n    setInput(sugg);\n    if (inputRef.current) inputRef.current.focus();\n  };\n\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({ ...prev, [idx]: type }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text);\n    showToast('Copied to clipboard!', 'success');\n  };\n\n  // --- UPDATED: renderChatBubbleContent, cleanly handle CUSTOM_AGENT2 output ---\n  function renderAssistantResponse(msg) {\n    const parsed = parseCustomAgent2(msg.text);\n    if (parsed && parsed.output) {\n      if (isMultiDataPoint(parsed.output)) {\n        const lines = parsed.output.split(\"\\n\");\n        // The first line might be a general message\n        const firstNonBullet = lines.find(line => !line.trim().startsWith(\"- \")) || \"\";\n        const rows = lines\n          .filter(line => line.trim().startsWith(\"- \"))\n          .map(line => {\n            // \"- KEY: VALUE\"\n            const parts = line.replace(/^- /, '').split(':');\n            return { label: parts[0].trim(), value: parts.slice(1).join(':').trim() };\n          });\n        return (\n          <div>\n            {firstNonBullet && <div style={{ marginBottom: 8 }}>{firstNonBullet}</div>}\n            <table className=\"snowflake-table\">\n              <thead>\n                <tr>\n                  <th>Label</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                {rows.map((row, i) => (\n                  <tr key={i}>\n                    <td>{row.label}</td>\n                    <td>{row.value}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        );\n      }\n      // Single value: show as a plain message\n      return <div>{parsed.output}</div>;\n    }\n    // fallback: old rendering\n    return (msg.text || \"\").split('\\n').map((line, i) => <div key={i}>{line}</div>);\n  }\n\n  // Suggestions (after OpenAI, for refinement—DO NOT send)\n  const renderClarifySuggestions = () => (\n    <div className=\"clarify-suggestion-block\">\n      <div className=\"clarify-section-label\">Suggestions:</div>\n      <div className=\"suggestions\">\n        {clarifySuggestions.map((sugg, idx) => (\n          <button\n            key={idx}\n            className=\"suggestion-button\"\n            onClick={() => handleSuggestionToInput(sugg)}\n          >{sugg}</button>\n        ))}\n      </div>\n    </div>\n  );\n\n  // Static suggestions (before first clarify)\n  const renderHardcodedSuggestions = () => (\n    <div className=\"suggestions\" style={{ position: \"relative\" }}>\n      {visibleSuggestions.map((s, i) => (\n        <button\n          key={i}\n          onClick={() => handleSendMessage(s, true)}\n          className=\"suggestion-button\"\n        >\n          {s}\n        </button>\n      ))}\n      {!isExpanded &&\n        <button\n          className=\"suggestion-arrow right\"\n          aria-label=\"Next suggestions\"\n          onClick={() => {\n            const max = HARDCODED_SUGGESTIONS.length;\n            setSuggestionIndex((prev) => (prev + 1) % max);\n            localStorage.setItem(\n              \"suggestionIndex\",\n              ((suggestionIndex + 1) % max).toString()\n            );\n          }}\n          style={{\n            border: \"none\",\n            background: \"none\",\n            cursor: \"pointer\",\n            fontSize: 20,\n            marginLeft: 7,\n            color: \"#7c3aed\",\n            alignSelf: \"center\",\n            height: 28,\n            width: 28\n          }}\n        >&#8594;</button>\n      }\n    </div>\n  );\n\n  return (\n    <div style={{ background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)', minHeight: '100vh' }}>\n      <button\n        className=\"chatbot-toggler modern-toggler\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Toggle chatbot\"\n        style={{ position: 'fixed', right: '20px', bottom: '20px', zIndex: 10000 }}>\n        {isOpen ? '✖' : <img src={ChatbotIcon} alt=\"Chatbot\" style={{ width: 48, height: 48 }} />}\n      </button>\n      {isOpen && (\n        <div\n          className={\n            `chatbot modern-chatbot` +\n            (darkMode ? ' dark-mode' : '') +\n            (isExpanded ? ' expanded' : ' collapsed')\n          }\n        >\n          <header className=\"chatbot-header\">\n            <span className=\"header-title\">\n              Field Insights<span className=\"header-title-gradient\"> Assistant</span>\n            </span>\n            <div className=\"header-controls\">\n              <div className=\"header-actions\">\n                <button onClick={toggleTheme} title=\"Toggle theme\" className=\"header-action-btn\" aria-label=\"Toggle theme\">\n                  {darkMode ? (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <circle cx=\"12\" cy=\"12\" r=\"5\" fill=\"#7c3aed\" />\n                      <g stroke=\"#7c3aed\" strokeWidth=\"2\">\n                        <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"5\" />\n                        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"22\" />\n                        <line x1=\"4.22\" y1=\"4.22\" x2=\"6.34\" y2=\"6.34\" />\n                        <line x1=\"17.66\" y1=\"17.66\" x2=\"19.78\" y2=\"19.78\" />\n                        <line x1=\"2\" y1=\"12\" x2=\"5\" y2=\"12\" />\n                        <line x1=\"19\" y1=\"12\" x2=\"22\" y2=\"12\" />\n                        <line x1=\"4.22\" y1=\"19.78\" x2=\"6.34\" y2=\"17.66\" />\n                        <line x1=\"17.66\" y1=\"6.34\" x2=\"19.78\" y2=\"4.22\" />\n                      </g>\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <path d=\"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\" fill=\"#7c3aed\" />\n                    </svg>\n                  )}\n                </button>\n                <button\n                  onClick={() => {\n                    randomizeSuggestions();\n                    setMessages([{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }]);\n                    localStorage.removeItem('chatMessages');\n                    setFeedback({});\n                    setClarifySuggestions([]);\n                  }}\n                  title=\"Clear chat\"\n                  className=\"header-action-btn\"\n                  aria-label=\"Clear chat\"\n                >\n                  <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                    <path d=\"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                  </svg>\n                </button>\n                <button\n                  onClick={() => setIsExpanded((prev) => !prev)}\n                  title={isExpanded ? 'Collapse window' : 'Expand window'}\n                  className=\"header-action-btn\"\n                  aria-label={isExpanded ? 'Collapse window' : 'Expand window'}\n                >\n                  {isExpanded ? (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"8 3 3 3 3 8\" />\n                      <line x1=\"3\" y1=\"3\" x2=\"10\" y2=\"10\" />\n                      <polyline points=\"16 21 21 21 21 16\" />\n                      <line x1=\"21\" y1=\"21\" x2=\"14\" y2=\"14\" />\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"15 3 21 3 21 9\" />\n                      <line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\" />\n                      <polyline points=\"9 21 3 21 3 15\" />\n                      <line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n            </div>\n          </header>\n          <ul className=\"chatbox\" ref={chatRef}>\n            {messages.map((msg, idx) => (\n              <li\n                key={idx}\n                className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}\n                style={{ justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start' }}\n              >\n                <div className={`chat-bubble ${msg.role}`}>\n                  {msg.role === 'assistant'\n                    ? renderAssistantResponse(msg)\n                    : (msg.text || \"\").split('\\n').map((line, i) => <div key={i}>{line}</div>)}\n                </div>\n                {msg.role === 'assistant' && (\n                  <div className=\"feedback-row\">\n                    {feedback[idx] === undefined && (\n                      <>\n                        <Tooltip text=\"Mark as helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'up')}\n                            aria-label=\"Thumbs up\"\n                            tabIndex={0}\n                          >👍</button>\n                        </Tooltip>\n                        <Tooltip text=\"Mark as not helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'down')}\n                            aria-label=\"Thumbs down\"\n                            tabIndex={0}\n                          >👎</button>\n                        </Tooltip>\n                      </>\n                    )}\n                    {feedback[idx] === 'up' && (\n                      <Tooltip text=\"Marked as helpful!\">\n                        <button className=\"feedback-btn selected up\" aria-label=\"Thumbs up\" tabIndex={0}>👍</button>\n                      </Tooltip>\n                    )}\n                    {feedback[idx] === 'down' && (\n                      <Tooltip text=\"Marked as not helpful\">\n                        <button className=\"feedback-btn selected down\" aria-label=\"Thumbs down\" tabIndex={0}>👎</button>\n                      </Tooltip>\n                    )}\n                  </div>\n                )}\n              </li>\n            ))}\n            {isTyping && (\n              <li className=\"chat incoming\">\n                <div className=\"chat-bubble assistant\">\n                  <TypingIndicator />\n                </div>\n              </li>\n            )}\n          </ul>\n          {/* Suggestions panel after OpenAI clarify */}\n          {clarifySuggestions.length > 0 && renderClarifySuggestions()}\n          {/* If not in clarify/refinement, show static suggestions */}\n          {clarifySuggestions.length === 0 && renderHardcodedSuggestions()}\n          {/* Main input is always present */}\n          <div className=\"chat-input\">\n            <textarea\n              ref={inputRef}\n              placeholder=\"Ask me anything...\"\n              value={input}\n              onChange={e => setInput(e.target.value)}\n              onKeyDown={e => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage(input);\n                }\n              }}\n              rows={1}\n              className=\"chat-input-textarea\"\n              style={{ overflow: 'hidden', resize: 'none' }}\n              disabled={isTyping}\n              autoFocus={isOpen}\n              aria-label=\"Type your message\"\n            />\n            <button\n              onClick={() => handleSendMessage(input)}\n              title=\"Send message\"\n              className={`send-button${input.trim() ? \" has-text\" : \"\"}`}\n              disabled={isTyping || !input.trim()}\n              aria-label=\"Send\"\n            >\n              <svg height=\"22\" width=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ display: \"block\" }}>\n                <path d=\"M4 20L20 12L4 4V10L16 12L4 14V20Z\" fill=\"currentColor\" />\n              </svg>\n            </button>\n          </div>\n          {toast.visible && (\n            <div\n              className={`toast toast-${toast.type}`}\n              onClick={() => setToast(t => ({ ...t, visible: false }))}\n              style={{ cursor: 'pointer' }}\n            >\n              {toast.message}\n            </div>\n          )}\n          <footer className=\"chatbot-footer\">\n            Powered by <img src={ZSIcon} alt=\"ZS Associates\" />\n          </footer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}