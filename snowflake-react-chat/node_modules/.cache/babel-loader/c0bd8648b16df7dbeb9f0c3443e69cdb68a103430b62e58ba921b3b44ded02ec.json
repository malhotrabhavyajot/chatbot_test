{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\n// import '../styles/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatRef = useRef();\n  useEffect(() => {\n    const greeting = `Hello ðŸ‘‹! How may I assist you?`;\n    setMessages([{\n      role: 'assistant',\n      text: greeting\n    }]);\n  }, []);\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      if (chatRef.current) {\n        chatRef.current.scrollTop = chatRef.current.scrollHeight;\n      }\n    }, 100);\n  };\n  const sendToSnowflakeAPI = async message => {\n    const SNOWFLAKE_URL = process.env.REACT_APP_SNOWFLAKE_URL;\n    const ROLE = process.env.REACT_APP_SNOWFLAKE_ROLE;\n    const WAREHOUSE = process.env.REACT_APP_SNOWFLAKE_WH;\n    const DATABASE = process.env.REACT_APP_SNOWFLAKE_DB;\n    const SCHEMA = process.env.REACT_APP_SNOWFLAKE_SCHEMA;\n    try {\n      const res = await fetch(`${SNOWFLAKE_URL}/api/v2/statements`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${process.env.REACT_APP_JWT}`\n        },\n        body: JSON.stringify({\n          statement: `CALL AGENT_GATEWAY('${message}');`,\n          role: ROLE,\n          warehouse: WAREHOUSE,\n          database: DATABASE,\n          schema: SCHEMA\n        })\n      });\n      const text = await res.text();\n      const lines = text.split('\\n');\n      for (let line of lines) {\n        if (line.includes('\"data\" : [ [')) {\n          const match = line.match(/\\[\\[\\\"(.+?)\\\"\\]\\]/);\n          if (match) {\n            const json = JSON.parse(match[1].replace(/'/g, '\"'));\n            return json.output || \"I couldnâ€™t process your request.\";\n          }\n        }\n      }\n      return \"Sorry, I couldn't process your request.\";\n    } catch (err) {\n      console.error('API error:', err);\n      return 'Unexpected error connecting to Snowflake API.';\n    }\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      role: 'user',\n      text: input\n    }];\n    setMessages(newMessages);\n    setInput('');\n    scrollToBottom();\n    const pendingResponse = {\n      role: 'assistant',\n      text: 'Analyzing...'\n    };\n    setMessages([...newMessages, pendingResponse]);\n    const response = await sendToSnowflakeAPI(input);\n    setMessages([...newMessages, {\n      role: 'assistant',\n      text: response\n    }]);\n    scrollToBottom();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Field \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            color: '#94d6f2'\n          },\n          children: \"Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"chatbox\",\n      ref: chatRef,\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter a message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-rounded\",\n        onClick: handleSend,\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"M4SfreQfJzQnfVUq+PgQ4e5mhlI=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","input","setInput","chatRef","greeting","role","text","scrollToBottom","setTimeout","current","scrollTop","scrollHeight","sendToSnowflakeAPI","message","SNOWFLAKE_URL","process","env","REACT_APP_SNOWFLAKE_URL","ROLE","REACT_APP_SNOWFLAKE_ROLE","WAREHOUSE","REACT_APP_SNOWFLAKE_WH","DATABASE","REACT_APP_SNOWFLAKE_DB","SCHEMA","REACT_APP_SNOWFLAKE_SCHEMA","res","fetch","method","headers","Authorization","REACT_APP_JWT","body","JSON","stringify","statement","warehouse","database","schema","lines","split","line","includes","match","json","parse","replace","output","err","console","error","handleSend","trim","newMessages","pendingResponse","response","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","idx","placeholder","value","onChange","e","target","onKeyDown","key","shiftKey","onClick","_c","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n// import '../styles/style.css';\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatRef = useRef();\n\n  useEffect(() => {\n    const greeting = `Hello ðŸ‘‹! How may I assist you?`;\n    setMessages([{ role: 'assistant', text: greeting }]);\n  }, []);\n\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      if (chatRef.current) {\n        chatRef.current.scrollTop = chatRef.current.scrollHeight;\n      }\n    }, 100);\n  };\n\n  const sendToSnowflakeAPI = async (message) => {\n    const SNOWFLAKE_URL = process.env.REACT_APP_SNOWFLAKE_URL;\n    const ROLE = process.env.REACT_APP_SNOWFLAKE_ROLE;\n    const WAREHOUSE = process.env.REACT_APP_SNOWFLAKE_WH;\n    const DATABASE = process.env.REACT_APP_SNOWFLAKE_DB;\n    const SCHEMA = process.env.REACT_APP_SNOWFLAKE_SCHEMA;\n\n    try {\n      const res = await fetch(`${SNOWFLAKE_URL}/api/v2/statements`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${process.env.REACT_APP_JWT}`,\n        },\n        body: JSON.stringify({\n          statement: `CALL AGENT_GATEWAY('${message}');`,\n          role: ROLE,\n          warehouse: WAREHOUSE,\n          database: DATABASE,\n          schema: SCHEMA\n        })\n      });\n\n      const text = await res.text();\n      const lines = text.split('\\n');\n      for (let line of lines) {\n        if (line.includes('\"data\" : [ [')) {\n          const match = line.match(/\\[\\[\\\"(.+?)\\\"\\]\\]/);\n          if (match) {\n            const json = JSON.parse(match[1].replace(/'/g, '\"'));\n            return json.output || \"I couldnâ€™t process your request.\";\n          }\n        }\n      }\n      return \"Sorry, I couldn't process your request.\";\n    } catch (err) {\n      console.error('API error:', err);\n      return 'Unexpected error connecting to Snowflake API.';\n    }\n  };\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, { role: 'user', text: input }];\n    setMessages(newMessages);\n    setInput('');\n    scrollToBottom();\n\n    const pendingResponse = { role: 'assistant', text: 'Analyzing...' };\n    setMessages([...newMessages, pendingResponse]);\n\n    const response = await sendToSnowflakeAPI(input);\n    setMessages([...newMessages, { role: 'assistant', text: response }]);\n    scrollToBottom();\n  };\n\n  return (\n    <div className=\"chatbot\">\n      <header>\n        <h3>Field <strong style={{ color: '#94d6f2' }}>Assistant</strong></h3>\n      </header>\n      <ul className=\"chatbox\" ref={chatRef}>\n        {messages.map((msg, idx) => (\n          <li key={idx} className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}>\n            <p>{msg.text}</p>\n          </li>\n        ))}\n      </ul>\n      <div className=\"chat-input\">\n        <textarea\n          placeholder=\"Enter a message...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSend()}\n        ></textarea>\n        <span className=\"material-symbols-rounded\" onClick={handleSend}>send</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}