{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// Hardcoded answers from Mark11.js\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HARDCODED_ANSWERS = {\n  \"where can i find my cpc\": \"The CPC metric can be found on your CPC dashboard sheet in the app.\",\n  \"where can i learn more about reach and frequency\": \"Reach and Frequency can be found in the dedicated dashboard section.\",\n  \"where can i find reach\": \"You can find Reach on the Reach Analysis dashboard sheet.\",\n  \"can you take me to sales trx page\": \"You can view the Sales TRx on the Sales TRx dashboard sheet.\",\n  \"which prescriber qualifies as a new writer\": \"A prescriber qualifies as a new writer if they have a script volume greater than 0 during your selected timeframe.\",\n  \"what is breadth and depth\": \"Breadth: Number of HCPs who wrote the product at least once in the measured period. Depth: Average scripts written by call plan prescribers.\",\n  \"where can i find sales trend\": \"The Sales Trend is displayed on the Sales Trend dashboard sheet.\"\n};\n\n// Helper: Format response for plain text fallback (errors, etc)\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    const json = JSON.parse(responseText);\n    if (json.error) return \"❌ Error: \" + json.error;\n    if (json.code && json.code !== \"000000\" && (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))) {\n      return `❌ Error: ${json.code} - ${json.message}`;\n    }\n    if (json.message) return json.message;\n    return \"No data found.\";\n  } catch {\n    return responseText || \"No response from Snowflake.\";\n  }\n}\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{\n      role: 'assistant',\n      text: 'Hello 👋! How may I assist you?'\n    }];\n  });\n  const [feedback, setFeedback] = useState({});\n  const suggestions = [\"Where can I find my CPC\", \"Where can I learn more about reach and frequency\", \"Where can I find Reach\", \"Can you take me to sales trx page\", \"Which prescriber qualifies as a new writer\", \"What is breadth and depth\", \"Where can I find sales trend\"];\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState('');\n  const chatRef = useRef();\n  const inputRef = useRef();\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollTo({\n      top: chatRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Send user message to backend and update chat\n  const handleSendMessage = async userMessage => {\n    if (!userMessage.trim()) return;\n    const newMessages = [...messages, {\n      role: 'user',\n      text: userMessage\n    }];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setInput('');\n\n    // HARDCODED ANSWER CHECK\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      const hardcodedAnswer = HARDCODED_ANSWERS[matchedKey];\n      const updatedMessages = [...newMessages, {\n        role: 'assistant',\n        text: hardcodedAnswer\n      }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // Show loading message\n    const pendingList = [...newMessages, {\n      role: 'assistant',\n      text: '⏳ Querying Snowflake...'\n    }];\n    setMessages(pendingList);\n    localStorage.setItem('chatMessages', JSON.stringify(pendingList));\n\n    // Send to Node proxy backend\n    try {\n      const response = await fetch('http://localhost:4000/api/snowflake', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          statement: userMessage\n        })\n      });\n      const responseText = await response.text();\n      console.log(\"Frontend: RAW SNOWFLAKE RESPONSE:\", responseText);\n\n      // Save BOTH the pretty text and raw JSON in the message\n      const formatted = formatSnowflakeResponse(responseText);\n      const updatedMessages = [...newMessages, {\n        role: 'assistant',\n        text: formatted,\n        rawJson: responseText\n      }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    } catch (err) {\n      const formatted = \"⚠️ Unable to connect to backend.\";\n      const updatedMessages = [...newMessages, {\n        role: 'assistant',\n        text: formatted\n      }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    }\n  };\n\n  // Feedback handlers\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({\n      ...prev,\n      [idx]: type\n    }));\n    setToast('Thanks for your feedback!');\n    setTimeout(() => setToast(''), 1100);\n  };\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  // Core chat bubble renderer\n  const renderChatBubbleContent = msg => {\n    // Try to render as HTML table if possible (from rawJson)\n    if (msg.rawJson) {\n      try {\n        const json = JSON.parse(msg.rawJson);\n        const columns = json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name) || json.rowType && json.rowType.map(col => col.name) || json.rowtype && json.rowtype.map(col => col.name) || json.columns && json.columns.map(col => col.name);\n        const data = json.data;\n        if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n          return /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"snowflake-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map((h, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: h\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 42\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: columns.length,\n                  style: {\n                    textAlign: 'center',\n                    color: '#888'\n                  },\n                  children: \"(no results)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this) : data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: row.map((cell, cidx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    whiteSpace: 'pre-wrap',\n                    fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                  },\n                  children: (() => {\n                    try {\n                      if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                        const parsed = JSON.parse(cell);\n                        if (Array.isArray(parsed)) {\n                          return /*#__PURE__*/_jsxDEV(\"ul\", {\n                            style: {\n                              paddingLeft: '18px',\n                              margin: 0\n                            },\n                            children: parsed.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: item\n                            }, idx, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 160,\n                              columnNumber: 64\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 159,\n                            columnNumber: 35\n                          }, this);\n                        }\n                        if (typeof parsed === 'object') {\n                          return /*#__PURE__*/_jsxDEV(\"pre\", {\n                            children: JSON.stringify(parsed, null, 2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 165,\n                            columnNumber: 40\n                          }, this);\n                        }\n                      }\n                      return cell;\n                    } catch {\n                      return cell;\n                    }\n                  })()\n                }, cidx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this))\n              }, ridx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this);\n        }\n      } catch {}\n    }\n    // Fallback: plain text (with newlines)\n    return msg.text.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: line\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chatbot-toggler modern-toggler\",\n        onClick: () => setIsOpen(!isOpen),\n        \"aria-label\": \"Toggle chatbot\",\n        style: {\n          position: 'fixed',\n          right: '20px',\n          bottom: '20px',\n          zIndex: 10000\n        },\n        children: isOpen ? '✖' : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ChatbotIcon,\n          alt: \"Chatbot\",\n          style: {\n            width: 48,\n            height: 48\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chatbot modern-chatbot${darkMode ? ' dark-mode' : ''}`,\n        style: {\n          position: 'fixed',\n          right: '20px',\n          bottom: '80px',\n          width: isExpanded ? '95vw' : '90vw',\n          height: isExpanded ? '80vh' : '70vh',\n          maxWidth: isExpanded ? '1100px' : '400px',\n          borderRadius: '16px',\n          boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n          backgroundColor: darkMode ? '#1e1e1e' : '#ffffff',\n          display: 'flex',\n          flexDirection: 'column',\n          overflow: 'hidden',\n          transition: 'all 0.3s ease',\n          zIndex: 9999\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"chatbot-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 600\n            },\n            children: [\"ORION \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#6b38fb'\n              },\n              children: \"Field Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleTheme,\n              title: \"Toggle theme\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Toggle theme\",\n              children: darkMode ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"23\",\n                height: \"23\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"5\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                  stroke: \"#7c3aed\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"2\",\n                    x2: \"12\",\n                    y2: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"19\",\n                    x2: \"12\",\n                    y2: \"22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"4.22\",\n                    x2: \"6.34\",\n                    y2: \"6.34\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"17.66\",\n                    x2: \"19.78\",\n                    y2: \"19.78\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"2\",\n                    y1: \"12\",\n                    x2: \"5\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"19\",\n                    y1: \"12\",\n                    x2: \"22\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"19.78\",\n                    x2: \"6.34\",\n                    y2: \"17.66\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"6.34\",\n                    x2: \"19.78\",\n                    y2: \"4.22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"23\",\n                height: \"23\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setMessages([{\n                  role: 'assistant',\n                  text: 'Hello 👋! How may I assist you?'\n                }]);\n                localStorage.removeItem('chatMessages');\n                setFeedback({});\n              },\n              title: \"Clear chat\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Clear chat\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"23\",\n                height: \"23\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsExpanded(prev => !prev),\n              title: isExpanded ? 'Collapse window' : 'Expand window',\n              className: \"header-action-btn\",\n              \"aria-label\": isExpanded ? 'Collapse window' : 'Expand window',\n              children: isExpanded ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"23\",\n                height: \"23\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"8 3 3 3 3 8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"3\",\n                  x2: \"10\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"16 21 21 21 21 16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"21\",\n                  x2: \"14\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"23\",\n                height: \"23\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"15 3 21 3 21 9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"3\",\n                  x2: \"14\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"9 21 3 21 3 15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"21\",\n                  x2: \"10\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chatbox\",\n          ref: chatRef,\n          children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n            style: {\n              justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start',\n              animation: 'fadeIn 0.25s cubic-bezier(.36,1.7,.72,.97)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `chat-bubble ${msg.role}`,\n              style: {\n                background: msg.role === 'user' ? 'linear-gradient(95deg, #7c3aed 60%, #a78bfa 100%)' : 'linear-gradient(135deg, #f0f4ff, #e9e8fe)',\n                color: msg.role === 'user' ? '#fff' : '#23234a',\n                borderTopRightRadius: msg.role === 'user' ? 22 : 16,\n                borderTopLeftRadius: msg.role === 'assistant' ? 22 : 16,\n                alignSelf: msg.role === 'user' ? 'flex-end' : 'flex-start',\n                position: 'relative'\n              },\n              children: renderChatBubbleContent(msg)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this), msg.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback-row\",\n              children: [feedback[idx] === undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'up'),\n                  \"aria-label\": \"Thumbs up\",\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'down'),\n                  \"aria-label\": \"Thumbs down\",\n                  children: \"\\uD83D\\uDC4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true), feedback[idx] === 'up' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected\",\n                \"aria-label\": \"Thumbs up\",\n                children: \"\\uD83D\\uDC4D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 25\n              }, this), feedback[idx] === 'down' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected\",\n                \"aria-label\": \"Thumbs down\",\n                children: \"\\uD83D\\uDC4E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 21\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          children: suggestions.map((s, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSendMessage(s),\n            className: \"suggestion-button\",\n            children: s\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: inputRef,\n            placeholder: \"Ask me anything...\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input),\n            rows: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSendMessage(input),\n            title: \"Send message\",\n            className: \"send-button\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"chatbot-footer\",\n          children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ZSIcon,\n            alt: \"ZS Associates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this), toast && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toast\",\n          children: toast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ChatBot, \"FN6xqHKB7iWFs6Y74mG9wUCuZb0=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotIcon","ZSIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","HARDCODED_ANSWERS","formatSnowflakeResponse","responseText","json","JSON","parse","error","code","message","toLowerCase","includes","ChatBot","_s","messages","setMessages","saved","localStorage","getItem","role","text","feedback","setFeedback","suggestions","input","setInput","isOpen","setIsOpen","darkMode","setDarkMode","isExpanded","setIsExpanded","toast","setToast","chatRef","inputRef","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","handleSendMessage","userMessage","trim","newMessages","setItem","stringify","cleaned","matchedKey","Object","keys","find","k","hardcodedAnswer","updatedMessages","pendingList","response","fetch","method","headers","body","statement","console","log","formatted","rawJson","err","handleFeedback","idx","type","prev","setTimeout","toggleTheme","renderChatBubbleContent","msg","columns","resultSetMetaData","rowType","map","col","name","rowtype","data","Array","isArray","length","className","children","h","i","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","style","textAlign","color","row","ridx","cell","cidx","whiteSpace","fontFamily","startsWith","undefined","parsed","paddingLeft","margin","item","split","line","background","minHeight","onClick","position","right","bottom","zIndex","src","alt","width","height","maxWidth","borderRadius","boxShadow","backgroundColor","display","flexDirection","overflow","transition","fontWeight","title","viewBox","fill","cx","cy","r","stroke","strokeWidth","x1","y1","x2","y2","d","removeItem","strokeLinecap","strokeLinejoin","points","ref","justifyContent","animation","borderTopRightRadius","borderTopLeftRadius","alignSelf","s","placeholder","value","onChange","e","target","onKeyDown","key","shiftKey","rows","_c","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// Hardcoded answers from Mark11.js\nconst HARDCODED_ANSWERS = {\n  \"where can i find my cpc\": \"The CPC metric can be found on your CPC dashboard sheet in the app.\",\n  \"where can i learn more about reach and frequency\": \"Reach and Frequency can be found in the dedicated dashboard section.\",\n  \"where can i find reach\": \"You can find Reach on the Reach Analysis dashboard sheet.\",\n  \"can you take me to sales trx page\": \"You can view the Sales TRx on the Sales TRx dashboard sheet.\",\n  \"which prescriber qualifies as a new writer\": \"A prescriber qualifies as a new writer if they have a script volume greater than 0 during your selected timeframe.\",\n  \"what is breadth and depth\": \"Breadth: Number of HCPs who wrote the product at least once in the measured period. Depth: Average scripts written by call plan prescribers.\",\n  \"where can i find sales trend\": \"The Sales Trend is displayed on the Sales Trend dashboard sheet.\"\n};\n\n// Helper: Format response for plain text fallback (errors, etc)\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    const json = JSON.parse(responseText);\n\n    if (json.error) return \"❌ Error: \" + json.error;\n    if (\n      json.code &&\n      json.code !== \"000000\" &&\n      (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))\n    ) {\n      return `❌ Error: ${json.code} - ${json.message}`;\n    }\n    if (json.message) return json.message;\n    return \"No data found.\";\n  } catch {\n    return responseText || \"No response from Snowflake.\";\n  }\n}\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }];\n  });\n  const [feedback, setFeedback] = useState({});\n  const suggestions = [\n    \"Where can I find my CPC\",\n    \"Where can I learn more about reach and frequency\",\n    \"Where can I find Reach\",\n    \"Can you take me to sales trx page\",\n    \"Which prescriber qualifies as a new writer\",\n    \"What is breadth and depth\",\n    \"Where can I find sales trend\"\n  ];\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState('');\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  useEffect(() => {\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\n  }, [messages]);\n\n  // Send user message to backend and update chat\n  const handleSendMessage = async (userMessage) => {\n    if (!userMessage.trim()) return;\n    const newMessages = [...messages, { role: 'user', text: userMessage }];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setInput('');\n\n    // HARDCODED ANSWER CHECK\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(\n      k => cleaned.includes(k)\n    );\n    if (matchedKey) {\n      const hardcodedAnswer = HARDCODED_ANSWERS[matchedKey];\n      const updatedMessages = [...newMessages, { role: 'assistant', text: hardcodedAnswer }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // Show loading message\n    const pendingList = [...newMessages, { role: 'assistant', text: '⏳ Querying Snowflake...' }];\n    setMessages(pendingList);\n    localStorage.setItem('chatMessages', JSON.stringify(pendingList));\n\n    // Send to Node proxy backend\n    try {\n      const response = await fetch('http://localhost:4000/api/snowflake', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ statement: userMessage })\n      });\n      const responseText = await response.text();\n      console.log(\"Frontend: RAW SNOWFLAKE RESPONSE:\", responseText);\n\n      // Save BOTH the pretty text and raw JSON in the message\n      const formatted = formatSnowflakeResponse(responseText);\n      const updatedMessages = [...newMessages, { role: 'assistant', text: formatted, rawJson: responseText }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    } catch (err) {\n      const formatted = \"⚠️ Unable to connect to backend.\";\n      const updatedMessages = [...newMessages, { role: 'assistant', text: formatted }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    }\n  };\n\n  // Feedback handlers\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({ ...prev, [idx]: type }));\n    setToast('Thanks for your feedback!');\n    setTimeout(() => setToast(''), 1100);\n  };\n\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  // Core chat bubble renderer\n  const renderChatBubbleContent = (msg) => {\n    // Try to render as HTML table if possible (from rawJson)\n    if (msg.rawJson) {\n      try {\n        const json = JSON.parse(msg.rawJson);\n        const columns =\n          (json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name)) ||\n          (json.rowType && json.rowType.map(col => col.name)) ||\n          (json.rowtype && json.rowtype.map(col => col.name)) ||\n          (json.columns && json.columns.map(col => col.name));\n        const data = json.data;\n        if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n          return (\n            <table className=\"snowflake-table\">\n              <thead>\n                <tr>\n                  {columns.map((h, i) => <th key={i}>{h}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {data.length === 0 ? (\n                  <tr><td colSpan={columns.length} style={{ textAlign: 'center', color: '#888' }}>(no results)</td></tr>\n                ) : data.map((row, ridx) => (\n                  <tr key={ridx}>\n                    {row.map((cell, cidx) => (\n                      <td key={cidx} style={{\n                        whiteSpace: 'pre-wrap',\n                        fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                      }}>\n                        {(() => {\n                          try {\n                            if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                              const parsed = JSON.parse(cell);\n                              if (Array.isArray(parsed)) {\n                                return (\n                                  <ul style={{ paddingLeft: '18px', margin: 0 }}>\n                                    {parsed.map((item, idx) => <li key={idx}>{item}</li>)}\n                                  </ul>\n                                );\n                              }\n                              if (typeof parsed === 'object') {\n                                return <pre>{JSON.stringify(parsed, null, 2)}</pre>;\n                              }\n                            }\n                            return cell;\n                          } catch {\n                            return cell;\n                          }\n                        })()}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          );\n        }\n      } catch {}\n    }\n    // Fallback: plain text (with newlines)\n    return msg.text.split('\\n').map((line, i) => (\n      <div key={i}>{line}</div>\n    ));\n  };\n\n  return (\n    <>\n      <div style={{ background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)', minHeight: '100vh' }}>\n        <button\n          className=\"chatbot-toggler modern-toggler\"\n          onClick={() => setIsOpen(!isOpen)}\n          aria-label=\"Toggle chatbot\"\n          style={{ position: 'fixed', right: '20px', bottom: '20px', zIndex: 10000 }}>\n          {isOpen ? '✖' : <img src={ChatbotIcon} alt=\"Chatbot\" style={{ width: 48, height: 48 }} />}\n        </button>\n        {isOpen && (\n          <div\n            className={`chatbot modern-chatbot${darkMode ? ' dark-mode' : ''}`}\n            style={{\n              position: 'fixed',\n              right: '20px',\n              bottom: '80px',\n              width: isExpanded ? '95vw' : '90vw',\n              height: isExpanded ? '80vh' : '70vh',\n              maxWidth: isExpanded ? '1100px' : '400px',\n              borderRadius: '16px',\n              boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n              backgroundColor: darkMode ? '#1e1e1e' : '#ffffff',\n              display: 'flex',\n              flexDirection: 'column',\n              overflow: 'hidden',\n              transition: 'all 0.3s ease',\n              zIndex: 9999\n            }}>\n            <header className=\"chatbot-header\">\n              <span style={{ fontWeight: 600 }}>\n                ORION <span style={{ color: '#6b38fb' }}>Field Assistant</span>\n              </span>\n              <div className=\"header-actions\">\n                {/* Theme toggle */}\n                <button\n                  onClick={toggleTheme}\n                  title=\"Toggle theme\"\n                  className=\"header-action-btn\"\n                  aria-label=\"Toggle theme\"\n                >\n                  {darkMode ? (\n                    <svg width=\"23\" height=\"23\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <circle cx=\"12\" cy=\"12\" r=\"5\" fill=\"#7c3aed\" />\n                      <g stroke=\"#7c3aed\" strokeWidth=\"2\">\n                        <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"5\" />\n                        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"22\" />\n                        <line x1=\"4.22\" y1=\"4.22\" x2=\"6.34\" y2=\"6.34\" />\n                        <line x1=\"17.66\" y1=\"17.66\" x2=\"19.78\" y2=\"19.78\" />\n                        <line x1=\"2\" y1=\"12\" x2=\"5\" y2=\"12\" />\n                        <line x1=\"19\" y1=\"12\" x2=\"22\" y2=\"12\" />\n                        <line x1=\"4.22\" y1=\"19.78\" x2=\"6.34\" y2=\"17.66\" />\n                        <line x1=\"17.66\" y1=\"6.34\" x2=\"19.78\" y2=\"4.22\" />\n                      </g>\n                    </svg>\n                  ) : (\n                    <svg width=\"23\" height=\"23\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <path d=\"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\" fill=\"#7c3aed\" />\n                    </svg>\n                  )}\n                </button>\n                {/* Refresh */}\n                <button\n                  onClick={() => {\n                    setMessages([{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }]);\n                    localStorage.removeItem('chatMessages');\n                    setFeedback({});\n                  }}\n                  title=\"Clear chat\"\n                  className=\"header-action-btn\"\n                  aria-label=\"Clear chat\"\n                >\n                  <svg width=\"23\" height=\"23\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                    <path d=\"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                  </svg>\n                </button>\n                {/* Expand/Collapse */}\n                <button\n                  onClick={() => setIsExpanded((prev) => !prev)}\n                  title={isExpanded ? 'Collapse window' : 'Expand window'}\n                  className=\"header-action-btn\"\n                  aria-label={isExpanded ? 'Collapse window' : 'Expand window'}\n                >\n                  {isExpanded ? (\n                    <svg width=\"23\" height=\"23\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"8 3 3 3 3 8\" />\n                      <line x1=\"3\" y1=\"3\" x2=\"10\" y2=\"10\" />\n                      <polyline points=\"16 21 21 21 21 16\" />\n                      <line x1=\"21\" y1=\"21\" x2=\"14\" y2=\"14\" />\n                    </svg>\n                  ) : (\n                    <svg width=\"23\" height=\"23\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"15 3 21 3 21 9\" />\n                      <line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\" />\n                      <polyline points=\"9 21 3 21 3 15\" />\n                      <line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n            </header>\n            <ul className=\"chatbox\" ref={chatRef}>\n              {messages.map((msg, idx) => (\n                <li\n                  key={idx}\n                  className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}\n                  style={{\n                    justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start',\n                    animation: 'fadeIn 0.25s cubic-bezier(.36,1.7,.72,.97)'\n                  }}\n                >\n                  <div\n                    className={`chat-bubble ${msg.role}`}\n                    style={{\n                      background: msg.role === 'user'\n                        ? 'linear-gradient(95deg, #7c3aed 60%, #a78bfa 100%)'\n                        : 'linear-gradient(135deg, #f0f4ff, #e9e8fe)',\n                      color: msg.role === 'user' ? '#fff' : '#23234a',\n                      borderTopRightRadius: msg.role === 'user' ? 22 : 16,\n                      borderTopLeftRadius: msg.role === 'assistant' ? 22 : 16,\n                      alignSelf: msg.role === 'user' ? 'flex-end' : 'flex-start',\n                      position: 'relative'\n                    }}\n                  >\n                    {renderChatBubbleContent(msg)}\n                  </div>\n                  {msg.role === 'assistant' && (\n                    <div className=\"feedback-row\">\n                      {feedback[idx] === undefined && (\n                        <>\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'up')}\n                            aria-label=\"Thumbs up\"\n                          >👍</button>\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'down')}\n                            aria-label=\"Thumbs down\"\n                          >👎</button>\n                        </>\n                      )}\n                      {feedback[idx] === 'up' && (\n                        <button className=\"feedback-btn selected\" aria-label=\"Thumbs up\">👍</button>\n                      )}\n                      {feedback[idx] === 'down' && (\n                        <button className=\"feedback-btn selected\" aria-label=\"Thumbs down\">👎</button>\n                      )}\n                    </div>\n                  )}\n                </li>\n              ))}\n            </ul>\n            <div className=\"suggestions\">\n              {suggestions.map((s, i) => (\n                <button\n                  key={i}\n                  onClick={() => handleSendMessage(s)}\n                  className=\"suggestion-button\"\n                >\n                  {s}\n                </button>\n              ))}\n            </div>\n            <div className=\"chat-input\">\n              <textarea\n                ref={inputRef}\n                placeholder=\"Ask me anything...\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input)}\n                rows={2}\n              ></textarea>\n              <button onClick={() => handleSendMessage(input)} title=\"Send message\" className=\"send-button\">\n                Send\n              </button>\n            </div>\n            <footer className=\"chatbot-footer\">\n              Powered by <img src={ZSIcon} alt=\"ZS Associates\" />\n            </footer>\n            {toast && <div className=\"toast\">{toast}</div>}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}