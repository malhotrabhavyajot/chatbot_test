{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport '../styles/style.css';\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [position, setPosition] = useState({\n    x: 25,\n    y: 25\n  });\n  const [dragging, setDragging] = useState(false);\n  const [rel, setRel] = useState(null);\n  const [size, setSize] = useState(() => {\n    const savedSize = localStorage.getItem('chatbot-size');\n    return savedSize ? JSON.parse(savedSize) : {\n      width: 400,\n      height: 500\n    };\n  });\n  const chatRef = useRef();\n  const buttonRef = useRef();\n  const resizeRef = useRef();\n  const [resizing, setResizing] = useState(false);\n  const [resizeStart, setResizeStart] = useState(null);\n  useEffect(() => {\n    if (isOpen) {\n      const greeting = `Hello 👋! I'm your Field Assistant. How can I help you today?`;\n      setMessages([{\n        role: 'assistant',\n        text: greeting\n      }]);\n    }\n  }, [isOpen]);\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      if (chatRef.current) {\n        chatRef.current.scrollTop = chatRef.current.scrollHeight;\n      }\n    }, 100);\n  };\n  const sendToSnowflakeAPI = async message => {\n    try {\n      const res = await fetch('http://localhost:4000/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: message\n        })\n      });\n      if (!res.ok) throw new Error('Request failed');\n      const data = await res.json();\n      const rows = data.rows || [];\n      if (rows.length === 0) return '🔍 No results found.';\n      const formatted = rows.map((row, i) => `🔹 ${JSON.stringify(row, null, 2)}`).join('\\n\\n');\n      return formatted;\n    } catch (err) {\n      console.error('API error:', err);\n      return '⚠️ Unable to connect to the backend. Please try again later.';\n    }\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    const newMessages = [...messages, {\n      role: 'user',\n      text: userMessage\n    }];\n    setMessages(newMessages);\n    setInput('');\n    scrollToBottom();\n    const pendingResponse = {\n      role: 'assistant',\n      text: '⏳ Working on your request...'\n    };\n    setMessages([...newMessages, pendingResponse]);\n    const response = await sendToSnowflakeAPI(userMessage);\n    setMessages([...newMessages, {\n      role: 'assistant',\n      text: response\n    }]);\n    scrollToBottom();\n  };\n  const handleMouseDown = e => {\n    if (e.button !== 0) return;\n    const rect = buttonRef.current.getBoundingClientRect();\n    setRel({\n      x: e.pageX - rect.left,\n      y: e.pageY - rect.top\n    });\n    setDragging(true);\n    e.stopPropagation();\n    e.preventDefault();\n  };\n  const handleMouseMove = useCallback(e => {\n    if (dragging) {\n      setPosition({\n        x: e.pageX - rel.x,\n        y: e.pageY - rel.y\n      });\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    if (resizing && resizeStart) {\n      const dx = e.clientX - resizeStart.x;\n      const dy = e.clientY - resizeStart.y;\n      setSize(prev => {\n        const newSize = {\n          width: Math.max(300, prev.width - dx),\n          height: Math.max(300, prev.height + dy)\n        };\n        localStorage.setItem('chatbot-size', JSON.stringify(newSize));\n        return newSize;\n      });\n      setResizeStart({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  }, [dragging, rel, resizing, resizeStart]);\n  const handleMouseUp = useCallback(() => {\n    setDragging(false);\n    setResizing(false);\n    setResizeStart(null);\n  }, []);\n  const handleResizeMouseDown = e => {\n    setResizing(true);\n    setResizeStart({\n      x: e.clientX,\n      y: e.clientY\n    });\n    e.stopPropagation();\n    e.preventDefault();\n  };\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseMove, handleMouseUp]);\n  return null;\n};\n_s(ChatBot, \"/m/CKYJYfSW/mqqEAdPVyM1OGo0=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","ChatBot","_s","messages","setMessages","input","setInput","isOpen","setIsOpen","position","setPosition","x","y","dragging","setDragging","rel","setRel","size","setSize","savedSize","localStorage","getItem","JSON","parse","width","height","chatRef","buttonRef","resizeRef","resizing","setResizing","resizeStart","setResizeStart","greeting","role","text","scrollToBottom","setTimeout","current","scrollTop","scrollHeight","sendToSnowflakeAPI","message","res","fetch","method","headers","body","stringify","query","ok","Error","data","json","rows","length","formatted","map","row","i","join","err","console","error","handleSend","trim","userMessage","newMessages","pendingResponse","response","handleMouseDown","e","button","rect","getBoundingClientRect","pageX","left","pageY","top","stopPropagation","preventDefault","handleMouseMove","dx","clientX","dy","clientY","prev","newSize","Math","max","setItem","handleMouseUp","handleResizeMouseDown","document","addEventListener","removeEventListener","_c","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport '../styles/style.css';\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [position, setPosition] = useState({ x: 25, y: 25 });\n  const [dragging, setDragging] = useState(false);\n  const [rel, setRel] = useState(null);\n  const [size, setSize] = useState(() => {\n  const savedSize = localStorage.getItem('chatbot-size');\n  return savedSize ? JSON.parse(savedSize) : { width: 400, height: 500 };\n});\n  const chatRef = useRef();\n  const buttonRef = useRef();\n  const resizeRef = useRef();\n  const [resizing, setResizing] = useState(false);\n  const [resizeStart, setResizeStart] = useState(null);\n\n  useEffect(() => {\n    if (isOpen) {\n      const greeting = `Hello 👋! I'm your Field Assistant. How can I help you today?`;\n      setMessages([{ role: 'assistant', text: greeting }]);\n    }\n  }, [isOpen]);\n\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      if (chatRef.current) {\n        chatRef.current.scrollTop = chatRef.current.scrollHeight;\n      }\n    }, 100);\n  };\n\n  const sendToSnowflakeAPI = async (message) => {\n    try {\n      const res = await fetch('http://localhost:4000/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ query: message })\n      });\n\n      if (!res.ok) throw new Error('Request failed');\n\n      const data = await res.json();\n      const rows = data.rows || [];\n      if (rows.length === 0) return '🔍 No results found.';\n\n      const formatted = rows.map((row, i) => `🔹 ${JSON.stringify(row, null, 2)}`).join('\\n\\n');\n      return formatted;\n    } catch (err) {\n      console.error('API error:', err);\n      return '⚠️ Unable to connect to the backend. Please try again later.';\n    }\n  };\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    const newMessages = [...messages, { role: 'user', text: userMessage }];\n    setMessages(newMessages);\n    setInput('');\n    scrollToBottom();\n\n    const pendingResponse = { role: 'assistant', text: '⏳ Working on your request...' };\n    setMessages([...newMessages, pendingResponse]);\n\n    const response = await sendToSnowflakeAPI(userMessage);\n    setMessages([...newMessages, { role: 'assistant', text: response }]);\n    scrollToBottom();\n  };\n\n  const handleMouseDown = (e) => {\n    if (e.button !== 0) return;\n    const rect = buttonRef.current.getBoundingClientRect();\n    setRel({ x: e.pageX - rect.left, y: e.pageY - rect.top });\n    setDragging(true);\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  const handleMouseMove = useCallback((e) => {\n    if (dragging) {\n      setPosition({ x: e.pageX - rel.x, y: e.pageY - rel.y });\n      e.stopPropagation();\n      e.preventDefault();\n    }\n    if (resizing && resizeStart) {\n      const dx = e.clientX - resizeStart.x;\n      const dy = e.clientY - resizeStart.y;\n      setSize(prev => {\n        const newSize = { width: Math.max(300, prev.width - dx), height: Math.max(300, prev.height + dy) };\n        localStorage.setItem('chatbot-size', JSON.stringify(newSize));\n        return newSize;\n      });\n      setResizeStart({ x: e.clientX, y: e.clientY });\n    }\n  }, [dragging, rel, resizing, resizeStart]);\n\n  const handleMouseUp = useCallback(() => {\n    setDragging(false);\n    setResizing(false);\n    setResizeStart(null);\n  }, []);\n\n  const handleResizeMouseDown = (e) => {\n    setResizing(true);\n    setResizeStart({ x: e.clientX, y: e.clientY });\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseMove, handleMouseUp]);\n\n  return null;\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}