{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// Hardcoded answers & suggestions (customize as needed)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE , LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\nconst HARDCODED_SUGGESTIONS = [\"Which universes do we show in Accounts calculation?\", \"Where can I find TRX Sales trends overtime?\", \"Where can I find top 10 Gainer Prescriber over time?\", \"What is Formulary Status?\", \"What are the number of current monthly suggestion KPIs?\", \"Which dossier gives a detailed analysis about the Payors?\", \"Where can I find explanations about different KPIs?\", \"What is MKT % LIS?\", \"Are any physicians' sales dropped at a geo level?\"];\nconst GENERIC_GREETINGS = [\"hi\", \"hello\", \"hey\", \"how are you\", \"good morning\", \"good afternoon\", \"good evening\", \"hiya\", \"yo\", \"hii\", \"hello there\", \"hey there\", \"hi there\"];\nfunction isGreeting(text) {\n  const cleaned = text.trim().toLowerCase();\n  return GENERIC_GREETINGS.some(g => cleaned === g || cleaned.startsWith(g + ' '));\n}\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    if (json.output) {\n      return {\n        type: \"agent2\",\n        output: json.output,\n        sources: json.sources || []\n      };\n    }\n    const columns = json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name) || json.rowType && json.rowType.map(col => col.name) || json.columns && json.columns.map(col => col.name);\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return {\n      type: \"error\",\n      value: \"❌ Error: \" + json.error\n    };\n    if (json.code && json.code !== \"000000\" && (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))) {\n      return {\n        type: \"error\",\n        value: `❌ Error: ${json.code} - ${json.message}`\n      };\n    }\n    if (json.message) return {\n      type: \"output\",\n      value: json.message\n    };\n    return {\n      type: \"output\",\n      value: \"No data found.\"\n    };\n  } catch {\n    return {\n      type: \"error\",\n      value: responseText || \"No response from backend.\"\n    };\n  }\n}\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{\n      role: 'assistant',\n      text: 'Hello 👋! How may I assist you?'\n    }];\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [clarificationSuggestions, setClarificationSuggestions] = useState(null); // list of suggestions\n  const [clarifyOrigUserMsg, setClarifyOrigUserMsg] = useState(\"\"); // save the original user input to display above suggestions\n\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Scroll to bottom on messages update\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollTo({\n      top: chatRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [messages, isTyping, isOpen]);\n\n  // === MAIN SEND FUNCTION ===\n  const handleSendMessage = async userMessage => {\n    if (!userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // -- Hardcoded greeting/answer short-circuit --\n    if (isGreeting(userMessage)) {\n      setTimeout(() => {\n        setIsTyping(false);\n        const greetingResponse = \"Hello! 👋 How can I assist you with your field insights or business data today?\";\n        const updatedMessages = [...messages, {\n          role: 'user',\n          text: userMessage\n        }, {\n          role: 'assistant',\n          text: greetingResponse\n        }];\n        setMessages(updatedMessages);\n        localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      }, 600);\n      return;\n    }\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      const hardcodedAnswer = HARDCODED_ANSWERS[matchedKey];\n      setTimeout(() => {\n        setIsTyping(false);\n        const updatedMessages = [...messages, {\n          role: 'user',\n          text: userMessage\n        }, {\n          role: 'assistant',\n          text: hardcodedAnswer\n        }];\n        setMessages(updatedMessages);\n        localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      }, 650);\n      return;\n    }\n\n    // --- 1. Call CLARIFY endpoint for suggestions ---\n    const response = await fetch('http://localhost:4000/api/clarify', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userMessage\n      })\n    });\n    const {\n      response: clarifyText\n    } = await response.json();\n\n    // Try to parse suggestions as JSON; if not, fallback to line-split\n    let suggestions = [];\n    try {\n      const asJSON = JSON.parse(clarifyText);\n      if (Array.isArray(asJSON)) suggestions = asJSON;\n    } catch {\n      // fallback: find lines that look like suggestions (skip line numbers if present)\n      suggestions = clarifyText.split('\\n').map(line => line.replace(/^\\d+\\.\\s*/, '').trim()).filter(line => !!line && line.length > 3);\n    }\n    setIsTyping(false);\n    setClarificationSuggestions(suggestions.length > 0 ? suggestions : null);\n    setClarifyOrigUserMsg(userMessage);\n\n    // Show the assistant's clarifying question as a message:\n    const newMsgs = [...messages, {\n      role: 'user',\n      text: userMessage\n    }];\n    if (clarifyText && clarifyText.length > 0) newMsgs.push({\n      role: 'assistant',\n      text: clarifyText\n    });\n    setMessages(newMsgs);\n    localStorage.setItem('chatMessages', JSON.stringify(newMsgs));\n  };\n\n  // === When user clicks a suggestion or enters a finalized query ===\n  const handleClarifySuggestion = async finalQuery => {\n    if (!finalQuery.trim()) return;\n    setIsTyping(true);\n    setClarificationSuggestions(null);\n\n    // 2. Pass to CUSTOM_AGENT2 (Snowflake)\n    const prompt = finalQuery.replace(/'/g, \"''\");\n    const sfBody = {\n      statement: `CALL CUSTOM_AGENT2('${prompt}')`\n    };\n    const sfResponse = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(sfBody)\n    });\n    const sfText = await sfResponse.text();\n    const formatted = formatSnowflakeResponse(sfText);\n    setIsTyping(false);\n    // Show both the selection and the result in chat\n    const newMsgs = [...messages, {\n      role: 'user',\n      text: finalQuery\n    }, {\n      role: 'assistant',\n      text: formatted\n    }];\n    setMessages(newMsgs);\n    localStorage.setItem('chatMessages', JSON.stringify(newMsgs));\n    setInput('');\n  };\n\n  // --- Typing Indicator Component ---\n  function TypingIndicator() {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"typing-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 47\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 60\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render assistant output with agent2 results, tables, etc.\n  const renderChatBubbleContent = msg => {\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"snowflake-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: obj.columns.map((h, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: h\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 51\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: obj.data.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: obj.columns.length,\n                style: {\n                  textAlign: 'center',\n                  color: '#888'\n                },\n                children: \"(no results)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this) : obj.data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.map((cell, cidx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: cell\n              }, cidx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 45\n              }, this))\n            }, ridx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this);\n      }\n      if (obj.type === \"output\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 43\n        }, this);\n      }\n      if (obj.type === \"error\") {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#b91c1c\",\n            fontWeight: 500\n          },\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 42\n        }, this);\n      }\n      if (obj.type === \"agent2\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10,\n              fontWeight: 500,\n              color: \"#5233c0\"\n            },\n            children: obj.output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), obj.sources && obj.sources.length > 0 && /*#__PURE__*/_jsxDEV(\"details\", {\n            style: {\n              marginTop: 6\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n              style: {\n                cursor: \"pointer\",\n                color: \"#7c3aed\",\n                fontSize: 13,\n                fontWeight: 600\n              },\n              children: \"Source(s) used\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 13,\n                color: \"#2b2553\",\n                marginTop: 4\n              },\n              children: obj.sources.map((src, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: 3\n                },\n                children: [src.metadata && src.metadata.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Table:\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontFamily: \"monospace\"\n                    },\n                    children: src.metadata.map(m => m.Table).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 25\n                }, this), src.tool_name && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Tool: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontFamily: \"monospace\"\n                    },\n                    children: src.tool_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 42\n                }, this), src.tool_type && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Type: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontFamily: \"monospace\"\n                    },\n                    children: src.tool_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 42\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(obj.value, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 14\n      }, this);\n    }\n    return (msg.text || \"\").split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: line\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 59\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggler modern-toggler\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Toggle chatbot\",\n      style: {\n        position: 'fixed',\n        right: '20px',\n        bottom: '20px',\n        zIndex: 10000\n      },\n      children: isOpen ? '✖' : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ChatbotIcon,\n        alt: \"Chatbot\",\n        style: {\n          width: 48,\n          height: 48\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot modern-chatbot\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chatbox\",\n        ref: chatRef,\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-bubble ${msg.role}`,\n            children: renderChatBubbleContent(msg)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chat incoming\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bubble assistant\",\n            children: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), clarificationSuggestions && clarificationSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clarification-suggestions\",\n        style: {\n          padding: 18\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: 600,\n            marginBottom: 7\n          },\n          children: \"Please select or refine your query:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this), clarificationSuggestions.map((s, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"suggestion-button\",\n          style: {\n            margin: \"3px 5px 7px 0\"\n          },\n          onClick: () => handleClarifySuggestion(s),\n          children: s\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"12px 0 0 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Or type your final query...\",\n            style: {\n              width: \"70%\",\n              marginRight: 6\n            },\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyDown: e => e.key === 'Enter' && handleClarifySuggestion(input),\n            disabled: isTyping\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-button\",\n            onClick: () => handleClarifySuggestion(input),\n            disabled: isTyping || !input.trim(),\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this), !clarificationSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: inputRef,\n          placeholder: \"Ask me anything...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input),\n          rows: 1,\n          className: \"chat-input-textarea\",\n          style: {\n            overflow: 'hidden',\n            resize: 'none'\n          },\n          disabled: isTyping\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSendMessage(input),\n          title: \"Send message\",\n          className: `send-button${input.trim() ? \" has-text\" : \"\"}`,\n          disabled: isTyping,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            height: \"22\",\n            width: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            style: {\n              display: \"block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M4 20L20 12L4 4V10L16 12L4 14V20Z\",\n              fill: \"currentColor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chatbot-footer\",\n        children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ZSIcon,\n          alt: \"ZS Associates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"cDah4/rLfjb/o9ZGR4PEAxOyNa8=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotIcon","ZSIcon","jsxDEV","_jsxDEV","HARDCODED_ANSWERS","HARDCODED_SUGGESTIONS","GENERIC_GREETINGS","isGreeting","text","cleaned","trim","toLowerCase","some","g","startsWith","formatSnowflakeResponse","responseText","json","JSON","parse","output","type","sources","columns","resultSetMetaData","rowType","map","col","name","data","Array","isArray","length","error","value","code","message","includes","ChatBot","_s","messages","setMessages","saved","localStorage","getItem","role","input","setInput","isOpen","setIsOpen","isTyping","setIsTyping","clarificationSuggestions","setClarificationSuggestions","clarifyOrigUserMsg","setClarifyOrigUserMsg","chatRef","inputRef","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","handleSendMessage","userMessage","setTimeout","greetingResponse","updatedMessages","setItem","stringify","matchedKey","Object","keys","find","k","hardcodedAnswer","response","fetch","method","headers","body","clarifyText","suggestions","asJSON","split","line","replace","filter","newMsgs","push","handleClarifySuggestion","finalQuery","prompt","sfBody","statement","sfResponse","sfText","formatted","TypingIndicator","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderChatBubbleContent","msg","obj","h","i","colSpan","style","textAlign","color","row","ridx","cell","cidx","fontWeight","marginBottom","marginTop","cursor","fontSize","src","metadata","fontFamily","m","Table","join","tool_name","tool_type","onClick","position","right","bottom","zIndex","alt","width","height","ref","idx","padding","s","margin","placeholder","marginRight","onChange","e","target","onKeyDown","key","disabled","shiftKey","rows","overflow","resize","title","viewBox","fill","display","d","_c","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// Hardcoded answers & suggestions (customize as needed)\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS is the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE , LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\n\nconst HARDCODED_SUGGESTIONS = [\n  \"Which universes do we show in Accounts calculation?\",\n  \"Where can I find TRX Sales trends overtime?\",\n  \"Where can I find top 10 Gainer Prescriber over time?\",\n  \"What is Formulary Status?\",\n  \"What are the number of current monthly suggestion KPIs?\",\n  \"Which dossier gives a detailed analysis about the Payors?\",\n  \"Where can I find explanations about different KPIs?\",\n  \"What is MKT % LIS?\",\n  \"Are any physicians' sales dropped at a geo level?\"\n];\n\nconst GENERIC_GREETINGS = [\n  \"hi\", \"hello\", \"hey\", \"how are you\", \"good morning\", \"good afternoon\", \"good evening\",\n  \"hiya\", \"yo\", \"hii\", \"hello there\", \"hey there\", \"hi there\"\n];\n\nfunction isGreeting(text) {\n  const cleaned = text.trim().toLowerCase();\n  return GENERIC_GREETINGS.some(g => cleaned === g || cleaned.startsWith(g + ' '));\n}\n\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    if (json.output) {\n      return {\n        type: \"agent2\",\n        output: json.output,\n        sources: json.sources || []\n      };\n    }\n    const columns =\n      (json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name)) ||\n      (json.rowType && json.rowType.map(col => col.name)) ||\n      (json.columns && json.columns.map(col => col.name));\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return { type: \"table\", columns, data };\n    }\n    if (json.error) return { type: \"error\", value: \"❌ Error: \" + json.error };\n    if (json.code && json.code !== \"000000\" && (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))) {\n      return { type: \"error\", value: `❌ Error: ${json.code} - ${json.message}` };\n    }\n    if (json.message) return { type: \"output\", value: json.message };\n    return { type: \"output\", value: \"No data found.\" };\n  } catch {\n    return { type: \"error\", value: responseText || \"No response from backend.\" };\n  }\n}\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }];\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [clarificationSuggestions, setClarificationSuggestions] = useState(null); // list of suggestions\n  const [clarifyOrigUserMsg, setClarifyOrigUserMsg] = useState(\"\"); // save the original user input to display above suggestions\n\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Scroll to bottom on messages update\n  useEffect(() => {\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\n  }, [messages, isTyping, isOpen]);\n\n  // === MAIN SEND FUNCTION ===\n  const handleSendMessage = async (userMessage) => {\n    if (!userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // -- Hardcoded greeting/answer short-circuit --\n    if (isGreeting(userMessage)) {\n      setTimeout(() => {\n        setIsTyping(false);\n        const greetingResponse = \"Hello! 👋 How can I assist you with your field insights or business data today?\";\n        const updatedMessages = [...messages, { role: 'user', text: userMessage }, { role: 'assistant', text: greetingResponse }];\n        setMessages(updatedMessages);\n        localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      }, 600);\n      return;\n    }\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      const hardcodedAnswer = HARDCODED_ANSWERS[matchedKey];\n      setTimeout(() => {\n        setIsTyping(false);\n        const updatedMessages = [...messages, { role: 'user', text: userMessage }, { role: 'assistant', text: hardcodedAnswer }];\n        setMessages(updatedMessages);\n        localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      }, 650);\n      return;\n    }\n\n    // --- 1. Call CLARIFY endpoint for suggestions ---\n    const response = await fetch('http://localhost:4000/api/clarify', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userMessage })\n    });\n    const { response: clarifyText } = await response.json();\n\n    // Try to parse suggestions as JSON; if not, fallback to line-split\n    let suggestions = [];\n    try {\n      const asJSON = JSON.parse(clarifyText);\n      if (Array.isArray(asJSON)) suggestions = asJSON;\n    } catch {\n      // fallback: find lines that look like suggestions (skip line numbers if present)\n      suggestions = clarifyText\n        .split('\\n')\n        .map(line => line.replace(/^\\d+\\.\\s*/, '').trim())\n        .filter(line => !!line && line.length > 3);\n    }\n\n    setIsTyping(false);\n    setClarificationSuggestions(suggestions.length > 0 ? suggestions : null);\n    setClarifyOrigUserMsg(userMessage);\n\n    // Show the assistant's clarifying question as a message:\n    const newMsgs = [...messages, { role: 'user', text: userMessage }];\n    if (clarifyText && clarifyText.length > 0)\n      newMsgs.push({ role: 'assistant', text: clarifyText });\n    setMessages(newMsgs);\n    localStorage.setItem('chatMessages', JSON.stringify(newMsgs));\n  };\n\n  // === When user clicks a suggestion or enters a finalized query ===\n  const handleClarifySuggestion = async (finalQuery) => {\n    if (!finalQuery.trim()) return;\n    setIsTyping(true);\n    setClarificationSuggestions(null);\n\n    // 2. Pass to CUSTOM_AGENT2 (Snowflake)\n    const prompt = finalQuery.replace(/'/g, \"''\");\n    const sfBody = { statement: `CALL CUSTOM_AGENT2('${prompt}')` };\n    const sfResponse = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(sfBody)\n    });\n    const sfText = await sfResponse.text();\n    const formatted = formatSnowflakeResponse(sfText);\n\n    setIsTyping(false);\n    // Show both the selection and the result in chat\n    const newMsgs = [\n      ...messages,\n      { role: 'user', text: finalQuery },\n      { role: 'assistant', text: formatted }\n    ];\n    setMessages(newMsgs);\n    localStorage.setItem('chatMessages', JSON.stringify(newMsgs));\n    setInput('');\n  };\n\n  // --- Typing Indicator Component ---\n  function TypingIndicator() {\n    return <span className=\"typing-indicator\"><span></span><span></span><span></span></span>;\n  }\n\n  // Render assistant output with agent2 results, tables, etc.\n  const renderChatBubbleContent = (msg) => {\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return (\n          <table className=\"snowflake-table\">\n            <thead><tr>{obj.columns.map((h, i) => <th key={i}>{h}</th>)}</tr></thead>\n            <tbody>\n              {obj.data.length === 0 ? (\n                <tr><td colSpan={obj.columns.length} style={{ textAlign: 'center', color: '#888' }}>(no results)</td></tr>\n              ) : obj.data.map((row, ridx) => (\n                <tr key={ridx}>\n                  {row.map((cell, cidx) => (<td key={cidx}>{cell}</td>))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        );\n      }\n      if (obj.type === \"output\") { return <div>{obj.value}</div>; }\n      if (obj.type === \"error\") { return <span style={{ color: \"#b91c1c\", fontWeight: 500 }}>{obj.value}</span>; }\n      if (obj.type === \"agent2\") {\n        return (\n          <div style={{ marginBottom: 6 }}>\n            <div style={{ marginBottom: 10, fontWeight: 500, color: \"#5233c0\" }}>{obj.output}</div>\n            {obj.sources && obj.sources.length > 0 && (\n              <details style={{ marginTop: 6 }}>\n                <summary style={{ cursor: \"pointer\", color: \"#7c3aed\", fontSize: 13, fontWeight: 600 }}>Source(s) used</summary>\n                <div style={{ fontSize: 13, color: \"#2b2553\", marginTop: 4 }}>\n                  {obj.sources.map((src, i) =>\n                    <div key={i} style={{ marginBottom: 3 }}>\n                      {src.metadata && src.metadata.length > 0 && (\n                        <div>\n                          Table:&nbsp;\n                          <span style={{ fontFamily: \"monospace\" }}>\n                            {src.metadata.map(m => m.Table).join(\", \")}\n                          </span>\n                        </div>\n                      )}\n                      {src.tool_name && (<div>Tool: <span style={{ fontFamily: \"monospace\" }}>{src.tool_name}</span></div>)}\n                      {src.tool_type && (<div>Type: <span style={{ fontFamily: \"monospace\" }}>{src.tool_type}</span></div>)}\n                    </div>\n                  )}\n                </div>\n              </details>\n            )}\n          </div>\n        );\n      }\n      return <pre>{JSON.stringify(obj.value, null, 2)}</pre>;\n    }\n    return (msg.text || \"\").split('\\n').map((line, i) => (<div key={i}>{line}</div>));\n  };\n\n  return (\n    <div>\n      <button className=\"chatbot-toggler modern-toggler\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Toggle chatbot\"\n        style={{ position: 'fixed', right: '20px', bottom: '20px', zIndex: 10000 }}>\n        {isOpen ? '✖' : <img src={ChatbotIcon} alt=\"Chatbot\" style={{ width: 48, height: 48 }} />}\n      </button>\n      {isOpen && (\n        <div className=\"chatbot modern-chatbot\">\n          <ul className=\"chatbox\" ref={chatRef}>\n            {messages.map((msg, idx) => (\n              <li\n                key={idx}\n                className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}>\n                <div className={`chat-bubble ${msg.role}`}>\n                  {renderChatBubbleContent(msg)}\n                </div>\n              </li>\n            ))}\n            {isTyping && (\n              <li className=\"chat incoming\">\n                <div className=\"chat-bubble assistant\">\n                  <TypingIndicator />\n                </div>\n              </li>\n            )}\n          </ul>\n\n          {/* --- CLARIFICATION SUGGESTIONS PANEL --- */}\n          {clarificationSuggestions && clarificationSuggestions.length > 0 && (\n            <div className=\"clarification-suggestions\" style={{ padding: 18 }}>\n              <div style={{ fontWeight: 600, marginBottom: 7 }}>\n                Please select or refine your query:\n              </div>\n              {clarificationSuggestions.map((s, i) => (\n                <button\n                  key={i}\n                  className=\"suggestion-button\"\n                  style={{ margin: \"3px 5px 7px 0\" }}\n                  onClick={() => handleClarifySuggestion(s)}\n                >{s}</button>\n              ))}\n              <div style={{ margin: \"12px 0 0 0\" }}>\n                <input\n                  placeholder=\"Or type your final query...\"\n                  style={{ width: \"70%\", marginRight: 6 }}\n                  value={input}\n                  onChange={e => setInput(e.target.value)}\n                  onKeyDown={e => e.key === 'Enter' && handleClarifySuggestion(input)}\n                  disabled={isTyping}\n                />\n                <button\n                  className=\"send-button\"\n                  onClick={() => handleClarifySuggestion(input)}\n                  disabled={isTyping || !input.trim()}\n                >Send</button>\n              </div>\n            </div>\n          )}\n\n          {/* Input shown only when not in suggestion-select mode */}\n          {!clarificationSuggestions && (\n            <div className=\"chat-input\">\n              <textarea\n                ref={inputRef}\n                placeholder=\"Ask me anything...\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input)}\n                rows={1}\n                className=\"chat-input-textarea\"\n                style={{ overflow: 'hidden', resize: 'none' }}\n                disabled={isTyping}\n              />\n              <button\n                onClick={() => handleSendMessage(input)}\n                title=\"Send message\"\n                className={`send-button${input.trim() ? \" has-text\" : \"\"}`}\n                disabled={isTyping}\n              >\n                <svg height=\"22\" width=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ display: \"block\" }}>\n                  <path d=\"M4 20L20 12L4 4V10L16 12L4 14V20Z\" fill=\"currentColor\" />\n                </svg>\n              </button>\n            </div>\n          )}\n          <footer className=\"chatbot-footer\">\n            Powered by <img src={ZSIcon} alt=\"ZS Associates\" />\n          </footer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}