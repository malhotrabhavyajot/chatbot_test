{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// === Hardcoded answers and suggestions ===\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS in the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE , LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\nconst HARDCODED_SUGGESTIONS = [\"Which universes do we show in Accounts calculation?\", \"Where can I find TRX Sales trends overtime?\", \"Where can I find top 10 Gainer Prescriber over time?\", \"What is Formulary Status?\", \"What are the number of current monthly suggestion KPIs?\", \"Which dossier gives a detailed analysis about the Payors?\", \"Where can I find explanations about different KPIs?\", \"What is MKT % LIS?\", \"Are any physicians' sales dropped at a geo level?\"];\nconst GENERIC_GREETINGS = [\"hi\", \"hello\", \"hey\", \"how are you\", \"good morning\", \"good afternoon\", \"good evening\", \"hiya\", \"yo\", \"hii\", \"hello there\", \"hey there\", \"hi there\"];\nfunction isGreeting(text) {\n  const cleaned = text.trim().toLowerCase();\n  return GENERIC_GREETINGS.some(g => cleaned === g || cleaned.startsWith(g + ' '));\n}\nfunction extractSQLBlock(text) {\n  const match = text && typeof text === \"string\" ? text.match(/```sql\\s*([\\s\\S]*?)```/i) : null;\n  return match ? match[1].trim() : null;\n}\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    // If response is from CUSTOM_AGENT2, show 'output' and table if present\n    if (json.output) {\n      return {\n        type: \"agent2\",\n        output: json.output,\n        sources: json.sources || []\n      };\n    }\n    const columns = json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name) || json.rowType && json.rowType.map(col => col.name) || json.rowtype && json.rowtype.map(col => col.name) || json.columns && json.columns.map(col => col.name);\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return {\n      type: \"error\",\n      value: \"❌ Error: \" + json.error\n    };\n    if (json.code && json.code !== \"000000\" && (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))) {\n      return {\n        type: \"error\",\n        value: `❌ Error: ${json.code} - ${json.message}`\n      };\n    }\n    if (json.message) return {\n      type: \"output\",\n      value: json.message\n    };\n    return {\n      type: \"output\",\n      value: \"No data found.\"\n    };\n  } catch {\n    return {\n      type: \"error\",\n      value: responseText || \"No response from backend.\"\n    };\n  }\n}\n\n// --- Typing Indicator Component ---\nfunction TypingIndicator() {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"typing-indicator\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n// Tooltip helper\n_c = TypingIndicator;\nconst Tooltip = ({\n  children,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"feedback-tooltip\",\n  children: [children, /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"feedback-tooltiptext\",\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 3\n}, this);\n_c2 = Tooltip;\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{\n      role: 'assistant',\n      text: 'Hello 👋! How may I assist you?'\n    }];\n  });\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({\n    message: '',\n    type: 'info',\n    visible: false\n  });\n  const [clickedIndex, setClickedIndex] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Suggestion randomizer for clear chat\n  const randomizeSuggestions = () => {\n    let newIndex = Math.floor(Math.random() * HARDCODED_SUGGESTIONS.length);\n    if (HARDCODED_SUGGESTIONS.length > 1 && newIndex === suggestionIndex) {\n      newIndex = (newIndex + 1) % HARDCODED_SUGGESTIONS.length;\n    }\n    setSuggestionIndex(newIndex);\n    localStorage.setItem('suggestionIndex', newIndex.toString());\n  };\n  const numSuggestions = isExpanded ? 4 : 2;\n  const visibleSuggestions = Array(numSuggestions).fill(0).map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollTo({\n      top: chatRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [messages, isTyping, isOpen, isExpanded]);\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({\n          ...t,\n          visible: false\n        }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n  const showToast = (msg, type) => {\n    setToast({\n      message: msg,\n      type: type,\n      visible: true\n    });\n  };\n\n  // --- MAIN SEND MESSAGE LOGIC ---\n  const handleSendMessage = async userMessage => {\n    if (!userMessage || !userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // HARDCODED greetings & answers\n    if (isGreeting(userMessage)) {\n      const greetingResponse = \"Hello! 👋 How can I assist you with your field insights or business data today?\";\n      setTimeout(() => {\n        setIsTyping(false);\n        const updatedMessages = [...messages, {\n          role: 'user',\n          text: userMessage\n        }, {\n          role: 'assistant',\n          text: greetingResponse\n        }];\n        setMessages(updatedMessages);\n        localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      }, 700);\n      return;\n    }\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      const hardcodedAnswer = HARDCODED_ANSWERS[matchedKey];\n      setTimeout(() => {\n        setIsTyping(false);\n        const updatedMessages = [...messages, {\n          role: 'user',\n          text: userMessage\n        }, {\n          role: 'assistant',\n          text: hardcodedAnswer\n        }];\n        setMessages(updatedMessages);\n        localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      }, 650);\n      return;\n    }\n\n    // Step 1: Get clarify prompt from OpenAI clarification agent\n    const clarifyResponse = await fetch('http://localhost:4000/api/clarify', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userMessage\n      })\n    });\n    const {\n      response: clarifyPrompt\n    } = await clarifyResponse.json();\n\n    // Step 2: Show clarification prompt as assistant message\n    setIsTyping(false);\n    const assistantMsg = {\n      role: 'assistant',\n      text: clarifyPrompt\n    };\n    const userMsgObj = {\n      role: 'user',\n      text: userMessage\n    };\n    let newMessages = [...messages, userMsgObj, assistantMsg];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n\n    // Step 3: Pass clarifyPrompt to CUSTOM_AGENT2\n    setIsTyping(true);\n    let clarifyToSend = clarifyPrompt;\n    if (!clarifyToSend || typeof clarifyToSend !== \"string\") {\n      clarifyToSend = userMessage; // fallback if clarifyPrompt is empty/invalid\n    }\n    const safePrompt = clarifyToSend.replace(/'/g, \"''\");\n    const sfBody = {\n      statement: `CALL CUSTOM_AGENT2('${safePrompt}')`\n    };\n    const sfResponse = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(sfBody)\n    });\n    const sfText = await sfResponse.text();\n    const formatted = formatSnowflakeResponse(sfText);\n    setIsTyping(false);\n    const resultMessages = [...newMessages, {\n      role: \"assistant\",\n      text: formatted\n    }];\n    setMessages(resultMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(resultMessages));\n  };\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({\n      ...prev,\n      [idx]: type\n    }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n  const toggleTheme = () => setDarkMode(prev => !prev);\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n    showToast('Copied to clipboard!', 'success');\n  };\n\n  // --- Render assistant output with agent2 results, code, table etc. ---\n  const renderChatBubbleContent = msg => {\n    // 1. Snowflake tables\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"snowflake-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: obj.columns.map((h, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: h\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 44\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: obj.data.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: obj.columns.length,\n                style: {\n                  textAlign: 'center',\n                  color: '#888'\n                },\n                children: \"(no results)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this) : obj.data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.map((cell, cidx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  whiteSpace: 'pre-wrap',\n                  fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                },\n                children: (() => {\n                  try {\n                    if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                      const parsed = JSON.parse(cell);\n                      if (Array.isArray(parsed)) {\n                        return /*#__PURE__*/_jsxDEV(\"ul\", {\n                          style: {\n                            paddingLeft: '18px',\n                            margin: 0\n                          },\n                          children: parsed.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: item\n                          }, idx, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 273,\n                            columnNumber: 62\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 272,\n                          columnNumber: 33\n                        }, this);\n                      }\n                      if (typeof parsed === 'object') {\n                        return /*#__PURE__*/_jsxDEV(\"pre\", {\n                          children: JSON.stringify(parsed, null, 2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 278,\n                          columnNumber: 38\n                        }, this);\n                      }\n                    }\n                    return cell;\n                  } catch {\n                    return cell;\n                  }\n                })()\n              }, cidx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this))\n            }, ridx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this);\n      }\n      if (obj.type === \"output\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 16\n        }, this);\n      }\n      if (obj.type === \"error\") {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#b91c1c\",\n            fontWeight: 500\n          },\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 16\n        }, this);\n      }\n      if (obj.type === \"agent2\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10,\n              fontWeight: 500,\n              color: \"#5233c0\"\n            },\n            children: obj.output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), obj.sources && obj.sources.length > 0 && /*#__PURE__*/_jsxDEV(\"details\", {\n            style: {\n              marginTop: 6\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n              style: {\n                cursor: \"pointer\",\n                color: \"#7c3aed\",\n                fontSize: 13,\n                fontWeight: 600\n              },\n              children: \"Source(s) used\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 13,\n                color: \"#2b2553\",\n                marginTop: 4\n              },\n              children: obj.sources.map((src, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: 3\n                },\n                children: [src.metadata && src.metadata.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Table:\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontFamily: \"monospace\"\n                    },\n                    children: src.metadata.map(m => m.Table).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 25\n                }, this), src.tool_name && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Tool: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontFamily: \"monospace\"\n                    },\n                    children: src.tool_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 36\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 25\n                }, this), src.tool_type && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Type: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontFamily: \"monospace\"\n                    },\n                    children: src.tool_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 36\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 25\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(obj.value, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 14\n      }, this);\n    }\n\n    // 2. Render SQL or code blocks in a highlighted box with copy button\n    if (typeof msg.text === \"string\") {\n      const sqlBlock = extractSQLBlock(msg.text);\n      if (sqlBlock) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assistant-output-block\",\n          style: {\n            position: 'relative',\n            marginBottom: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 600,\n              marginBottom: 8\n            },\n            children: \"Snowflake SQL Query:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"assistant-sql-block\",\n            style: {\n              marginBottom: 8,\n              borderRadius: 12,\n              background: '#f5f2fd',\n              padding: 15,\n              fontSize: 14,\n              overflowX: 'auto'\n            },\n            children: sqlBlock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              border: 'none',\n              background: '#ede7fa',\n              borderRadius: 7,\n              padding: '3px 10px',\n              fontSize: 13,\n              color: '#5233c0',\n              cursor: 'pointer'\n            },\n            onClick: () => handleCopy(sqlBlock),\n            title: \"Copy SQL\",\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#444',\n              marginTop: 10,\n              fontSize: 14\n            },\n            children: msg.text.replace(/```sql[\\s\\S]*?```/i, '').trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    // Default: plain or markdown split by lines\n    return (msg.text || \"\").split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: line\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this));\n  };\n  const handleSuggestionClick = (s, i, e) => {\n    setClickedIndex(i);\n    setTimeout(() => setClickedIndex(null), 220);\n    handleSendMessage(s);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggler modern-toggler\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Toggle chatbot\",\n      style: {\n        position: 'fixed',\n        right: '20px',\n        bottom: '20px',\n        zIndex: 10000\n      },\n      children: isOpen ? '✖' : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ChatbotIcon,\n        alt: \"Chatbot\",\n        style: {\n          width: 48,\n          height: 48\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot modern-chatbot` + (darkMode ? ' dark-mode' : '') + (isExpanded ? ' expanded' : ' collapsed'),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-title\",\n          children: [\"Field Insights\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header-title-gradient\",\n            children: \" Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleTheme,\n              title: \"Toggle theme\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Toggle theme\",\n              children: darkMode ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"5\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                  stroke: \"#7c3aed\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"2\",\n                    x2: \"12\",\n                    y2: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"19\",\n                    x2: \"12\",\n                    y2: \"22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"4.22\",\n                    x2: \"6.34\",\n                    y2: \"6.34\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"17.66\",\n                    x2: \"19.78\",\n                    y2: \"19.78\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"2\",\n                    y1: \"12\",\n                    x2: \"5\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"19\",\n                    y1: \"12\",\n                    x2: \"22\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"19.78\",\n                    x2: \"6.34\",\n                    y2: \"17.66\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"6.34\",\n                    x2: \"19.78\",\n                    y2: \"4.22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                randomizeSuggestions();\n                setMessages([{\n                  role: 'assistant',\n                  text: 'Hello 👋! How may I assist you?'\n                }]);\n                localStorage.removeItem('chatMessages');\n                setFeedback({});\n              },\n              title: \"Clear chat\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Clear chat\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsExpanded(prev => !prev),\n              title: isExpanded ? 'Collapse window' : 'Expand window',\n              className: \"header-action-btn\",\n              \"aria-label\": isExpanded ? 'Collapse window' : 'Expand window',\n              children: isExpanded ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"8 3 3 3 3 8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"3\",\n                  x2: \"10\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"16 21 21 21 21 16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"21\",\n                  x2: \"14\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"15 3 21 3 21 9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"3\",\n                  x2: \"14\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"9 21 3 21 3 15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"21\",\n                  x2: \"10\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chatbox\",\n        ref: chatRef,\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n          style: {\n            justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-bubble ${msg.role}`,\n            children: renderChatBubbleContent(msg)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 17\n          }, this), msg.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-row\",\n            children: [feedback[idx] === undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'up'),\n                  \"aria-label\": \"Thumbs up\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as not helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'down'),\n                  \"aria-label\": \"Thumbs down\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true), feedback[idx] === 'up' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as helpful!\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected up\",\n                \"aria-label\": \"Thumbs up\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 23\n            }, this), feedback[idx] === 'down' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as not helpful\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected down\",\n                \"aria-label\": \"Thumbs down\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 15\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chat incoming\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bubble assistant\",\n            children: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions\",\n        style: {\n          position: \"relative\"\n        },\n        children: [visibleSuggestions.map((s, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleSuggestionClick(s, i, e),\n          className: `suggestion-button${clickedIndex === i ? ' clicked' : ''}`,\n          children: s\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 15\n        }, this)), !isExpanded && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"suggestion-arrow right\",\n          \"aria-label\": \"Next suggestions\",\n          onClick: () => {\n            const max = HARDCODED_SUGGESTIONS.length;\n            setSuggestionIndex(prev => (prev + 1) % max);\n            localStorage.setItem(\"suggestionIndex\", ((suggestionIndex + 1) % max).toString());\n          },\n          style: {\n            border: \"none\",\n            background: \"none\",\n            cursor: \"pointer\",\n            fontSize: 20,\n            marginLeft: 7,\n            color: \"#7c3aed\",\n            alignSelf: \"center\",\n            height: 28,\n            width: 28\n          },\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: inputRef,\n          placeholder: \"Ask me anything...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input),\n          rows: 1,\n          className: \"chat-input-textarea\",\n          style: {\n            overflow: 'hidden',\n            resize: 'none'\n          },\n          disabled: isTyping\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSendMessage(input),\n          title: \"Send message\",\n          className: `send-button${input.trim() ? \" has-text\" : \"\"}`,\n          disabled: isTyping,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            height: \"22\",\n            width: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            style: {\n              display: \"block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M4 20L20 12L4 4V10L16 12L4 14V20Z\",\n              fill: \"currentColor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }, this), toast.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toast toast-${toast.type}`,\n        onClick: () => setToast(t => ({\n          ...t,\n          visible: false\n        })),\n        style: {\n          cursor: 'pointer'\n        },\n        children: toast.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chatbot-footer\",\n        children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ZSIcon,\n          alt: \"ZS Associates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 390,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"UWz5J1gWPXKEcIOk6qg24XNErrM=\");\n_c3 = ChatBot;\nexport default ChatBot;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TypingIndicator\");\n$RefreshReg$(_c2, \"Tooltip\");\n$RefreshReg$(_c3, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotIcon","ZSIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","HARDCODED_ANSWERS","HARDCODED_SUGGESTIONS","GENERIC_GREETINGS","isGreeting","text","cleaned","trim","toLowerCase","some","g","startsWith","extractSQLBlock","match","formatSnowflakeResponse","responseText","json","JSON","parse","output","type","sources","columns","resultSetMetaData","rowType","map","col","name","rowtype","data","Array","isArray","length","error","value","code","message","includes","TypingIndicator","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Tooltip","_c2","ChatBot","_s","messages","setMessages","saved","localStorage","getItem","role","feedback","setFeedback","suggestionIndex","setSuggestionIndex","stored","parseInt","input","setInput","isOpen","setIsOpen","darkMode","setDarkMode","isExpanded","setIsExpanded","toast","setToast","visible","clickedIndex","setClickedIndex","isTyping","setIsTyping","chatRef","inputRef","randomizeSuggestions","newIndex","Math","floor","random","setItem","toString","numSuggestions","visibleSuggestions","fill","_","i","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","scrollLeft","timer","setTimeout","t","clearTimeout","showToast","msg","handleSendMessage","userMessage","greetingResponse","updatedMessages","stringify","matchedKey","Object","keys","find","k","hardcodedAnswer","clarifyResponse","fetch","method","headers","body","response","clarifyPrompt","assistantMsg","userMsgObj","newMessages","clarifyToSend","safePrompt","replace","sfBody","statement","sfResponse","sfText","formatted","resultMessages","handleFeedback","idx","prev","toggleTheme","handleCopy","navigator","clipboard","writeText","renderChatBubbleContent","obj","h","colSpan","style","textAlign","color","row","ridx","cell","cidx","whiteSpace","fontFamily","undefined","parsed","paddingLeft","margin","item","fontWeight","marginBottom","marginTop","cursor","fontSize","src","metadata","m","Table","join","tool_name","tool_type","sqlBlock","position","borderRadius","background","padding","overflowX","right","border","onClick","title","split","line","handleSuggestionClick","s","e","minHeight","bottom","zIndex","alt","width","height","viewBox","cx","cy","r","stroke","strokeWidth","x1","y1","x2","y2","d","removeItem","strokeLinecap","strokeLinejoin","points","ref","justifyContent","tabIndex","max","marginLeft","alignSelf","placeholder","onChange","target","onKeyDown","key","shiftKey","rows","overflow","resize","disabled","display","_c3","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// === Hardcoded answers and suggestions ===\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS in the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE , LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\nconst HARDCODED_SUGGESTIONS = [\n  \"Which universes do we show in Accounts calculation?\",\n  \"Where can I find TRX Sales trends overtime?\",\n  \"Where can I find top 10 Gainer Prescriber over time?\",\n  \"What is Formulary Status?\",\n  \"What are the number of current monthly suggestion KPIs?\",\n  \"Which dossier gives a detailed analysis about the Payors?\",\n  \"Where can I find explanations about different KPIs?\",\n  \"What is MKT % LIS?\",\n  \"Are any physicians' sales dropped at a geo level?\"\n];\nconst GENERIC_GREETINGS = [\n  \"hi\", \"hello\", \"hey\", \"how are you\", \"good morning\", \"good afternoon\", \"good evening\",\n  \"hiya\", \"yo\", \"hii\", \"hello there\", \"hey there\", \"hi there\"\n];\nfunction isGreeting(text) {\n  const cleaned = text.trim().toLowerCase();\n  return GENERIC_GREETINGS.some(g => cleaned === g || cleaned.startsWith(g + ' '));\n}\nfunction extractSQLBlock(text) {\n  const match = text && typeof text === \"string\" ? text.match(/```sql\\s*([\\s\\S]*?)```/i) : null;\n  return match ? match[1].trim() : null;\n}\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    // If response is from CUSTOM_AGENT2, show 'output' and table if present\n    if (json.output) {\n      return {\n        type: \"agent2\",\n        output: json.output,\n        sources: json.sources || []\n      };\n    }\n    const columns =\n      (json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name)) ||\n      (json.rowType && json.rowType.map(col => col.name)) ||\n      (json.rowtype && json.rowtype.map(col => col.name)) ||\n      (json.columns && json.columns.map(col => col.name));\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return { type: \"error\", value: \"❌ Error: \" + json.error };\n    if (\n      json.code &&\n      json.code !== \"000000\" &&\n      (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))\n    ) {\n      return { type: \"error\", value: `❌ Error: ${json.code} - ${json.message}` };\n    }\n    if (json.message) return { type: \"output\", value: json.message };\n    return { type: \"output\", value: \"No data found.\" };\n  } catch {\n    return { type: \"error\", value: responseText || \"No response from backend.\" };\n  }\n}\n\n// --- Typing Indicator Component ---\nfunction TypingIndicator() {\n  return (\n    <span className=\"typing-indicator\">\n      <span></span><span></span><span></span>\n    </span>\n  );\n}\n\n// Tooltip helper\nconst Tooltip = ({ children, text }) => (\n  <span className=\"feedback-tooltip\">\n    {children}\n    <span className=\"feedback-tooltiptext\">{text}</span>\n  </span>\n);\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }];\n  });\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({ message: '', type: 'info', visible: false });\n  const [clickedIndex, setClickedIndex] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Suggestion randomizer for clear chat\n  const randomizeSuggestions = () => {\n    let newIndex = Math.floor(Math.random() * HARDCODED_SUGGESTIONS.length);\n    if (HARDCODED_SUGGESTIONS.length > 1 && newIndex === suggestionIndex) {\n      newIndex = (newIndex + 1) % HARDCODED_SUGGESTIONS.length;\n    }\n    setSuggestionIndex(newIndex);\n    localStorage.setItem('suggestionIndex', newIndex.toString());\n  };\n\n  const numSuggestions = isExpanded ? 4 : 2;\n  const visibleSuggestions = Array(numSuggestions)\n    .fill(0)\n    .map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n\n  useEffect(() => {\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\n  }, [messages, isTyping, isOpen, isExpanded]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({ ...t, visible: false }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n\n  const showToast = (msg, type) => {\n    setToast({ message: msg, type: type, visible: true });\n  };\n\n  // --- MAIN SEND MESSAGE LOGIC ---\n  const handleSendMessage = async (userMessage) => {\n    if (!userMessage || !userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // HARDCODED greetings & answers\n    if (isGreeting(userMessage)) {\n      const greetingResponse =\n        \"Hello! 👋 How can I assist you with your field insights or business data today?\";\n      setTimeout(() => {\n        setIsTyping(false);\n        const updatedMessages = [...messages, { role: 'user', text: userMessage }, { role: 'assistant', text: greetingResponse }];\n        setMessages(updatedMessages);\n        localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      }, 700);\n      return;\n    }\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      const hardcodedAnswer = HARDCODED_ANSWERS[matchedKey];\n      setTimeout(() => {\n        setIsTyping(false);\n        const updatedMessages = [...messages, { role: 'user', text: userMessage }, { role: 'assistant', text: hardcodedAnswer }];\n        setMessages(updatedMessages);\n        localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      }, 650);\n      return;\n    }\n\n    // Step 1: Get clarify prompt from OpenAI clarification agent\n    const clarifyResponse = await fetch('http://localhost:4000/api/clarify', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userMessage })\n    });\n    const { response: clarifyPrompt } = await clarifyResponse.json();\n\n    // Step 2: Show clarification prompt as assistant message\n    setIsTyping(false);\n    const assistantMsg = { role: 'assistant', text: clarifyPrompt };\n    const userMsgObj = { role: 'user', text: userMessage };\n\n    let newMessages = [...messages, userMsgObj, assistantMsg];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n\n    // Step 3: Pass clarifyPrompt to CUSTOM_AGENT2\n    setIsTyping(true);\n    let clarifyToSend = clarifyPrompt;\n    if (!clarifyToSend || typeof clarifyToSend !== \"string\") {\n      clarifyToSend = userMessage; // fallback if clarifyPrompt is empty/invalid\n    }\n    const safePrompt = clarifyToSend.replace(/'/g, \"''\");\n    const sfBody = { statement: `CALL CUSTOM_AGENT2('${safePrompt}')` };\n    const sfResponse = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(sfBody)\n    });\n    const sfText = await sfResponse.text();\n    const formatted = formatSnowflakeResponse(sfText);\n\n    setIsTyping(false);\n    const resultMessages = [\n      ...newMessages,\n      { role: \"assistant\", text: formatted }\n    ];\n    setMessages(resultMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(resultMessages));\n  };\n\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({ ...prev, [idx]: type }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text);\n    showToast('Copied to clipboard!', 'success');\n  };\n\n  // --- Render assistant output with agent2 results, code, table etc. ---\n  const renderChatBubbleContent = (msg) => {\n    // 1. Snowflake tables\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return (\n          <table className=\"snowflake-table\">\n            <thead>\n              <tr>\n                {obj.columns.map((h, i) => <th key={i}>{h}</th>)}\n              </tr>\n            </thead>\n            <tbody>\n              {obj.data.length === 0 ? (\n                <tr>\n                  <td colSpan={obj.columns.length} style={{ textAlign: 'center', color: '#888' }}>(no results)</td>\n                </tr>\n              ) : obj.data.map((row, ridx) => (\n                <tr key={ridx}>\n                  {row.map((cell, cidx) => (\n                    <td key={cidx} style={{\n                      whiteSpace: 'pre-wrap',\n                      fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                    }}>\n                      {(() => {\n                        try {\n                          if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                            const parsed = JSON.parse(cell);\n                            if (Array.isArray(parsed)) {\n                              return (\n                                <ul style={{ paddingLeft: '18px', margin: 0 }}>\n                                  {parsed.map((item, idx) => <li key={idx}>{item}</li>)}\n                                </ul>\n                              );\n                            }\n                            if (typeof parsed === 'object') {\n                              return <pre>{JSON.stringify(parsed, null, 2)}</pre>;\n                            }\n                          }\n                          return cell;\n                        } catch {\n                          return cell;\n                        }\n                      })()}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        );\n      }\n      if (obj.type === \"output\") {\n        return <div>{obj.value}</div>;\n      }\n      if (obj.type === \"error\") {\n        return <span style={{ color: \"#b91c1c\", fontWeight: 500 }}>{obj.value}</span>;\n      }\n      if (obj.type === \"agent2\") {\n        return (\n          <div style={{ marginBottom: 6 }}>\n            <div style={{ marginBottom: 10, fontWeight: 500, color: \"#5233c0\" }}>{obj.output}</div>\n            {obj.sources && obj.sources.length > 0 && (\n              <details style={{ marginTop: 6 }}>\n                <summary style={{ cursor: \"pointer\", color: \"#7c3aed\", fontSize: 13, fontWeight: 600 }}>Source(s) used</summary>\n                <div style={{ fontSize: 13, color: \"#2b2553\", marginTop: 4 }}>\n                  {obj.sources.map((src, i) =>\n                    <div key={i} style={{ marginBottom: 3 }}>\n                      {src.metadata && src.metadata.length > 0 && (\n                        <div>\n                          Table:&nbsp;\n                          <span style={{ fontFamily: \"monospace\" }}>\n                            {src.metadata.map(m => m.Table).join(\", \")}\n                          </span>\n                        </div>\n                      )}\n                      {src.tool_name && (\n                        <div>Tool: <span style={{ fontFamily: \"monospace\" }}>{src.tool_name}</span></div>\n                      )}\n                      {src.tool_type && (\n                        <div>Type: <span style={{ fontFamily: \"monospace\" }}>{src.tool_type}</span></div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </details>\n            )}\n          </div>\n        );\n      }\n      return <pre>{JSON.stringify(obj.value, null, 2)}</pre>;\n    }\n\n    // 2. Render SQL or code blocks in a highlighted box with copy button\n    if (typeof msg.text === \"string\") {\n      const sqlBlock = extractSQLBlock(msg.text);\n      if (sqlBlock) {\n        return (\n          <div className=\"assistant-output-block\" style={{ position: 'relative', marginBottom: 6 }}>\n            <div style={{ fontWeight: 600, marginBottom: 8 }}>Snowflake SQL Query:</div>\n            <pre className=\"assistant-sql-block\" style={{\n              marginBottom: 8,\n              borderRadius: 12,\n              background: '#f5f2fd',\n              padding: 15,\n              fontSize: 14,\n              overflowX: 'auto'\n            }}>{sqlBlock}</pre>\n            <button\n              style={{\n                position: 'absolute',\n                top: 8,\n                right: 8,\n                border: 'none',\n                background: '#ede7fa',\n                borderRadius: 7,\n                padding: '3px 10px',\n                fontSize: 13,\n                color: '#5233c0',\n                cursor: 'pointer'\n              }}\n              onClick={() => handleCopy(sqlBlock)}\n              title=\"Copy SQL\"\n            >\n              Copy\n            </button>\n            {/* Show any explanatory text after the SQL */}\n            <div style={{ color: '#444', marginTop: 10, fontSize: 14 }}>\n              {msg.text.replace(/```sql[\\s\\S]*?```/i, '').trim()}\n            </div>\n          </div>\n        );\n      }\n    }\n\n    // Default: plain or markdown split by lines\n    return (msg.text || \"\").split('\\n').map((line, i) => (\n      <div key={i}>{line}</div>\n    ));\n  };\n\n  const handleSuggestionClick = (s, i, e) => {\n    setClickedIndex(i);\n    setTimeout(() => setClickedIndex(null), 220);\n    handleSendMessage(s);\n  };\n\n  return (\n    <div style={{ background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)', minHeight: '100vh' }}>\n      <button\n        className=\"chatbot-toggler modern-toggler\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Toggle chatbot\"\n        style={{ position: 'fixed', right: '20px', bottom: '20px', zIndex: 10000 }}>\n        {isOpen ? '✖' : <img src={ChatbotIcon} alt=\"Chatbot\" style={{ width: 48, height: 48 }} />}\n      </button>\n      {isOpen && (\n        <div\n          className={\n            `chatbot modern-chatbot` +\n            (darkMode ? ' dark-mode' : '') +\n            (isExpanded ? ' expanded' : ' collapsed')\n          }\n        >\n          <header className=\"chatbot-header\">\n            <span className=\"header-title\">\n              Field Insights<span className=\"header-title-gradient\"> Assistant</span>\n            </span>\n            <div className=\"header-controls\">\n              <div className=\"header-actions\">\n                {/* Theme toggle */}\n                <button onClick={toggleTheme} title=\"Toggle theme\" className=\"header-action-btn\" aria-label=\"Toggle theme\">\n                  {darkMode ? (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <circle cx=\"12\" cy=\"12\" r=\"5\" fill=\"#7c3aed\" />\n                      <g stroke=\"#7c3aed\" strokeWidth=\"2\">\n                        <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"5\" />\n                        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"22\" />\n                        <line x1=\"4.22\" y1=\"4.22\" x2=\"6.34\" y2=\"6.34\" />\n                        <line x1=\"17.66\" y1=\"17.66\" x2=\"19.78\" y2=\"19.78\" />\n                        <line x1=\"2\" y1=\"12\" x2=\"5\" y2=\"12\" />\n                        <line x1=\"19\" y1=\"12\" x2=\"22\" y2=\"12\" />\n                        <line x1=\"4.22\" y1=\"19.78\" x2=\"6.34\" y2=\"17.66\" />\n                        <line x1=\"17.66\" y1=\"6.34\" x2=\"19.78\" y2=\"4.22\" />\n                      </g>\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <path d=\"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\" fill=\"#7c3aed\" />\n                    </svg>\n                  )}\n                </button>\n                {/* Refresh/Clear + randomize suggestions */}\n                <button\n                  onClick={() => {\n                    randomizeSuggestions();\n                    setMessages([{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }]);\n                    localStorage.removeItem('chatMessages');\n                    setFeedback({});\n                  }}\n                  title=\"Clear chat\"\n                  className=\"header-action-btn\"\n                  aria-label=\"Clear chat\"\n                >\n                  <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                    <path d=\"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                  </svg>\n                </button>\n                {/* Expand/Collapse */}\n                <button\n                  onClick={() => setIsExpanded((prev) => !prev)}\n                  title={isExpanded ? 'Collapse window' : 'Expand window'}\n                  className=\"header-action-btn\"\n                  aria-label={isExpanded ? 'Collapse window' : 'Expand window'}\n                >\n                  {isExpanded ? (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"8 3 3 3 3 8\" />\n                      <line x1=\"3\" y1=\"3\" x2=\"10\" y2=\"10\" />\n                      <polyline points=\"16 21 21 21 21 16\" />\n                      <line x1=\"21\" y1=\"21\" x2=\"14\" y2=\"14\" />\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"15 3 21 3 21 9\" />\n                      <line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\" />\n                      <polyline points=\"9 21 3 21 3 15\" />\n                      <line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n            </div>\n          </header>\n          <ul className=\"chatbox\" ref={chatRef}>\n            {messages.map((msg, idx) => (\n              <li\n                key={idx}\n                className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}\n                style={{ justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start' }}\n              >\n                <div className={`chat-bubble ${msg.role}`}>\n                  {renderChatBubbleContent(msg)}\n                </div>\n                {msg.role === 'assistant' && (\n                  <div className=\"feedback-row\">\n                    {feedback[idx] === undefined && (\n                      <>\n                        <Tooltip text=\"Mark as helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'up')}\n                            aria-label=\"Thumbs up\"\n                            tabIndex={0}\n                          >👍</button>\n                        </Tooltip>\n                        <Tooltip text=\"Mark as not helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'down')}\n                            aria-label=\"Thumbs down\"\n                            tabIndex={0}\n                          >👎</button>\n                        </Tooltip>\n                      </>\n                    )}\n                    {feedback[idx] === 'up' && (\n                      <Tooltip text=\"Marked as helpful!\">\n                        <button className=\"feedback-btn selected up\" aria-label=\"Thumbs up\" tabIndex={0}>👍</button>\n                      </Tooltip>\n                    )}\n                    {feedback[idx] === 'down' && (\n                      <Tooltip text=\"Marked as not helpful\">\n                        <button className=\"feedback-btn selected down\" aria-label=\"Thumbs down\" tabIndex={0}>👎</button>\n                      </Tooltip>\n                    )}\n                  </div>\n                )}\n              </li>\n            ))}\n            {isTyping && (\n              <li className=\"chat incoming\">\n                <div className=\"chat-bubble assistant\">\n                  <TypingIndicator />\n                </div>\n              </li>\n            )}\n          </ul>\n          <div className=\"suggestions\" style={{ position: \"relative\" }}>\n            {visibleSuggestions.map((s, i) => (\n              <button\n                key={i}\n                onClick={e => handleSuggestionClick(s, i, e)}\n                className={`suggestion-button${clickedIndex === i ? ' clicked' : ''}`}\n              >\n                {s}\n              </button>\n            ))}\n            {!isExpanded &&\n              <button\n                className=\"suggestion-arrow right\"\n                aria-label=\"Next suggestions\"\n                onClick={() => {\n                  const max = HARDCODED_SUGGESTIONS.length;\n                  setSuggestionIndex((prev) => (prev + 1) % max);\n                  localStorage.setItem(\n                    \"suggestionIndex\",\n                    ((suggestionIndex + 1) % max).toString()\n                  );\n                }}\n                style={{\n                  border: \"none\",\n                  background: \"none\",\n                  cursor: \"pointer\",\n                  fontSize: 20,\n                  marginLeft: 7,\n                  color: \"#7c3aed\",\n                  alignSelf: \"center\",\n                  height: 28,\n                  width: 28\n                }}\n              >&#8594;</button>\n            }\n          </div>\n          <div className=\"chat-input\">\n            <textarea\n              ref={inputRef}\n              placeholder=\"Ask me anything...\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input)}\n              rows={1}\n              className=\"chat-input-textarea\"\n              style={{ overflow: 'hidden', resize: 'none' }}\n              disabled={isTyping}\n            />\n            <button\n              onClick={() => handleSendMessage(input)}\n              title=\"Send message\"\n              className={`send-button${input.trim() ? \" has-text\" : \"\"}`}\n              disabled={isTyping}\n            >\n              <svg height=\"22\" width=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ display: \"block\" }}>\n                <path d=\"M4 20L20 12L4 4V10L16 12L4 14V20Z\" fill=\"currentColor\" />\n              </svg>\n            </button>\n          </div>\n          {toast.visible && (\n            <div\n              className={`toast toast-${toast.type}`}\n              onClick={() => setToast(t => ({ ...t, visible: false }))}\n              style={{ cursor: 'pointer' }}\n            >\n              {toast.message}\n            </div>\n          )}\n          <footer className=\"chatbot-footer\">\n            Powered by <img src={ZSIcon} alt=\"ZS Associates\" />\n          </footer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}