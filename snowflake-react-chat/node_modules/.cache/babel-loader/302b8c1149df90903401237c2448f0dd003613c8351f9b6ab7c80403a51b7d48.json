{"ast":null,"code":"var _jsxFileName = \"/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// === Your hardcoded answers and suggestions ===\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS in the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE , LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\nconst HARDCODED_SUGGESTIONS = [\"Which universes do we show in Accounts calculation?\", \"Where can I find TRX Sales trends overtime?\", \"Where can I find top 10 Gainer Prescriber over time?\", \"What is Formulary Status?\", \"What are the number of current monthly suggestion KPIs?\", \"Which dossier gives a detailed analysis about the Payors?\", \"Where can I find explanations about different KPIs?\", \"What is MKT % LIS?\", \"Are any physicians' sales dropped at a geo level?\"];\nconst GENERIC_GREETINGS = [\"hi\", \"hello\", \"hey\", \"how are you\", \"good morning\", \"good afternoon\", \"good evening\", \"hiya\", \"yo\", \"hii\", \"hello there\", \"hey there\", \"hi there\"];\nfunction isGreeting(text) {\n  const cleaned = text.trim().toLowerCase();\n  return GENERIC_GREETINGS.some(g => cleaned === g || cleaned.startsWith(g + ' '));\n}\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    const columns = json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name) || json.rowType && json.rowType.map(col => col.name) || json.rowtype && json.rowtype.map(col => col.name) || json.columns && json.columns.map(col => col.name);\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return {\n      type: \"error\",\n      value: \"❌ Error: \" + json.error\n    };\n    if (json.code && json.code !== \"000000\" && (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))) {\n      return {\n        type: \"error\",\n        value: `❌ Error: ${json.code} - ${json.message}`\n      };\n    }\n    if (json.message) return {\n      type: \"output\",\n      value: json.message\n    };\n    return {\n      type: \"output\",\n      value: \"No data found.\"\n    };\n  } catch {\n    return {\n      type: \"error\",\n      value: responseText || \"No response from backend.\"\n    };\n  }\n}\nfunction isClarificationNeeded(text) {\n  if (!text) return false;\n  const clarificationPhrases = [\"i need some additional information\", \"please specify\", \"could you clarify\", \"missing information\", \"can you clarify\", \"please provide\"];\n  return clarificationPhrases.some(p => text.toLowerCase().includes(p));\n}\nfunction isReadyToSend(text) {\n  if (!text) return false;\n  return text.toLowerCase().includes(\"is that correct\") || text.toLowerCase().includes(\"is this correct\") || text.toLowerCase().includes(\"ready to submit\") || text.toLowerCase().includes(\"should i send\") || text.toLowerCase().includes(\"can i send\");\n}\nfunction extractSQLBlock(text) {\n  // Extract SQL/Code blocks (Markdown triple backtick or ```sql ... ```)\n  const match = text.match(/```sql\\s*([\\s\\S]*?)```/i);\n  return match ? match[1].trim() : null;\n}\n\n// --- Typing Indicator Component ---\nfunction TypingIndicator() {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"typing-indicator\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n// Tooltip helper\n_c = TypingIndicator;\nconst Tooltip = ({\n  children,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"feedback-tooltip\",\n  children: [children, /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"feedback-tooltiptext\",\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 113,\n  columnNumber: 3\n}, this);\n_c2 = Tooltip;\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{\n      role: 'assistant',\n      text: 'Hello 👋! How may I assist you?'\n    }];\n  });\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({\n    message: '',\n    type: 'info',\n    visible: false\n  });\n  const [clickedIndex, setClickedIndex] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n\n  // --- Clarification state ---\n  const [clarifyMode, setClarifyMode] = useState(false);\n  const [clarifyHistory, setClarifyHistory] = useState([]);\n  const [awaitingConfirm, setAwaitingConfirm] = useState(false);\n  const [clarifiedQuery, setClarifiedQuery] = useState(\"\");\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Suggestion randomizer for clear chat\n  const randomizeSuggestions = () => {\n    let newIndex = Math.floor(Math.random() * HARDCODED_SUGGESTIONS.length);\n    if (HARDCODED_SUGGESTIONS.length > 1 && newIndex === suggestionIndex) {\n      newIndex = (newIndex + 1) % HARDCODED_SUGGESTIONS.length;\n    }\n    setSuggestionIndex(newIndex);\n    localStorage.setItem('suggestionIndex', newIndex.toString());\n  };\n\n  // 2 or 4 suggestions based on expansion\n  const numSuggestions = isExpanded ? 4 : 2;\n  const visibleSuggestions = Array(numSuggestions).fill(0).map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n\n  // Scroll chat to bottom on update\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollTo({\n      top: chatRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [messages, isTyping, isOpen, isExpanded]);\n\n  // Prevent input scrolling\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n\n  // Auto-hide toast\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({\n          ...t,\n          visible: false\n        }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n  const showToast = (msg, type) => {\n    setToast({\n      message: msg,\n      type: type,\n      visible: true\n    });\n  };\n\n  // --- CLARIFICATION LOOP LOGIC ---\n  const handleSendMessage = async userMessage => {\n    if (!userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // HARDCODED greetings & answers (for instant, no API)\n    if (isGreeting(userMessage)) {\n      const greetingResponse = \"Hello! 👋 How can I assist you with your field insights or business data today?\";\n      setTimeout(() => {\n        setIsTyping(false);\n        const updatedMessages = [...messages, {\n          role: 'user',\n          text: userMessage\n        }, {\n          role: 'assistant',\n          text: greetingResponse\n        }];\n        setMessages(updatedMessages);\n        localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      }, 700);\n      return;\n    }\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      const hardcodedAnswer = HARDCODED_ANSWERS[matchedKey];\n      setTimeout(() => {\n        setIsTyping(false);\n        const updatedMessages = [...messages, {\n          role: 'user',\n          text: userMessage\n        }, {\n          role: 'assistant',\n          text: hardcodedAnswer\n        }];\n        setMessages(updatedMessages);\n        localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      }, 650);\n      return;\n    }\n\n    // --- CLARIFICATION FLOW ---\n    if (clarifyMode) {\n      const newHistory = [...clarifyHistory, {\n        role: \"user\",\n        content: userMessage\n      }];\n      const response = await fetch('http://localhost:4000/api/clarify', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userMessage,\n          conversationHistory: newHistory\n        })\n      });\n      const {\n        response: aiText\n      } = await response.json();\n      setIsTyping(false);\n      const newMessages = [...messages, {\n        role: \"user\",\n        text: userMessage\n      }, {\n        role: \"assistant\",\n        text: aiText\n      }];\n      setMessages(newMessages);\n      setClarifyHistory([...newHistory, {\n        role: \"assistant\",\n        content: aiText\n      }]);\n      localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n      if (isReadyToSend(aiText)) {\n        setAwaitingConfirm(true);\n        setClarifiedQuery(aiText);\n      }\n      return;\n    }\n\n    // --- INITIAL MESSAGE TO CLARIFICATION ENDPOINT ---\n    const response = await fetch('http://localhost:4000/api/clarify', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userMessage,\n        conversationHistory: []\n      })\n    });\n    const {\n      response: aiText\n    } = await response.json();\n    setIsTyping(false);\n    let newMessages = [...messages, {\n      role: 'user',\n      text: userMessage\n    }, {\n      role: 'assistant',\n      text: aiText\n    }];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setClarifyHistory([{\n      role: \"user\",\n      content: userMessage\n    }, {\n      role: \"assistant\",\n      content: aiText\n    }]);\n    if (isClarificationNeeded(aiText)) {\n      setClarifyMode(true);\n    } else if (isReadyToSend(aiText)) {\n      setAwaitingConfirm(true);\n      setClarifiedQuery(aiText);\n    } else {\n      setClarifyMode(false);\n    }\n  };\n\n  // --- SEND FINAL NLQ TO SNOWFLAKE ---\n  const handleConfirmSend = async () => {\n    setIsTyping(true);\n    setAwaitingConfirm(false);\n    setClarifyMode(false);\n\n    // Try to extract SQL block for sending to Snowflake\n    const sql = extractSQLBlock(clarifiedQuery) || clarifiedQuery;\n    let body = {\n      statement: sql\n    };\n    const response = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    const responseText = await response.text();\n    const formatted = formatSnowflakeResponse(responseText);\n    setIsTyping(false);\n    const newMessages = [...messages, {\n      role: \"assistant\",\n      text: \"Sending clarified query to report system...\"\n    }, {\n      role: \"assistant\",\n      text: formatted\n    }];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setClarifiedQuery(\"\");\n    setClarifyHistory([]);\n  };\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({\n      ...prev,\n      [idx]: type\n    }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  // --- Helper for copying SQL/code blocks ---\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n    showToast('Copied to clipboard!', 'success');\n  };\n\n  // Render assistant output with enhanced code/clarification block\n  const renderChatBubbleContent = msg => {\n    // 1. Render Snowflake tables\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"snowflake-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: obj.columns.map((h, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: h\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 44\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: obj.data.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: obj.columns.length,\n                style: {\n                  textAlign: 'center',\n                  color: '#888'\n                },\n                children: \"(no results)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this) : obj.data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.map((cell, cidx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  whiteSpace: 'pre-wrap',\n                  fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                },\n                children: (() => {\n                  try {\n                    if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                      const parsed = JSON.parse(cell);\n                      if (Array.isArray(parsed)) {\n                        return /*#__PURE__*/_jsxDEV(\"ul\", {\n                          style: {\n                            paddingLeft: '18px',\n                            margin: 0\n                          },\n                          children: parsed.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: item\n                          }, idx, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 358,\n                            columnNumber: 62\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 357,\n                          columnNumber: 33\n                        }, this);\n                      }\n                      if (typeof parsed === 'object') {\n                        return /*#__PURE__*/_jsxDEV(\"pre\", {\n                          children: JSON.stringify(parsed, null, 2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 363,\n                          columnNumber: 38\n                        }, this);\n                      }\n                    }\n                    return cell;\n                  } catch {\n                    return cell;\n                  }\n                })()\n              }, cidx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this))\n            }, ridx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this);\n      }\n      if (obj.type === \"output\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 16\n        }, this);\n      }\n      if (obj.type === \"error\") {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#b91c1c\",\n            fontWeight: 500\n          },\n          children: obj.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 16\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(obj.value, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 14\n      }, this);\n    }\n\n    // 2. Render SQL or code blocks in a highlighted box with copy button\n    if (typeof msg.text === \"string\") {\n      const sqlBlock = extractSQLBlock(msg.text);\n      if (sqlBlock) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assistant-output-block\",\n          style: {\n            position: 'relative',\n            marginBottom: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 600,\n              marginBottom: 8\n            },\n            children: \"Snowflake SQL Query:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"assistant-sql-block\",\n            style: {\n              marginBottom: 8,\n              borderRadius: 12,\n              background: '#f5f2fd',\n              padding: 15,\n              fontSize: 14,\n              overflowX: 'auto'\n            },\n            children: sqlBlock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              border: 'none',\n              background: '#ede7fa',\n              borderRadius: 7,\n              padding: '3px 10px',\n              fontSize: 13,\n              color: '#5233c0',\n              cursor: 'pointer'\n            },\n            onClick: () => handleCopy(sqlBlock),\n            title: \"Copy SQL\",\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#444',\n              marginTop: 10,\n              fontSize: 14\n            },\n            children: msg.text.replace(/```sql[\\s\\S]*?```/i, '').trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    // 3. Clarified/confirmed NLQ in a distinct block (if \"clarifiedQuery\" is being shown)\n    if (typeof msg.text === \"string\" && (msg.text.toLowerCase().includes(\"is that correct\") || msg.text.toLowerCase().includes(\"is this correct\") || msg.text.toLowerCase().includes(\"ready to submit\") || msg.text.toLowerCase().includes(\"should i send\") || msg.text.toLowerCase().includes(\"can i send\"))) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assistant-output-block\",\n        style: {\n          marginBottom: 6\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Default: plain or markdown split by lines\n    return (msg.text || \"\").split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: line\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Suggestion button microinteraction\n  const handleSuggestionClick = (s, i, e) => {\n    setClickedIndex(i);\n    setTimeout(() => setClickedIndex(null), 220);\n    handleSendMessage(s);\n  };\n\n  // Main render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggler modern-toggler\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Toggle chatbot\",\n      style: {\n        position: 'fixed',\n        right: '20px',\n        bottom: '20px',\n        zIndex: 10000\n      },\n      children: isOpen ? '✖' : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ChatbotIcon,\n        alt: \"Chatbot\",\n        style: {\n          width: 48,\n          height: 48\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot modern-chatbot` + (darkMode ? ' dark-mode' : '') + (isExpanded ? ' expanded' : ' collapsed'),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"header-title\",\n          children: [\"Field Insights\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header-title-gradient\",\n            children: \" Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleTheme,\n              title: \"Toggle theme\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Toggle theme\",\n              children: darkMode ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"5\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                  stroke: \"#7c3aed\",\n                  strokeWidth: \"2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"2\",\n                    x2: \"12\",\n                    y2: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"12\",\n                    y1: \"19\",\n                    x2: \"12\",\n                    y2: \"22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"4.22\",\n                    x2: \"6.34\",\n                    y2: \"6.34\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"17.66\",\n                    x2: \"19.78\",\n                    y2: \"19.78\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"2\",\n                    y1: \"12\",\n                    x2: \"5\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"19\",\n                    y1: \"12\",\n                    x2: \"22\",\n                    y2: \"12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"4.22\",\n                    y1: \"19.78\",\n                    x2: \"6.34\",\n                    y2: \"17.66\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: \"17.66\",\n                    y1: \"6.34\",\n                    x2: \"19.78\",\n                    y2: \"4.22\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\",\n                  fill: \"#7c3aed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                randomizeSuggestions();\n                setMessages([{\n                  role: 'assistant',\n                  text: 'Hello 👋! How may I assist you?'\n                }]);\n                localStorage.removeItem('chatMessages');\n                setFeedback({});\n              },\n              title: \"Clear chat\",\n              className: \"header-action-btn\",\n              \"aria-label\": \"Clear chat\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsExpanded(prev => !prev),\n              title: isExpanded ? 'Collapse window' : 'Expand window',\n              className: \"header-action-btn\",\n              \"aria-label\": isExpanded ? 'Collapse window' : 'Expand window',\n              children: isExpanded ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"8 3 3 3 3 8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"3\",\n                  x2: \"10\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"16 21 21 21 21 16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"21\",\n                  x2: \"14\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"25\",\n                height: \"25\",\n                fill: \"none\",\n                stroke: \"#7c3aed\",\n                strokeWidth: \"2.1\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"15 3 21 3 21 9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"21\",\n                  y1: \"3\",\n                  x2: \"14\",\n                  y2: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"9 21 3 21 3 15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                  x1: \"3\",\n                  y1: \"21\",\n                  x2: \"10\",\n                  y2: \"14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chatbox\",\n        ref: chatRef,\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`,\n          style: {\n            justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-bubble ${msg.role}`,\n            children: renderChatBubbleContent(msg)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 17\n          }, this), msg.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-row\",\n            children: [feedback[idx] === undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'up'),\n                  \"aria-label\": \"Thumbs up\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                text: \"Mark as not helpful\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"feedback-btn\",\n                  onClick: () => handleFeedback(idx, 'down'),\n                  \"aria-label\": \"Thumbs down\",\n                  tabIndex: 0,\n                  children: \"\\uD83D\\uDC4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true), feedback[idx] === 'up' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as helpful!\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected up\",\n                \"aria-label\": \"Thumbs up\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 23\n            }, this), feedback[idx] === 'down' && /*#__PURE__*/_jsxDEV(Tooltip, {\n              text: \"Marked as not helpful\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"feedback-btn selected down\",\n                \"aria-label\": \"Thumbs down\",\n                tabIndex: 0,\n                children: \"\\uD83D\\uDC4E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 15\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chat incoming\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bubble assistant\",\n            children: /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 11\n      }, this), awaitingConfirm && clarifyMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clarify-confirm-box\",\n        style: {\n          textAlign: \"center\",\n          margin: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleConfirmSend,\n          children: \"\\u2705 Yes, send to Snowflake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: () => {\n            setAwaitingConfirm(false);\n            setClarifyMode(true);\n          },\n          style: {\n            marginLeft: 8\n          },\n          children: \"\\u274C No, I want to change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions\",\n        style: {\n          position: \"relative\"\n        },\n        children: [visibleSuggestions.map((s, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleSuggestionClick(s, i, e),\n          className: `suggestion-button${clickedIndex === i ? ' clicked' : ''}`,\n          children: s\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 15\n        }, this)), !isExpanded && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"suggestion-arrow right\",\n          \"aria-label\": \"Next suggestions\",\n          onClick: () => {\n            const max = HARDCODED_SUGGESTIONS.length;\n            setSuggestionIndex(prev => (prev + 1) % max);\n            localStorage.setItem(\"suggestionIndex\", ((suggestionIndex + 1) % max).toString());\n          },\n          style: {\n            border: \"none\",\n            background: \"none\",\n            cursor: \"pointer\",\n            fontSize: 20,\n            marginLeft: 7,\n            color: \"#7c3aed\",\n            alignSelf: \"center\",\n            height: 28,\n            width: 28\n          },\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: inputRef,\n          placeholder: \"Ask me anything...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input),\n          rows: 1,\n          className: \"chat-input-textarea\",\n          style: {\n            overflow: 'hidden',\n            resize: 'none'\n          },\n          disabled: isTyping || awaitingConfirm && clarifyMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSendMessage(input),\n          title: \"Send message\",\n          className: `send-button${input.trim() ? \" has-text\" : \"\"}`,\n          disabled: isTyping || awaitingConfirm && clarifyMode,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            height: \"22\",\n            width: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            style: {\n              display: \"block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M4 20L20 12L4 4V10L16 12L4 14V20Z\",\n              fill: \"currentColor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 11\n      }, this), toast.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toast toast-${toast.type}`,\n        onClick: () => setToast(t => ({\n          ...t,\n          visible: false\n        })),\n        style: {\n          cursor: 'pointer'\n        },\n        children: toast.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chatbot-footer\",\n        children: [\"Powered by \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ZSIcon,\n          alt: \"ZS Associates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"FJoUgtwvSiLClxn+wJK8onRsKAI=\");\n_c3 = ChatBot;\nexport default ChatBot;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TypingIndicator\");\n$RefreshReg$(_c2, \"Tooltip\");\n$RefreshReg$(_c3, \"ChatBot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotIcon","ZSIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","HARDCODED_ANSWERS","HARDCODED_SUGGESTIONS","GENERIC_GREETINGS","isGreeting","text","cleaned","trim","toLowerCase","some","g","startsWith","formatSnowflakeResponse","responseText","json","JSON","parse","columns","resultSetMetaData","rowType","map","col","name","rowtype","data","Array","isArray","length","type","error","value","code","message","includes","isClarificationNeeded","clarificationPhrases","p","isReadyToSend","extractSQLBlock","match","TypingIndicator","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Tooltip","_c2","ChatBot","_s","messages","setMessages","saved","localStorage","getItem","role","feedback","setFeedback","suggestionIndex","setSuggestionIndex","stored","parseInt","input","setInput","isOpen","setIsOpen","darkMode","setDarkMode","isExpanded","setIsExpanded","toast","setToast","visible","clickedIndex","setClickedIndex","isTyping","setIsTyping","clarifyMode","setClarifyMode","clarifyHistory","setClarifyHistory","awaitingConfirm","setAwaitingConfirm","clarifiedQuery","setClarifiedQuery","chatRef","inputRef","randomizeSuggestions","newIndex","Math","floor","random","setItem","toString","numSuggestions","visibleSuggestions","fill","_","i","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","scrollLeft","timer","setTimeout","t","clearTimeout","showToast","msg","handleSendMessage","userMessage","greetingResponse","updatedMessages","stringify","matchedKey","Object","keys","find","k","hardcodedAnswer","newHistory","content","response","fetch","method","headers","body","conversationHistory","aiText","newMessages","handleConfirmSend","sql","statement","formatted","handleFeedback","idx","prev","toggleTheme","handleCopy","navigator","clipboard","writeText","renderChatBubbleContent","obj","h","colSpan","style","textAlign","color","row","ridx","cell","cidx","whiteSpace","fontFamily","undefined","parsed","paddingLeft","margin","item","fontWeight","sqlBlock","position","marginBottom","borderRadius","background","padding","fontSize","overflowX","right","border","cursor","onClick","title","marginTop","replace","split","line","handleSuggestionClick","s","e","minHeight","bottom","zIndex","src","alt","width","height","viewBox","cx","cy","r","stroke","strokeWidth","x1","y1","x2","y2","d","removeItem","strokeLinecap","strokeLinejoin","points","ref","justifyContent","tabIndex","marginLeft","max","alignSelf","placeholder","onChange","target","onKeyDown","key","shiftKey","rows","overflow","resize","disabled","display","_c3","$RefreshReg$"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// === Your hardcoded answers and suggestions ===\nconst HARDCODED_ANSWERS = {\n  \"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n  \"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n  \"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n  \"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n  \"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n  \"what is mkt % lis?\": \"Mkt % LIS in the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE , LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n  \"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n  \"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\",\n  \"are any physicians' sales dropped at a geo level?\": \"PDRP stands for Prescriber Data Restriction Program. Any prescriber who opts into the PDRP has their sales reported as zero. Sales from prescribers who have opted into the PDRP are included in the geography aggregation. If a geographic area has fewer than three actual PDRP participants, additional prescribers are randomly masked to simulate actual PDRP participation. Any prescriber masked as a PDRP in the R4W period remains masked for all other time periods.\"\n};\n\nconst HARDCODED_SUGGESTIONS = [\n  \"Which universes do we show in Accounts calculation?\",\n  \"Where can I find TRX Sales trends overtime?\",\n  \"Where can I find top 10 Gainer Prescriber over time?\",\n  \"What is Formulary Status?\",\n  \"What are the number of current monthly suggestion KPIs?\",\n  \"Which dossier gives a detailed analysis about the Payors?\",\n  \"Where can I find explanations about different KPIs?\",\n  \"What is MKT % LIS?\",\n  \"Are any physicians' sales dropped at a geo level?\"\n];\n\nconst GENERIC_GREETINGS = [\n  \"hi\", \"hello\", \"hey\", \"how are you\", \"good morning\", \"good afternoon\", \"good evening\",\n  \"hiya\", \"yo\", \"hii\", \"hello there\", \"hey there\", \"hi there\"\n];\n\nfunction isGreeting(text) {\n  const cleaned = text.trim().toLowerCase();\n  return GENERIC_GREETINGS.some(g => cleaned === g || cleaned.startsWith(g + ' '));\n}\n\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    let json = typeof responseText === 'string' ? JSON.parse(responseText) : responseText;\n    const columns =\n      (json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name)) ||\n      (json.rowType && json.rowType.map(col => col.name)) ||\n      (json.rowtype && json.rowtype.map(col => col.name)) ||\n      (json.columns && json.columns.map(col => col.name));\n    const data = json.data;\n    if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n      return {\n        type: \"table\",\n        columns,\n        data\n      };\n    }\n    if (json.error) return { type: \"error\", value: \"❌ Error: \" + json.error };\n    if (\n      json.code &&\n      json.code !== \"000000\" &&\n      (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))\n    ) {\n      return { type: \"error\", value: `❌ Error: ${json.code} - ${json.message}` };\n    }\n    if (json.message) return { type: \"output\", value: json.message };\n    return { type: \"output\", value: \"No data found.\" };\n  } catch {\n    return { type: \"error\", value: responseText || \"No response from backend.\" };\n  }\n}\n\nfunction isClarificationNeeded(text) {\n  if (!text) return false;\n  const clarificationPhrases = [\n    \"i need some additional information\",\n    \"please specify\",\n    \"could you clarify\",\n    \"missing information\",\n    \"can you clarify\",\n    \"please provide\"\n  ];\n  return clarificationPhrases.some(p => text.toLowerCase().includes(p));\n}\n\nfunction isReadyToSend(text) {\n  if (!text) return false;\n  return (\n    text.toLowerCase().includes(\"is that correct\") ||\n    text.toLowerCase().includes(\"is this correct\") ||\n    text.toLowerCase().includes(\"ready to submit\") ||\n    text.toLowerCase().includes(\"should i send\") ||\n    text.toLowerCase().includes(\"can i send\")\n  );\n}\n\nfunction extractSQLBlock(text) {\n  // Extract SQL/Code blocks (Markdown triple backtick or ```sql ... ```)\n  const match = text.match(/```sql\\s*([\\s\\S]*?)```/i);\n  return match ? match[1].trim() : null;\n}\n\n// --- Typing Indicator Component ---\nfunction TypingIndicator() {\n  return (\n    <span className=\"typing-indicator\">\n      <span></span><span></span><span></span>\n    </span>\n  );\n}\n\n// Tooltip helper\nconst Tooltip = ({ children, text }) => (\n  <span className=\"feedback-tooltip\">\n    {children}\n    <span className=\"feedback-tooltiptext\">{text}</span>\n  </span>\n);\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }];\n  });\n\n  const [feedback, setFeedback] = useState({});\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState({ message: '', type: 'info', visible: false });\n  const [clickedIndex, setClickedIndex] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n\n  // --- Clarification state ---\n  const [clarifyMode, setClarifyMode] = useState(false);\n  const [clarifyHistory, setClarifyHistory] = useState([]);\n  const [awaitingConfirm, setAwaitingConfirm] = useState(false);\n  const [clarifiedQuery, setClarifiedQuery] = useState(\"\");\n\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Suggestion randomizer for clear chat\n  const randomizeSuggestions = () => {\n    let newIndex = Math.floor(Math.random() * HARDCODED_SUGGESTIONS.length);\n    if (HARDCODED_SUGGESTIONS.length > 1 && newIndex === suggestionIndex) {\n      newIndex = (newIndex + 1) % HARDCODED_SUGGESTIONS.length;\n    }\n    setSuggestionIndex(newIndex);\n    localStorage.setItem('suggestionIndex', newIndex.toString());\n  };\n\n  // 2 or 4 suggestions based on expansion\n  const numSuggestions = isExpanded ? 4 : 2;\n  const visibleSuggestions = Array(numSuggestions)\n    .fill(0)\n    .map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n\n  // Scroll chat to bottom on update\n  useEffect(() => {\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\n  }, [messages, isTyping, isOpen, isExpanded]);\n\n  // Prevent input scrolling\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.scrollLeft = inputRef.current.value.length * 8;\n    }\n  }, [input]);\n\n  // Auto-hide toast\n  useEffect(() => {\n    if (toast.visible) {\n      const timer = setTimeout(() => {\n        setToast(t => ({ ...t, visible: false }));\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [toast.visible]);\n\n  const showToast = (msg, type) => {\n    setToast({ message: msg, type: type, visible: true });\n  };\n\n  // --- CLARIFICATION LOOP LOGIC ---\n  const handleSendMessage = async (userMessage) => {\n    if (!userMessage.trim()) return;\n    setInput('');\n    setIsTyping(true);\n\n    // HARDCODED greetings & answers (for instant, no API)\n    if (isGreeting(userMessage)) {\n      const greetingResponse =\n        \"Hello! 👋 How can I assist you with your field insights or business data today?\";\n      setTimeout(() => {\n        setIsTyping(false);\n        const updatedMessages = [...messages, { role: 'user', text: userMessage }, { role: 'assistant', text: greetingResponse }];\n        setMessages(updatedMessages);\n        localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      }, 700);\n      return;\n    }\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(k => cleaned.includes(k));\n    if (matchedKey) {\n      const hardcodedAnswer = HARDCODED_ANSWERS[matchedKey];\n      setTimeout(() => {\n        setIsTyping(false);\n        const updatedMessages = [...messages, { role: 'user', text: userMessage }, { role: 'assistant', text: hardcodedAnswer }];\n        setMessages(updatedMessages);\n        localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      }, 650);\n      return;\n    }\n\n    // --- CLARIFICATION FLOW ---\n    if (clarifyMode) {\n      const newHistory = [\n        ...clarifyHistory,\n        { role: \"user\", content: userMessage }\n      ];\n\n      const response = await fetch('http://localhost:4000/api/clarify', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userMessage,\n          conversationHistory: newHistory\n        })\n      });\n      const { response: aiText } = await response.json();\n\n      setIsTyping(false);\n\n      const newMessages = [\n        ...messages,\n        { role: \"user\", text: userMessage },\n        { role: \"assistant\", text: aiText }\n      ];\n      setMessages(newMessages);\n      setClarifyHistory([\n        ...newHistory,\n        { role: \"assistant\", content: aiText }\n      ]);\n      localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n\n      if (isReadyToSend(aiText)) {\n        setAwaitingConfirm(true);\n        setClarifiedQuery(aiText);\n      }\n      return;\n    }\n\n    // --- INITIAL MESSAGE TO CLARIFICATION ENDPOINT ---\n    const response = await fetch('http://localhost:4000/api/clarify', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userMessage, conversationHistory: [] })\n    });\n    const { response: aiText } = await response.json();\n\n    setIsTyping(false);\n    let newMessages = [...messages, { role: 'user', text: userMessage }, { role: 'assistant', text: aiText }];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setClarifyHistory([{ role: \"user\", content: userMessage }, { role: \"assistant\", content: aiText }]);\n\n    if (isClarificationNeeded(aiText)) {\n      setClarifyMode(true);\n    } else if (isReadyToSend(aiText)) {\n      setAwaitingConfirm(true);\n      setClarifiedQuery(aiText);\n    } else {\n      setClarifyMode(false);\n    }\n  };\n\n  // --- SEND FINAL NLQ TO SNOWFLAKE ---\n  const handleConfirmSend = async () => {\n    setIsTyping(true);\n    setAwaitingConfirm(false);\n    setClarifyMode(false);\n\n    // Try to extract SQL block for sending to Snowflake\n    const sql = extractSQLBlock(clarifiedQuery) || clarifiedQuery;\n\n    let body = { statement: sql };\n    const response = await fetch('http://localhost:4000/api/snowflake', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(body)\n    });\n    const responseText = await response.text();\n    const formatted = formatSnowflakeResponse(responseText);\n\n    setIsTyping(false);\n    const newMessages = [\n      ...messages,\n      { role: \"assistant\", text: \"Sending clarified query to report system...\" },\n      { role: \"assistant\", text: formatted }\n    ];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setClarifiedQuery(\"\");\n    setClarifyHistory([]);\n  };\n\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({ ...prev, [idx]: type }));\n    showToast(type === \"up\" ? \"Marked as helpful!\" : \"Marked as not helpful!\", type === \"up\" ? \"success\" : \"error\");\n  };\n\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  // --- Helper for copying SQL/code blocks ---\n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text);\n    showToast('Copied to clipboard!', 'success');\n  };\n\n  // Render assistant output with enhanced code/clarification block\n  const renderChatBubbleContent = (msg) => {\n    // 1. Render Snowflake tables\n    if (typeof msg.text === \"object\" && msg.text !== null) {\n      const obj = msg.text;\n      if (obj.type === \"table\") {\n        return (\n          <table className=\"snowflake-table\">\n            <thead>\n              <tr>\n                {obj.columns.map((h, i) => <th key={i}>{h}</th>)}\n              </tr>\n            </thead>\n            <tbody>\n              {obj.data.length === 0 ? (\n                <tr>\n                  <td colSpan={obj.columns.length} style={{ textAlign: 'center', color: '#888' }}>(no results)</td>\n                </tr>\n              ) : obj.data.map((row, ridx) => (\n                <tr key={ridx}>\n                  {row.map((cell, cidx) => (\n                    <td key={cidx} style={{\n                      whiteSpace: 'pre-wrap',\n                      fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                    }}>\n                      {(() => {\n                        try {\n                          if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                            const parsed = JSON.parse(cell);\n                            if (Array.isArray(parsed)) {\n                              return (\n                                <ul style={{ paddingLeft: '18px', margin: 0 }}>\n                                  {parsed.map((item, idx) => <li key={idx}>{item}</li>)}\n                                </ul>\n                              );\n                            }\n                            if (typeof parsed === 'object') {\n                              return <pre>{JSON.stringify(parsed, null, 2)}</pre>;\n                            }\n                          }\n                          return cell;\n                        } catch {\n                          return cell;\n                        }\n                      })()}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        );\n      }\n      if (obj.type === \"output\") {\n        return <div>{obj.value}</div>;\n      }\n      if (obj.type === \"error\") {\n        return <span style={{ color: \"#b91c1c\", fontWeight: 500 }}>{obj.value}</span>;\n      }\n      return <pre>{JSON.stringify(obj.value, null, 2)}</pre>;\n    }\n\n    // 2. Render SQL or code blocks in a highlighted box with copy button\n    if (typeof msg.text === \"string\") {\n      const sqlBlock = extractSQLBlock(msg.text);\n      if (sqlBlock) {\n        return (\n          <div className=\"assistant-output-block\" style={{ position: 'relative', marginBottom: 6 }}>\n            <div style={{ fontWeight: 600, marginBottom: 8 }}>Snowflake SQL Query:</div>\n            <pre className=\"assistant-sql-block\" style={{\n              marginBottom: 8,\n              borderRadius: 12,\n              background: '#f5f2fd',\n              padding: 15,\n              fontSize: 14,\n              overflowX: 'auto'\n            }}>{sqlBlock}</pre>\n            <button\n              style={{\n                position: 'absolute',\n                top: 8,\n                right: 8,\n                border: 'none',\n                background: '#ede7fa',\n                borderRadius: 7,\n                padding: '3px 10px',\n                fontSize: 13,\n                color: '#5233c0',\n                cursor: 'pointer'\n              }}\n              onClick={() => handleCopy(sqlBlock)}\n              title=\"Copy SQL\"\n            >\n              Copy\n            </button>\n            {/* Show any explanatory text after the SQL */}\n            <div style={{ color: '#444', marginTop: 10, fontSize: 14 }}>\n              {msg.text.replace(/```sql[\\s\\S]*?```/i, '').trim()}\n            </div>\n          </div>\n        );\n      }\n    }\n\n    // 3. Clarified/confirmed NLQ in a distinct block (if \"clarifiedQuery\" is being shown)\n    if (\n      typeof msg.text === \"string\" &&\n      (msg.text.toLowerCase().includes(\"is that correct\") ||\n        msg.text.toLowerCase().includes(\"is this correct\") ||\n        msg.text.toLowerCase().includes(\"ready to submit\") ||\n        msg.text.toLowerCase().includes(\"should i send\") ||\n        msg.text.toLowerCase().includes(\"can i send\"))\n    ) {\n      return (\n        <div className=\"assistant-output-block\" style={{ marginBottom: 6 }}>\n          <div>{msg.text}</div>\n        </div>\n      );\n    }\n\n    // Default: plain or markdown split by lines\n    return (msg.text || \"\").split('\\n').map((line, i) => (\n      <div key={i}>{line}</div>\n    ));\n  };\n\n  // Suggestion button microinteraction\n  const handleSuggestionClick = (s, i, e) => {\n    setClickedIndex(i);\n    setTimeout(() => setClickedIndex(null), 220);\n    handleSendMessage(s);\n  };\n\n  // Main render\n  return (\n    <div style={{ background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)', minHeight: '100vh' }}>\n      <button\n        className=\"chatbot-toggler modern-toggler\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Toggle chatbot\"\n        style={{ position: 'fixed', right: '20px', bottom: '20px', zIndex: 10000 }}>\n        {isOpen ? '✖' : <img src={ChatbotIcon} alt=\"Chatbot\" style={{ width: 48, height: 48 }} />}\n      </button>\n      {isOpen && (\n        <div\n          className={\n            `chatbot modern-chatbot` +\n            (darkMode ? ' dark-mode' : '') +\n            (isExpanded ? ' expanded' : ' collapsed')\n          }\n        >\n          <header className=\"chatbot-header\">\n            <span className=\"header-title\">\n              Field Insights<span className=\"header-title-gradient\"> Assistant</span>\n            </span>\n            <div className=\"header-controls\">\n              <div className=\"header-actions\">\n                {/* Theme toggle */}\n                <button onClick={toggleTheme} title=\"Toggle theme\" className=\"header-action-btn\" aria-label=\"Toggle theme\">\n                  {darkMode ? (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <circle cx=\"12\" cy=\"12\" r=\"5\" fill=\"#7c3aed\" />\n                      <g stroke=\"#7c3aed\" strokeWidth=\"2\">\n                        <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"5\" />\n                        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"22\" />\n                        <line x1=\"4.22\" y1=\"4.22\" x2=\"6.34\" y2=\"6.34\" />\n                        <line x1=\"17.66\" y1=\"17.66\" x2=\"19.78\" y2=\"19.78\" />\n                        <line x1=\"2\" y1=\"12\" x2=\"5\" y2=\"12\" />\n                        <line x1=\"19\" y1=\"12\" x2=\"22\" y2=\"12\" />\n                        <line x1=\"4.22\" y1=\"19.78\" x2=\"6.34\" y2=\"17.66\" />\n                        <line x1=\"17.66\" y1=\"6.34\" x2=\"19.78\" y2=\"4.22\" />\n                      </g>\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <path d=\"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\" fill=\"#7c3aed\" />\n                    </svg>\n                  )}\n                </button>\n                {/* Refresh/Clear + randomize suggestions */}\n                <button\n                  onClick={() => {\n                    randomizeSuggestions();\n                    setMessages([{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }]);\n                    localStorage.removeItem('chatMessages');\n                    setFeedback({});\n                  }}\n                  title=\"Clear chat\"\n                  className=\"header-action-btn\"\n                  aria-label=\"Clear chat\"\n                >\n                  <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                    <path d=\"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                  </svg>\n                </button>\n                {/* Expand/Collapse */}\n                <button\n                  onClick={() => setIsExpanded((prev) => !prev)}\n                  title={isExpanded ? 'Collapse window' : 'Expand window'}\n                  className=\"header-action-btn\"\n                  aria-label={isExpanded ? 'Collapse window' : 'Expand window'}\n                >\n                  {isExpanded ? (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"8 3 3 3 3 8\" />\n                      <line x1=\"3\" y1=\"3\" x2=\"10\" y2=\"10\" />\n                      <polyline points=\"16 21 21 21 21 16\" />\n                      <line x1=\"21\" y1=\"21\" x2=\"14\" y2=\"14\" />\n                    </svg>\n                  ) : (\n                    <svg width=\"25\" height=\"25\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"15 3 21 3 21 9\" />\n                      <line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\" />\n                      <polyline points=\"9 21 3 21 3 15\" />\n                      <line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n            </div>\n          </header>\n          <ul className=\"chatbox\" ref={chatRef}>\n            {messages.map((msg, idx) => (\n              <li\n                key={idx}\n                className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}\n                style={{ justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start' }}\n              >\n                <div className={`chat-bubble ${msg.role}`}>\n                  {renderChatBubbleContent(msg)}\n                </div>\n                {msg.role === 'assistant' && (\n                  <div className=\"feedback-row\">\n                    {feedback[idx] === undefined && (\n                      <>\n                        <Tooltip text=\"Mark as helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'up')}\n                            aria-label=\"Thumbs up\"\n                            tabIndex={0}\n                          >👍</button>\n                        </Tooltip>\n                        <Tooltip text=\"Mark as not helpful\">\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'down')}\n                            aria-label=\"Thumbs down\"\n                            tabIndex={0}\n                          >👎</button>\n                        </Tooltip>\n                      </>\n                    )}\n                    {feedback[idx] === 'up' && (\n                      <Tooltip text=\"Marked as helpful!\">\n                        <button className=\"feedback-btn selected up\" aria-label=\"Thumbs up\" tabIndex={0}>👍</button>\n                      </Tooltip>\n                    )}\n                    {feedback[idx] === 'down' && (\n                      <Tooltip text=\"Marked as not helpful\">\n                        <button className=\"feedback-btn selected down\" aria-label=\"Thumbs down\" tabIndex={0}>👎</button>\n                      </Tooltip>\n                    )}\n                  </div>\n                )}\n              </li>\n            ))}\n            {/* Typing indicator */}\n            {isTyping && (\n              <li className=\"chat incoming\">\n                <div className=\"chat-bubble assistant\">\n                  <TypingIndicator />\n                </div>\n              </li>\n            )}\n          </ul>\n          {/* Clarification confirmation box */}\n          {awaitingConfirm && clarifyMode && (\n            <div className=\"clarify-confirm-box\" style={{ textAlign: \"center\", margin: 10 }}>\n              <button className=\"send-button\" onClick={handleConfirmSend}>\n                ✅ Yes, send to Snowflake\n              </button>\n              <button\n                className=\"send-button\"\n                onClick={() => {\n                  setAwaitingConfirm(false);\n                  setClarifyMode(true);\n                }}\n                style={{ marginLeft: 8 }}\n              >\n                ❌ No, I want to change\n              </button>\n            </div>\n          )}\n          {/* Suggestions panel now at the bottom */}\n          <div className=\"suggestions\" style={{ position: \"relative\" }}>\n            {visibleSuggestions.map((s, i) => (\n              <button\n                key={i}\n                onClick={e => handleSuggestionClick(s, i, e)}\n                className={`suggestion-button${clickedIndex === i ? ' clicked' : ''}`}\n              >\n                {s}\n              </button>\n            ))}\n            {!isExpanded &&\n              <button\n                className=\"suggestion-arrow right\"\n                aria-label=\"Next suggestions\"\n                onClick={() => {\n                  const max = HARDCODED_SUGGESTIONS.length;\n                  setSuggestionIndex((prev) => (prev + 1) % max);\n                  localStorage.setItem(\n                    \"suggestionIndex\",\n                    ((suggestionIndex + 1) % max).toString()\n                  );\n                }}\n                style={{\n                  border: \"none\",\n                  background: \"none\",\n                  cursor: \"pointer\",\n                  fontSize: 20,\n                  marginLeft: 7,\n                  color: \"#7c3aed\",\n                  alignSelf: \"center\",\n                  height: 28,\n                  width: 28\n                }}\n              >&#8594;</button>\n            }\n          </div>\n          <div className=\"chat-input\">\n            <textarea\n              ref={inputRef}\n              placeholder=\"Ask me anything...\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input)}\n              rows={1}\n              className=\"chat-input-textarea\"\n              style={{ overflow: 'hidden', resize: 'none' }}\n              disabled={isTyping || (awaitingConfirm && clarifyMode)}\n            />\n            <button\n              onClick={() => handleSendMessage(input)}\n              title=\"Send message\"\n              className={`send-button${input.trim() ? \" has-text\" : \"\"}`}\n              disabled={isTyping || (awaitingConfirm && clarifyMode)}\n            >\n              <svg height=\"22\" width=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" style={{ display: \"block\" }}>\n                <path d=\"M4 20L20 12L4 4V10L16 12L4 14V20Z\" fill=\"currentColor\" />\n              </svg>\n            </button>\n          </div>\n          {/* Toast notification inside chatbox */}\n          {toast.visible && (\n            <div\n              className={`toast toast-${toast.type}`}\n              onClick={() => setToast(t => ({ ...t, visible: false }))}\n              style={{ cursor: 'pointer' }}\n            >\n              {toast.message}\n            </div>\n          )}\n          <footer className=\"chatbot-footer\">\n            Powered by <img src={ZSIcon} alt=\"ZS Associates\" />\n          </footer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}