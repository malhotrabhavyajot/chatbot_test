{"ast":null,"code":"import _objectSpread from\"/workspaces/chatbot_test/snowflake-react-chat/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useRef,useState}from'react';import'../styles/style.css';import ChatbotIcon from'../assets/chatbot-toggler.png';import ZSIcon from'../assets/ZS_Associates.png';// Hardcoded answers (business questions)\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const HARDCODED_ANSWERS={\"where can i find top 10 gainer prescriber over time?\":\"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\"what is formulary status?\":\"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\"what are the number of current monthly suggestion kpi?\":\"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\"which dossier gives a detailed analysis about the payors?\":\"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\"where can i find explanations about different kpis?\":\"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\"what is mkt % lis?\":\"Mkt % LIS in the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE , LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\"which universes do we show in accounts calculation?\":\"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\"where can i find trx sales trends overtime?\":\"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\"};const HARDCODED_SUGGESTIONS=[\"Where can I find top 10 Gainer Prescriber over time?\",\"What is Formulary Status?\",\"What are the Number of Current Monthly suggestion KPI?\",\"Which dossier gives a detailed analysis about the Payors?\",\"Where can I find explanations about different KPIS?\",\"What is Mkt % LIS?\",\"Which universes do we show in Accounts calculation?\",\"Where can I find TRX Sales trends overtime?\"];// Helper: Format response for plain text fallback (errors, etc)\nfunction formatSnowflakeResponse(responseText){try{const json=JSON.parse(responseText);if(json.error)return\"❌ Error: \"+json.error;if(json.code&&json.code!==\"000000\"&&(!json.message||!json.message.toLowerCase().includes(\"executed successfully\"))){return\"\\u274C Error: \".concat(json.code,\" - \").concat(json.message);}if(json.message)return json.message;return\"No data found.\";}catch(_unused){return responseText||\"No response from Snowflake.\";}}const ChatBot=()=>{const[messages,setMessages]=useState(()=>{const saved=localStorage.getItem('chatMessages');if(saved)return JSON.parse(saved);return[{role:'assistant',text:'Hello 👋! How may I assist you?'}];});const[feedback,setFeedback]=useState({});// Suggestion index for rotating hardcoded suggestions\nconst[suggestionIndex,setSuggestionIndex]=useState(()=>{const stored=localStorage.getItem('suggestionIndex');return stored?parseInt(stored,10):0;});const[input,setInput]=useState('');const[isOpen,setIsOpen]=useState(false);const[darkMode,setDarkMode]=useState(false);const[isExpanded,setIsExpanded]=useState(false);const[toast,setToast]=useState('');const chatRef=useRef();const inputRef=useRef();// Only show 4 rotating suggestions at a time\nconst visibleSuggestions=Array(4).fill(0).map((_,i)=>HARDCODED_SUGGESTIONS[(suggestionIndex+i)%HARDCODED_SUGGESTIONS.length]);useEffect(()=>{var _chatRef$current;(_chatRef$current=chatRef.current)===null||_chatRef$current===void 0?void 0:_chatRef$current.scrollTo({top:chatRef.current.scrollHeight,behavior:'smooth'});},[messages]);// Send user message to backend and update chat\nconst handleSendMessage=async userMessage=>{if(!userMessage.trim())return;const newMessages=[...messages,{role:'user',text:userMessage}];setMessages(newMessages);localStorage.setItem('chatMessages',JSON.stringify(newMessages));setInput('');// HARDCODED ANSWER CHECK\nconst cleaned=userMessage.trim().toLowerCase();const matchedKey=Object.keys(HARDCODED_ANSWERS).find(k=>cleaned.includes(k));if(matchedKey){const hardcodedAnswer=HARDCODED_ANSWERS[matchedKey];const updatedMessages=[...newMessages,{role:'assistant',text:hardcodedAnswer}];setMessages(updatedMessages);localStorage.setItem('chatMessages',JSON.stringify(updatedMessages));return;}// Show loading message\nconst pendingList=[...newMessages,{role:'assistant',text:'⏳ Querying Snowflake...'}];setMessages(pendingList);localStorage.setItem('chatMessages',JSON.stringify(pendingList));// Send to Node proxy backend\ntry{const response=await fetch('http://localhost:4000/api/snowflake',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({statement:userMessage})});const responseText=await response.text();// Save BOTH the pretty text and raw JSON in the message\nconst formatted=formatSnowflakeResponse(responseText);const updatedMessages=[...newMessages,{role:'assistant',text:formatted,rawJson:responseText}];setMessages(updatedMessages);localStorage.setItem('chatMessages',JSON.stringify(updatedMessages));}catch(err){const formatted=\"⚠️ Unable to connect to backend.\";const updatedMessages=[...newMessages,{role:'assistant',text:formatted}];setMessages(updatedMessages);localStorage.setItem('chatMessages',JSON.stringify(updatedMessages));}};// Feedback handlers\nconst handleFeedback=(idx,type)=>{setFeedback(prev=>_objectSpread(_objectSpread({},prev),{},{[idx]:type}));setToast('Thanks for your feedback!');setTimeout(()=>setToast(''),1100);};const toggleTheme=()=>setDarkMode(prev=>!prev);// Core chat bubble renderer\nconst renderChatBubbleContent=msg=>{// Try to render as HTML table if possible (from rawJson)\nif(msg.rawJson){try{const json=JSON.parse(msg.rawJson);const columns=json.resultSetMetaData&&json.resultSetMetaData.rowType&&json.resultSetMetaData.rowType.map(col=>col.name)||json.rowType&&json.rowType.map(col=>col.name)||json.rowtype&&json.rowtype.map(col=>col.name)||json.columns&&json.columns.map(col=>col.name);const data=json.data;if(Array.isArray(columns)&&columns.length>0&&Array.isArray(data)){return/*#__PURE__*/_jsxs(\"table\",{className:\"snowflake-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:columns.map((h,i)=>/*#__PURE__*/_jsx(\"th\",{children:h},i))})}),/*#__PURE__*/_jsx(\"tbody\",{children:data.length===0?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:columns.length,style:{textAlign:'center',color:'#888'},children:\"(no results)\"})}):data.map((row,ridx)=>/*#__PURE__*/_jsx(\"tr\",{children:row.map((cell,cidx)=>/*#__PURE__*/_jsx(\"td\",{style:{whiteSpace:'pre-wrap',fontFamily:typeof cell===\"string\"&&cell.trim().startsWith('[')?\"monospace\":undefined},children:(()=>{try{if(typeof cell===\"string\"&&(cell.trim().startsWith('[')||cell.trim().startsWith('{'))){const parsed=JSON.parse(cell);if(Array.isArray(parsed)){return/*#__PURE__*/_jsx(\"ul\",{style:{paddingLeft:'18px',margin:0},children:parsed.map((item,idx)=>/*#__PURE__*/_jsx(\"li\",{children:item},idx))});}if(typeof parsed==='object'){return/*#__PURE__*/_jsx(\"pre\",{children:JSON.stringify(parsed,null,2)});}}return cell;}catch(_unused2){return cell;}})()},cidx))},ridx))})]});}}catch(_unused3){}}// Fallback: plain text (with newlines)\nreturn msg.text.split('\\n').map((line,i)=>/*#__PURE__*/_jsx(\"div\",{children:line},i));};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(to bottom right, #f7faff, #e2ecf4)',minHeight:'100vh'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"chatbot-toggler modern-toggler\",onClick:()=>setIsOpen(!isOpen),\"aria-label\":\"Toggle chatbot\",style:{position:'fixed',right:'20px',bottom:'20px',zIndex:10000},children:isOpen?'✖':/*#__PURE__*/_jsx(\"img\",{src:ChatbotIcon,alt:\"Chatbot\",style:{width:48,height:48}})}),isOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot modern-chatbot\"+(darkMode?' dark-mode':'')+(isExpanded?' expanded':' collapsed'),children:[/*#__PURE__*/_jsxs(\"header\",{className:\"chatbot-header\",children:[/*#__PURE__*/_jsxs(\"span\",{style:{fontWeight:600},children:[\"Field Insights \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#6b38fb'},children:\"Assistant\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:toggleTheme,title:\"Toggle theme\",className:\"header-action-btn\",\"aria-label\":\"Toggle theme\",children:darkMode?/*#__PURE__*/_jsxs(\"svg\",{width:\"23\",height:\"23\",viewBox:\"0 0 24 24\",fill:\"none\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"12\",cy:\"12\",r:\"5\",fill:\"#7c3aed\"}),/*#__PURE__*/_jsxs(\"g\",{stroke:\"#7c3aed\",strokeWidth:\"2\",children:[/*#__PURE__*/_jsx(\"line\",{x1:\"12\",y1:\"2\",x2:\"12\",y2:\"5\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"12\",y1:\"19\",x2:\"12\",y2:\"22\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"4.22\",y1:\"4.22\",x2:\"6.34\",y2:\"6.34\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"17.66\",y1:\"17.66\",x2:\"19.78\",y2:\"19.78\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"2\",y1:\"12\",x2:\"5\",y2:\"12\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"19\",y1:\"12\",x2:\"22\",y2:\"12\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"4.22\",y1:\"19.78\",x2:\"6.34\",y2:\"17.66\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"17.66\",y1:\"6.34\",x2:\"19.78\",y2:\"4.22\"})]})]}):/*#__PURE__*/_jsx(\"svg\",{width:\"23\",height:\"23\",viewBox:\"0 0 24 24\",fill:\"none\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\",fill:\"#7c3aed\"})})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{// Rotate suggestions\nconst newIndex=(suggestionIndex+4)%HARDCODED_SUGGESTIONS.length;setSuggestionIndex(newIndex);localStorage.setItem('suggestionIndex',newIndex.toString());setMessages([{role:'assistant',text:'Hello 👋! How may I assist you?'}]);localStorage.removeItem('chatMessages');setFeedback({});},title:\"Clear chat\",className:\"header-action-btn\",\"aria-label\":\"Clear chat\",children:/*#__PURE__*/_jsx(\"svg\",{width:\"23\",height:\"23\",fill:\"none\",stroke:\"#7c3aed\",strokeWidth:\"2.1\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\",strokeLinecap:\"round\",strokeLinejoin:\"round\"})})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsExpanded(prev=>!prev),title:isExpanded?'Collapse window':'Expand window',className:\"header-action-btn\",\"aria-label\":isExpanded?'Collapse window':'Expand window',children:isExpanded?/*#__PURE__*/_jsxs(\"svg\",{width:\"23\",height:\"23\",fill:\"none\",stroke:\"#7c3aed\",strokeWidth:\"2.1\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"polyline\",{points:\"8 3 3 3 3 8\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"3\",y1:\"3\",x2:\"10\",y2:\"10\"}),/*#__PURE__*/_jsx(\"polyline\",{points:\"16 21 21 21 21 16\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"21\",y1:\"21\",x2:\"14\",y2:\"14\"})]}):/*#__PURE__*/_jsxs(\"svg\",{width:\"23\",height:\"23\",fill:\"none\",stroke:\"#7c3aed\",strokeWidth:\"2.1\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"polyline\",{points:\"15 3 21 3 21 9\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"21\",y1:\"3\",x2:\"14\",y2:\"10\"}),/*#__PURE__*/_jsx(\"polyline\",{points:\"9 21 3 21 3 15\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"3\",y1:\"21\",x2:\"10\",y2:\"14\"})]})})]})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"chatbox\",ref:chatRef,children:messages.map((msg,idx)=>/*#__PURE__*/_jsxs(\"li\",{className:\"chat \".concat(msg.role==='user'?'outgoing':'incoming'),style:{justifyContent:msg.role==='user'?'flex-end':'flex-start',animation:'fadeIn 0.25s cubic-bezier(.36,1.7,.72,.97)'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-bubble \".concat(msg.role),style:{background:msg.role==='user'?'linear-gradient(95deg, #7c3aed 60%, #a78bfa 100%)':'linear-gradient(135deg, #f0f4ff, #e9e8fe)',color:msg.role==='user'?'#fff':'#23234a',borderTopRightRadius:msg.role==='user'?22:16,borderTopLeftRadius:msg.role==='assistant'?22:16,alignSelf:msg.role==='user'?'flex-end':'flex-start',position:'relative'},children:renderChatBubbleContent(msg)}),msg.role==='assistant'&&/*#__PURE__*/_jsxs(\"div\",{className:\"feedback-row\",children:[feedback[idx]===undefined&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"feedback-btn\",onClick:()=>handleFeedback(idx,'up'),\"aria-label\":\"Thumbs up\",children:\"\\uD83D\\uDC4D\"}),/*#__PURE__*/_jsx(\"button\",{className:\"feedback-btn\",onClick:()=>handleFeedback(idx,'down'),\"aria-label\":\"Thumbs down\",children:\"\\uD83D\\uDC4E\"})]}),feedback[idx]==='up'&&/*#__PURE__*/_jsx(\"button\",{className:\"feedback-btn selected\",\"aria-label\":\"Thumbs up\",children:\"\\uD83D\\uDC4D\"}),feedback[idx]==='down'&&/*#__PURE__*/_jsx(\"button\",{className:\"feedback-btn selected\",\"aria-label\":\"Thumbs down\",children:\"\\uD83D\\uDC4E\"})]})]},idx))}),/*#__PURE__*/_jsx(\"div\",{className:\"suggestions\",children:visibleSuggestions.map((s,i)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSendMessage(s),className:\"suggestion-button\",children:s},i))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"textarea\",{ref:inputRef,placeholder:\"Ask me anything...\",value:input,onChange:e=>setInput(e.target.value),onKeyDown:e=>e.key==='Enter'&&!e.shiftKey&&handleSendMessage(input),rows:2}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSendMessage(input),title:\"Send message\",className:\"send-button\",children:\"Send\"})]}),/*#__PURE__*/_jsxs(\"footer\",{className:\"chatbot-footer\",children:[\"Powered by \",/*#__PURE__*/_jsx(\"img\",{src:ZSIcon,alt:\"ZS Associates\"})]}),toast&&/*#__PURE__*/_jsx(\"div\",{className:\"toast\",children:toast})]})]})});};export default ChatBot;","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotIcon","ZSIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HARDCODED_ANSWERS","HARDCODED_SUGGESTIONS","formatSnowflakeResponse","responseText","json","JSON","parse","error","code","message","toLowerCase","includes","concat","_unused","ChatBot","messages","setMessages","saved","localStorage","getItem","role","text","feedback","setFeedback","suggestionIndex","setSuggestionIndex","stored","parseInt","input","setInput","isOpen","setIsOpen","darkMode","setDarkMode","isExpanded","setIsExpanded","toast","setToast","chatRef","inputRef","visibleSuggestions","Array","fill","map","_","i","length","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","handleSendMessage","userMessage","trim","newMessages","setItem","stringify","cleaned","matchedKey","Object","keys","find","k","hardcodedAnswer","updatedMessages","pendingList","response","fetch","method","headers","body","statement","formatted","rawJson","err","handleFeedback","idx","type","prev","_objectSpread","setTimeout","toggleTheme","renderChatBubbleContent","msg","columns","resultSetMetaData","rowType","col","name","rowtype","data","isArray","className","children","h","colSpan","style","textAlign","color","row","ridx","cell","cidx","whiteSpace","fontFamily","startsWith","undefined","parsed","paddingLeft","margin","item","_unused2","_unused3","split","line","background","minHeight","onClick","position","right","bottom","zIndex","src","alt","width","height","fontWeight","title","viewBox","cx","cy","r","stroke","strokeWidth","x1","y1","x2","y2","d","newIndex","toString","removeItem","strokeLinecap","strokeLinejoin","points","ref","justifyContent","animation","borderTopRightRadius","borderTopLeftRadius","alignSelf","s","placeholder","value","onChange","e","target","onKeyDown","key","shiftKey","rows"],"sources":["/workspaces/chatbot_test/snowflake-react-chat/src/components/ChatBot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/style.css';\nimport ChatbotIcon from '../assets/chatbot-toggler.png';\nimport ZSIcon from '../assets/ZS_Associates.png';\n\n// Hardcoded answers (business questions)\nconst HARDCODED_ANSWERS = {\n\"where can i find top 10 gainer prescriber over time?\": \"Top 10 Gainer Prescribers can be found in the Performance Dossier.\",\n\"what is formulary status?\": \"Formulary Status is the 'MMIT Pharmacy field which shows Preferred/Covered combined with PA/ST Restrictions.\",\n\"what are the number of current monthly suggestion kpi?\": \"It is the 'Count of monthly suggestions (Call and RTE) for a prescriber.\",\n\"which dossier gives a detailed analysis about the payors?\": \"You can find detailed analysis about Payor data in the Payor Highlights dossier.\",\n\"where can i find explanations about different kpis?\": \"Explanations and Calculation of each and every KPI can be found in the Glossary dossier.\",\n\"what is mkt % lis?\": \"Mkt % LIS in the Percentage of claims where claim type is 'PAID' and channel is 'Medicare' and 'Medicare D', and OPC = $0 - $12 and LIS patient flag = LIS-DE , LIS LTC, LIS-NON-DE, LIS-UNKNOWN for Rolling 3M.\",\n\"which universes do we show in accounts calculation?\": \"We show three universes Veeva Aligned, Call Plan/DMCP and a combined Veeva Aligned + Call Plan/DMCP universes.\",\n\"where can i find trx sales trends overtime?\": \"The sales trends for Retail and Non Retail sales can be found in the Performance Dossier.\"\n};\n\nconst HARDCODED_SUGGESTIONS = [\n\"Where can I find top 10 Gainer Prescriber over time?\",\n\"What is Formulary Status?\",\n\"What are the Number of Current Monthly suggestion KPI?\",\n\"Which dossier gives a detailed analysis about the Payors?\",\n\"Where can I find explanations about different KPIS?\",\n\"What is Mkt % LIS?\",\n\"Which universes do we show in Accounts calculation?\",\n\"Where can I find TRX Sales trends overtime?\"\n];\n\n// Helper: Format response for plain text fallback (errors, etc)\nfunction formatSnowflakeResponse(responseText) {\n  try {\n    const json = JSON.parse(responseText);\n\n    if (json.error) return \"❌ Error: \" + json.error;\n    if (\n      json.code &&\n      json.code !== \"000000\" &&\n      (!json.message || !json.message.toLowerCase().includes(\"executed successfully\"))\n    ) {\n      return `❌ Error: ${json.code} - ${json.message}`;\n    }\n    if (json.message) return json.message;\n    return \"No data found.\";\n  } catch {\n    return responseText || \"No response from Snowflake.\";\n  }\n}\n\nconst ChatBot = () => {\n  const [messages, setMessages] = useState(() => {\n    const saved = localStorage.getItem('chatMessages');\n    if (saved) return JSON.parse(saved);\n    return [{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }];\n  });\n\n  const [feedback, setFeedback] = useState({});\n  // Suggestion index for rotating hardcoded suggestions\n  const [suggestionIndex, setSuggestionIndex] = useState(() => {\n    const stored = localStorage.getItem('suggestionIndex');\n    return stored ? parseInt(stored, 10) : 0;\n  });\n\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [toast, setToast] = useState('');\n  const chatRef = useRef();\n  const inputRef = useRef();\n\n  // Only show 4 rotating suggestions at a time\n  const visibleSuggestions = Array(4)\n    .fill(0)\n    .map((_, i) => HARDCODED_SUGGESTIONS[(suggestionIndex + i) % HARDCODED_SUGGESTIONS.length]);\n\n  useEffect(() => {\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\n  }, [messages]);\n\n  // Send user message to backend and update chat\n  const handleSendMessage = async (userMessage) => {\n    if (!userMessage.trim()) return;\n    const newMessages = [...messages, { role: 'user', text: userMessage }];\n    setMessages(newMessages);\n    localStorage.setItem('chatMessages', JSON.stringify(newMessages));\n    setInput('');\n\n    // HARDCODED ANSWER CHECK\n    const cleaned = userMessage.trim().toLowerCase();\n    const matchedKey = Object.keys(HARDCODED_ANSWERS).find(\n      k => cleaned.includes(k)\n    );\n    if (matchedKey) {\n      const hardcodedAnswer = HARDCODED_ANSWERS[matchedKey];\n      const updatedMessages = [...newMessages, { role: 'assistant', text: hardcodedAnswer }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n      return;\n    }\n\n    // Show loading message\n    const pendingList = [...newMessages, { role: 'assistant', text: '⏳ Querying Snowflake...' }];\n    setMessages(pendingList);\n    localStorage.setItem('chatMessages', JSON.stringify(pendingList));\n\n    // Send to Node proxy backend\n    try {\n      const response = await fetch('http://localhost:4000/api/snowflake', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ statement: userMessage })\n      });\n      const responseText = await response.text();\n\n      // Save BOTH the pretty text and raw JSON in the message\n      const formatted = formatSnowflakeResponse(responseText);\n      const updatedMessages = [...newMessages, { role: 'assistant', text: formatted, rawJson: responseText }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    } catch (err) {\n      const formatted = \"⚠️ Unable to connect to backend.\";\n      const updatedMessages = [...newMessages, { role: 'assistant', text: formatted }];\n      setMessages(updatedMessages);\n      localStorage.setItem('chatMessages', JSON.stringify(updatedMessages));\n    }\n  };\n\n  // Feedback handlers\n  const handleFeedback = (idx, type) => {\n    setFeedback(prev => ({ ...prev, [idx]: type }));\n    setToast('Thanks for your feedback!');\n    setTimeout(() => setToast(''), 1100);\n  };\n\n  const toggleTheme = () => setDarkMode(prev => !prev);\n\n  // Core chat bubble renderer\n  const renderChatBubbleContent = (msg) => {\n    // Try to render as HTML table if possible (from rawJson)\n    if (msg.rawJson) {\n      try {\n        const json = JSON.parse(msg.rawJson);\n        const columns =\n          (json.resultSetMetaData && json.resultSetMetaData.rowType && json.resultSetMetaData.rowType.map(col => col.name)) ||\n          (json.rowType && json.rowType.map(col => col.name)) ||\n          (json.rowtype && json.rowtype.map(col => col.name)) ||\n          (json.columns && json.columns.map(col => col.name));\n        const data = json.data;\n        if (Array.isArray(columns) && columns.length > 0 && Array.isArray(data)) {\n          return (\n            <table className=\"snowflake-table\">\n              <thead>\n                <tr>\n                  {columns.map((h, i) => <th key={i}>{h}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {data.length === 0 ? (\n                  <tr><td colSpan={columns.length} style={{ textAlign: 'center', color: '#888' }}>(no results)</td></tr>\n                ) : data.map((row, ridx) => (\n                  <tr key={ridx}>\n                    {row.map((cell, cidx) => (\n                      <td key={cidx} style={{\n                        whiteSpace: 'pre-wrap',\n                        fontFamily: typeof cell === \"string\" && cell.trim().startsWith('[') ? \"monospace\" : undefined\n                      }}>\n                        {(() => {\n                          try {\n                            if (typeof cell === \"string\" && (cell.trim().startsWith('[') || cell.trim().startsWith('{'))) {\n                              const parsed = JSON.parse(cell);\n                              if (Array.isArray(parsed)) {\n                                return (\n                                  <ul style={{ paddingLeft: '18px', margin: 0 }}>\n                                    {parsed.map((item, idx) => <li key={idx}>{item}</li>)}\n                                  </ul>\n                                );\n                              }\n                              if (typeof parsed === 'object') {\n                                return <pre>{JSON.stringify(parsed, null, 2)}</pre>;\n                              }\n                            }\n                            return cell;\n                          } catch {\n                            return cell;\n                          }\n                        })()}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          );\n        }\n      } catch {}\n    }\n    // Fallback: plain text (with newlines)\n    return msg.text.split('\\n').map((line, i) => (\n      <div key={i}>{line}</div>\n    ));\n  };\n\n  return (\n    <>\n      <div style={{ background: 'linear-gradient(to bottom right, #f7faff, #e2ecf4)', minHeight: '100vh' }}>\n        <button\n          className=\"chatbot-toggler modern-toggler\"\n          onClick={() => setIsOpen(!isOpen)}\n          aria-label=\"Toggle chatbot\"\n          style={{ position: 'fixed', right: '20px', bottom: '20px', zIndex: 10000 }}>\n          {isOpen ? '✖' : <img src={ChatbotIcon} alt=\"Chatbot\" style={{ width: 48, height: 48 }} />}\n        </button>\n        {isOpen && (\n          <div\n            className={\n              `chatbot modern-chatbot` +\n              (darkMode ? ' dark-mode' : '') +\n              (isExpanded ? ' expanded' : ' collapsed')\n            }\n          >\n            <header className=\"chatbot-header\">\n              <span style={{ fontWeight: 600 }}>\n                Field Insights <span style={{ color: '#6b38fb' }}>Assistant</span>\n              </span>\n              <div className=\"header-actions\">\n                {/* Theme toggle */}\n                <button\n                  onClick={toggleTheme}\n                  title=\"Toggle theme\"\n                  className=\"header-action-btn\"\n                  aria-label=\"Toggle theme\"\n                >\n                  {darkMode ? (\n                    <svg width=\"23\" height=\"23\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <circle cx=\"12\" cy=\"12\" r=\"5\" fill=\"#7c3aed\" />\n                      <g stroke=\"#7c3aed\" strokeWidth=\"2\">\n                        <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"5\" />\n                        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"22\" />\n                        <line x1=\"4.22\" y1=\"4.22\" x2=\"6.34\" y2=\"6.34\" />\n                        <line x1=\"17.66\" y1=\"17.66\" x2=\"19.78\" y2=\"19.78\" />\n                        <line x1=\"2\" y1=\"12\" x2=\"5\" y2=\"12\" />\n                        <line x1=\"19\" y1=\"12\" x2=\"22\" y2=\"12\" />\n                        <line x1=\"4.22\" y1=\"19.78\" x2=\"6.34\" y2=\"17.66\" />\n                        <line x1=\"17.66\" y1=\"6.34\" x2=\"19.78\" y2=\"4.22\" />\n                      </g>\n                    </svg>\n                  ) : (\n                    <svg width=\"23\" height=\"23\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <path d=\"M21 12.79A9 9 0 1111.21 3a7 7 0 0010.02 9.79z\" fill=\"#7c3aed\" />\n                    </svg>\n                  )}\n                </button>\n                {/* Refresh */}\n                <button\n                  onClick={() => {\n                    // Rotate suggestions\n                    const newIndex = (suggestionIndex + 4) % HARDCODED_SUGGESTIONS.length;\n                    setSuggestionIndex(newIndex);\n                    localStorage.setItem('suggestionIndex', newIndex.toString());\n                    setMessages([{ role: 'assistant', text: 'Hello 👋! How may I assist you?' }]);\n                    localStorage.removeItem('chatMessages');\n                    setFeedback({});\n                  }}\n                  title=\"Clear chat\"\n                  className=\"header-action-btn\"\n                  aria-label=\"Clear chat\"\n                >\n                  <svg width=\"23\" height=\"23\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                    <path d=\"M4.93 4.93a10 10 0 1014.14 0M23 4v6h-6\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                  </svg>\n                </button>\n                {/* Expand/Collapse */}\n                <button\n                  onClick={() => setIsExpanded((prev) => !prev)}\n                  title={isExpanded ? 'Collapse window' : 'Expand window'}\n                  className=\"header-action-btn\"\n                  aria-label={isExpanded ? 'Collapse window' : 'Expand window'}\n                >\n                  {isExpanded ? (\n                    <svg width=\"23\" height=\"23\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"8 3 3 3 3 8\" />\n                      <line x1=\"3\" y1=\"3\" x2=\"10\" y2=\"10\" />\n                      <polyline points=\"16 21 21 21 21 16\" />\n                      <line x1=\"21\" y1=\"21\" x2=\"14\" y2=\"14\" />\n                    </svg>\n                  ) : (\n                    <svg width=\"23\" height=\"23\" fill=\"none\" stroke=\"#7c3aed\" strokeWidth=\"2.1\" viewBox=\"0 0 24 24\">\n                      <polyline points=\"15 3 21 3 21 9\" />\n                      <line x1=\"21\" y1=\"3\" x2=\"14\" y2=\"10\" />\n                      <polyline points=\"9 21 3 21 3 15\" />\n                      <line x1=\"3\" y1=\"21\" x2=\"10\" y2=\"14\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n            </header>\n            <ul className=\"chatbox\" ref={chatRef}>\n              {messages.map((msg, idx) => (\n                <li\n                  key={idx}\n                  className={`chat ${msg.role === 'user' ? 'outgoing' : 'incoming'}`}\n                  style={{\n                    justifyContent: msg.role === 'user' ? 'flex-end' : 'flex-start',\n                    animation: 'fadeIn 0.25s cubic-bezier(.36,1.7,.72,.97)'\n                  }}\n                >\n                  <div\n                    className={`chat-bubble ${msg.role}`}\n                    style={{\n                      background: msg.role === 'user'\n                        ? 'linear-gradient(95deg, #7c3aed 60%, #a78bfa 100%)'\n                        : 'linear-gradient(135deg, #f0f4ff, #e9e8fe)',\n                      color: msg.role === 'user' ? '#fff' : '#23234a',\n                      borderTopRightRadius: msg.role === 'user' ? 22 : 16,\n                      borderTopLeftRadius: msg.role === 'assistant' ? 22 : 16,\n                      alignSelf: msg.role === 'user' ? 'flex-end' : 'flex-start',\n                      position: 'relative'\n                    }}\n                  >\n                    {renderChatBubbleContent(msg)}\n                  </div>\n                  {msg.role === 'assistant' && (\n                    <div className=\"feedback-row\">\n                      {feedback[idx] === undefined && (\n                        <>\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'up')}\n                            aria-label=\"Thumbs up\"\n                          >👍</button>\n                          <button\n                            className=\"feedback-btn\"\n                            onClick={() => handleFeedback(idx, 'down')}\n                            aria-label=\"Thumbs down\"\n                          >👎</button>\n                        </>\n                      )}\n                      {feedback[idx] === 'up' && (\n                        <button className=\"feedback-btn selected\" aria-label=\"Thumbs up\">👍</button>\n                      )}\n                      {feedback[idx] === 'down' && (\n                        <button className=\"feedback-btn selected\" aria-label=\"Thumbs down\">👎</button>\n                      )}\n                    </div>\n                  )}\n                </li>\n              ))}\n            </ul>\n            <div className=\"suggestions\">\n              {visibleSuggestions.map((s, i) => (\n                <button\n                  key={i}\n                  onClick={() => handleSendMessage(s)}\n                  className=\"suggestion-button\"\n                >\n                  {s}\n                </button>\n              ))}\n            </div>\n            <div className=\"chat-input\">\n              <textarea\n                ref={inputRef}\n                placeholder=\"Ask me anything...\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSendMessage(input)}\n                rows={2}\n              ></textarea>\n              <button onClick={() => handleSendMessage(input)} title=\"Send message\" className=\"send-button\">\n                Send\n              </button>\n            </div>\n            <footer className=\"chatbot-footer\">\n              Powered by <img src={ZSIcon} alt=\"ZS Associates\" />\n            </footer>\n            {toast && <div className=\"toast\">{toast}</div>}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"kIAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,MAAO,qBAAqB,CAC5B,MAAO,CAAAC,WAAW,KAAM,+BAA+B,CACvD,MAAO,CAAAC,MAAM,KAAM,6BAA6B,CAEhD;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBACA,KAAM,CAAAC,iBAAiB,CAAG,CAC1B,sDAAsD,CAAE,oEAAoE,CAC5H,2BAA2B,CAAE,8GAA8G,CAC3I,wDAAwD,CAAE,0EAA0E,CACpI,2DAA2D,CAAE,kFAAkF,CAC/I,qDAAqD,CAAE,0FAA0F,CACjJ,oBAAoB,CAAE,kNAAkN,CACxO,qDAAqD,CAAE,gHAAgH,CACvK,6CAA6C,CAAE,2FAC/C,CAAC,CAED,KAAM,CAAAC,qBAAqB,CAAG,CAC9B,sDAAsD,CACtD,2BAA2B,CAC3B,wDAAwD,CACxD,2DAA2D,CAC3D,qDAAqD,CACrD,oBAAoB,CACpB,qDAAqD,CACrD,6CAA6C,CAC5C,CAED;AACA,QAAS,CAAAC,uBAAuBA,CAACC,YAAY,CAAE,CAC7C,GAAI,CACF,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAAC,CAErC,GAAIC,IAAI,CAACG,KAAK,CAAE,MAAO,WAAW,CAAGH,IAAI,CAACG,KAAK,CAC/C,GACEH,IAAI,CAACI,IAAI,EACTJ,IAAI,CAACI,IAAI,GAAK,QAAQ,GACrB,CAACJ,IAAI,CAACK,OAAO,EAAI,CAACL,IAAI,CAACK,OAAO,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,uBAAuB,CAAC,CAAC,CAChF,CACA,uBAAAC,MAAA,CAAmBR,IAAI,CAACI,IAAI,QAAAI,MAAA,CAAMR,IAAI,CAACK,OAAO,EAChD,CACA,GAAIL,IAAI,CAACK,OAAO,CAAE,MAAO,CAAAL,IAAI,CAACK,OAAO,CACrC,MAAO,gBAAgB,CACzB,CAAE,MAAAI,OAAA,CAAM,CACN,MAAO,CAAAV,YAAY,EAAI,6BAA6B,CACtD,CACF,CAEA,KAAM,CAAAW,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGzB,QAAQ,CAAC,IAAM,CAC7C,KAAM,CAAA0B,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAClD,GAAIF,KAAK,CAAE,MAAO,CAAAZ,IAAI,CAACC,KAAK,CAACW,KAAK,CAAC,CACnC,MAAO,CAAC,CAAEG,IAAI,CAAE,WAAW,CAAEC,IAAI,CAAE,iCAAkC,CAAC,CAAC,CACzE,CAAC,CAAC,CAEF,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGhC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC5C;AACA,KAAM,CAACiC,eAAe,CAAEC,kBAAkB,CAAC,CAAGlC,QAAQ,CAAC,IAAM,CAC3D,KAAM,CAAAmC,MAAM,CAAGR,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CACtD,MAAO,CAAAO,MAAM,CAAGC,QAAQ,CAACD,MAAM,CAAE,EAAE,CAAC,CAAG,CAAC,CAC1C,CAAC,CAAC,CAEF,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGtC,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACuC,MAAM,CAAEC,SAAS,CAAC,CAAGxC,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAACyC,QAAQ,CAAEC,WAAW,CAAC,CAAG1C,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAAC2C,UAAU,CAAEC,aAAa,CAAC,CAAG5C,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAAC6C,KAAK,CAAEC,QAAQ,CAAC,CAAG9C,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAA+C,OAAO,CAAGhD,MAAM,CAAC,CAAC,CACxB,KAAM,CAAAiD,QAAQ,CAAGjD,MAAM,CAAC,CAAC,CAEzB;AACA,KAAM,CAAAkD,kBAAkB,CAAGC,KAAK,CAAC,CAAC,CAAC,CAChCC,IAAI,CAAC,CAAC,CAAC,CACPC,GAAG,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK5C,qBAAqB,CAAC,CAACuB,eAAe,CAAGqB,CAAC,EAAI5C,qBAAqB,CAAC6C,MAAM,CAAC,CAAC,CAE7FzD,SAAS,CAAC,IAAM,KAAA0D,gBAAA,CACd,CAAAA,gBAAA,CAAAT,OAAO,CAACU,OAAO,UAAAD,gBAAA,iBAAfA,gBAAA,CAAiBE,QAAQ,CAAC,CAAEC,GAAG,CAAEZ,OAAO,CAACU,OAAO,CAACG,YAAY,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CACtF,CAAC,CAAE,CAACrC,QAAQ,CAAC,CAAC,CAEd;AACA,KAAM,CAAAsC,iBAAiB,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC/C,GAAI,CAACA,WAAW,CAACC,IAAI,CAAC,CAAC,CAAE,OACzB,KAAM,CAAAC,WAAW,CAAG,CAAC,GAAGzC,QAAQ,CAAE,CAAEK,IAAI,CAAE,MAAM,CAAEC,IAAI,CAAEiC,WAAY,CAAC,CAAC,CACtEtC,WAAW,CAACwC,WAAW,CAAC,CACxBtC,YAAY,CAACuC,OAAO,CAAC,cAAc,CAAEpD,IAAI,CAACqD,SAAS,CAACF,WAAW,CAAC,CAAC,CACjE3B,QAAQ,CAAC,EAAE,CAAC,CAEZ;AACA,KAAM,CAAA8B,OAAO,CAAGL,WAAW,CAACC,IAAI,CAAC,CAAC,CAAC7C,WAAW,CAAC,CAAC,CAChD,KAAM,CAAAkD,UAAU,CAAGC,MAAM,CAACC,IAAI,CAAC9D,iBAAiB,CAAC,CAAC+D,IAAI,CACpDC,CAAC,EAAIL,OAAO,CAAChD,QAAQ,CAACqD,CAAC,CACzB,CAAC,CACD,GAAIJ,UAAU,CAAE,CACd,KAAM,CAAAK,eAAe,CAAGjE,iBAAiB,CAAC4D,UAAU,CAAC,CACrD,KAAM,CAAAM,eAAe,CAAG,CAAC,GAAGV,WAAW,CAAE,CAAEpC,IAAI,CAAE,WAAW,CAAEC,IAAI,CAAE4C,eAAgB,CAAC,CAAC,CACtFjD,WAAW,CAACkD,eAAe,CAAC,CAC5BhD,YAAY,CAACuC,OAAO,CAAC,cAAc,CAAEpD,IAAI,CAACqD,SAAS,CAACQ,eAAe,CAAC,CAAC,CACrE,OACF,CAEA;AACA,KAAM,CAAAC,WAAW,CAAG,CAAC,GAAGX,WAAW,CAAE,CAAEpC,IAAI,CAAE,WAAW,CAAEC,IAAI,CAAE,yBAA0B,CAAC,CAAC,CAC5FL,WAAW,CAACmD,WAAW,CAAC,CACxBjD,YAAY,CAACuC,OAAO,CAAC,cAAc,CAAEpD,IAAI,CAACqD,SAAS,CAACS,WAAW,CAAC,CAAC,CAEjE;AACA,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,qCAAqC,CAAE,CAClEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEnE,IAAI,CAACqD,SAAS,CAAC,CAAEe,SAAS,CAAEnB,WAAY,CAAC,CACjD,CAAC,CAAC,CACF,KAAM,CAAAnD,YAAY,CAAG,KAAM,CAAAiE,QAAQ,CAAC/C,IAAI,CAAC,CAAC,CAE1C;AACA,KAAM,CAAAqD,SAAS,CAAGxE,uBAAuB,CAACC,YAAY,CAAC,CACvD,KAAM,CAAA+D,eAAe,CAAG,CAAC,GAAGV,WAAW,CAAE,CAAEpC,IAAI,CAAE,WAAW,CAAEC,IAAI,CAAEqD,SAAS,CAAEC,OAAO,CAAExE,YAAa,CAAC,CAAC,CACvGa,WAAW,CAACkD,eAAe,CAAC,CAC5BhD,YAAY,CAACuC,OAAO,CAAC,cAAc,CAAEpD,IAAI,CAACqD,SAAS,CAACQ,eAAe,CAAC,CAAC,CACvE,CAAE,MAAOU,GAAG,CAAE,CACZ,KAAM,CAAAF,SAAS,CAAG,kCAAkC,CACpD,KAAM,CAAAR,eAAe,CAAG,CAAC,GAAGV,WAAW,CAAE,CAAEpC,IAAI,CAAE,WAAW,CAAEC,IAAI,CAAEqD,SAAU,CAAC,CAAC,CAChF1D,WAAW,CAACkD,eAAe,CAAC,CAC5BhD,YAAY,CAACuC,OAAO,CAAC,cAAc,CAAEpD,IAAI,CAACqD,SAAS,CAACQ,eAAe,CAAC,CAAC,CACvE,CACF,CAAC,CAED;AACA,KAAM,CAAAW,cAAc,CAAGA,CAACC,GAAG,CAAEC,IAAI,GAAK,CACpCxD,WAAW,CAACyD,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAE,CAACF,GAAG,EAAGC,IAAI,EAAG,CAAC,CAC/C1C,QAAQ,CAAC,2BAA2B,CAAC,CACrC6C,UAAU,CAAC,IAAM7C,QAAQ,CAAC,EAAE,CAAC,CAAE,IAAI,CAAC,CACtC,CAAC,CAED,KAAM,CAAA8C,WAAW,CAAGA,CAAA,GAAMlD,WAAW,CAAC+C,IAAI,EAAI,CAACA,IAAI,CAAC,CAEpD;AACA,KAAM,CAAAI,uBAAuB,CAAIC,GAAG,EAAK,CACvC;AACA,GAAIA,GAAG,CAACV,OAAO,CAAE,CACf,GAAI,CACF,KAAM,CAAAvE,IAAI,CAAGC,IAAI,CAACC,KAAK,CAAC+E,GAAG,CAACV,OAAO,CAAC,CACpC,KAAM,CAAAW,OAAO,CACVlF,IAAI,CAACmF,iBAAiB,EAAInF,IAAI,CAACmF,iBAAiB,CAACC,OAAO,EAAIpF,IAAI,CAACmF,iBAAiB,CAACC,OAAO,CAAC7C,GAAG,CAAC8C,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,EAC/GtF,IAAI,CAACoF,OAAO,EAAIpF,IAAI,CAACoF,OAAO,CAAC7C,GAAG,CAAC8C,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAE,EAClDtF,IAAI,CAACuF,OAAO,EAAIvF,IAAI,CAACuF,OAAO,CAAChD,GAAG,CAAC8C,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAE,EAClDtF,IAAI,CAACkF,OAAO,EAAIlF,IAAI,CAACkF,OAAO,CAAC3C,GAAG,CAAC8C,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAE,CACrD,KAAM,CAAAE,IAAI,CAAGxF,IAAI,CAACwF,IAAI,CACtB,GAAInD,KAAK,CAACoD,OAAO,CAACP,OAAO,CAAC,EAAIA,OAAO,CAACxC,MAAM,CAAG,CAAC,EAAIL,KAAK,CAACoD,OAAO,CAACD,IAAI,CAAC,CAAE,CACvE,mBACE/F,KAAA,UAAOiG,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAChCpG,IAAA,UAAAoG,QAAA,cACEpG,IAAA,OAAAoG,QAAA,CACGT,OAAO,CAAC3C,GAAG,CAAC,CAACqD,CAAC,CAAEnD,CAAC,gBAAKlD,IAAA,OAAAoG,QAAA,CAAaC,CAAC,EAALnD,CAAU,CAAC,CAAC,CAC1C,CAAC,CACA,CAAC,cACRlD,IAAA,UAAAoG,QAAA,CACGH,IAAI,CAAC9C,MAAM,GAAK,CAAC,cAChBnD,IAAA,OAAAoG,QAAA,cAAIpG,IAAA,OAAIsG,OAAO,CAAEX,OAAO,CAACxC,MAAO,CAACoD,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAQ,CAAEC,KAAK,CAAE,MAAO,CAAE,CAAAL,QAAA,CAAC,cAAY,CAAI,CAAC,CAAI,CAAC,CACpGH,IAAI,CAACjD,GAAG,CAAC,CAAC0D,GAAG,CAAEC,IAAI,gBACrB3G,IAAA,OAAAoG,QAAA,CACGM,GAAG,CAAC1D,GAAG,CAAC,CAAC4D,IAAI,CAAEC,IAAI,gBAClB7G,IAAA,OAAeuG,KAAK,CAAE,CACpBO,UAAU,CAAE,UAAU,CACtBC,UAAU,CAAE,MAAO,CAAAH,IAAI,GAAK,QAAQ,EAAIA,IAAI,CAAChD,IAAI,CAAC,CAAC,CAACoD,UAAU,CAAC,GAAG,CAAC,CAAG,WAAW,CAAGC,SACtF,CAAE,CAAAb,QAAA,CACC,CAAC,IAAM,CACN,GAAI,CACF,GAAI,MAAO,CAAAQ,IAAI,GAAK,QAAQ,GAAKA,IAAI,CAAChD,IAAI,CAAC,CAAC,CAACoD,UAAU,CAAC,GAAG,CAAC,EAAIJ,IAAI,CAAChD,IAAI,CAAC,CAAC,CAACoD,UAAU,CAAC,GAAG,CAAC,CAAC,CAAE,CAC5F,KAAM,CAAAE,MAAM,CAAGxG,IAAI,CAACC,KAAK,CAACiG,IAAI,CAAC,CAC/B,GAAI9D,KAAK,CAACoD,OAAO,CAACgB,MAAM,CAAC,CAAE,CACzB,mBACElH,IAAA,OAAIuG,KAAK,CAAE,CAAEY,WAAW,CAAE,MAAM,CAAEC,MAAM,CAAE,CAAE,CAAE,CAAAhB,QAAA,CAC3Cc,MAAM,CAAClE,GAAG,CAAC,CAACqE,IAAI,CAAElC,GAAG,gBAAKnF,IAAA,OAAAoG,QAAA,CAAeiB,IAAI,EAAVlC,GAAe,CAAC,CAAC,CACnD,CAAC,CAET,CACA,GAAI,MAAO,CAAA+B,MAAM,GAAK,QAAQ,CAAE,CAC9B,mBAAOlH,IAAA,QAAAoG,QAAA,CAAM1F,IAAI,CAACqD,SAAS,CAACmD,MAAM,CAAE,IAAI,CAAE,CAAC,CAAC,CAAM,CAAC,CACrD,CACF,CACA,MAAO,CAAAN,IAAI,CACb,CAAE,MAAAU,QAAA,CAAM,CACN,MAAO,CAAAV,IAAI,CACb,CACF,CAAC,EAAE,CAAC,EAvBGC,IAwBL,CACL,CAAC,EA3BKF,IA4BL,CACL,CAAC,CACG,CAAC,EACH,CAAC,CAEZ,CACF,CAAE,MAAAY,QAAA,CAAM,CAAC,CACX,CACA;AACA,MAAO,CAAA7B,GAAG,CAAChE,IAAI,CAAC8F,KAAK,CAAC,IAAI,CAAC,CAACxE,GAAG,CAAC,CAACyE,IAAI,CAAEvE,CAAC,gBACtClD,IAAA,QAAAoG,QAAA,CAAcqB,IAAI,EAARvE,CAAc,CACzB,CAAC,CACJ,CAAC,CAED,mBACElD,IAAA,CAAAI,SAAA,EAAAgG,QAAA,cACElG,KAAA,QAAKqG,KAAK,CAAE,CAAEmB,UAAU,CAAE,oDAAoD,CAAEC,SAAS,CAAE,OAAQ,CAAE,CAAAvB,QAAA,eACnGpG,IAAA,WACEmG,SAAS,CAAC,gCAAgC,CAC1CyB,OAAO,CAAEA,CAAA,GAAMxF,SAAS,CAAC,CAACD,MAAM,CAAE,CAClC,aAAW,gBAAgB,CAC3BoE,KAAK,CAAE,CAAEsB,QAAQ,CAAE,OAAO,CAAEC,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,MAAM,CAAEC,MAAM,CAAE,KAAM,CAAE,CAAA5B,QAAA,CAC1EjE,MAAM,CAAG,GAAG,cAAGnC,IAAA,QAAKiI,GAAG,CAAEpI,WAAY,CAACqI,GAAG,CAAC,SAAS,CAAC3B,KAAK,CAAE,CAAE4B,KAAK,CAAE,EAAE,CAAEC,MAAM,CAAE,EAAG,CAAE,CAAE,CAAC,CACnF,CAAC,CACRjG,MAAM,eACLjC,KAAA,QACEiG,SAAS,CACP,0BACC9D,QAAQ,CAAG,YAAY,CAAG,EAAE,CAAC,EAC7BE,UAAU,CAAG,WAAW,CAAG,YAAY,CACzC,CAAA6D,QAAA,eAEDlG,KAAA,WAAQiG,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAChClG,KAAA,SAAMqG,KAAK,CAAE,CAAE8B,UAAU,CAAE,GAAI,CAAE,CAAAjC,QAAA,EAAC,iBACjB,cAAApG,IAAA,SAAMuG,KAAK,CAAE,CAAEE,KAAK,CAAE,SAAU,CAAE,CAAAL,QAAA,CAAC,WAAS,CAAM,CAAC,EAC9D,CAAC,cACPlG,KAAA,QAAKiG,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAE7BpG,IAAA,WACE4H,OAAO,CAAEpC,WAAY,CACrB8C,KAAK,CAAC,cAAc,CACpBnC,SAAS,CAAC,mBAAmB,CAC7B,aAAW,cAAc,CAAAC,QAAA,CAExB/D,QAAQ,cACPnC,KAAA,QAAKiI,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACG,OAAO,CAAC,WAAW,CAACxF,IAAI,CAAC,MAAM,CAAAqD,QAAA,eACzDpG,IAAA,WAAQwI,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAACC,CAAC,CAAC,GAAG,CAAC3F,IAAI,CAAC,SAAS,CAAE,CAAC,cAC/C7C,KAAA,MAAGyI,MAAM,CAAC,SAAS,CAACC,WAAW,CAAC,GAAG,CAAAxC,QAAA,eACjCpG,IAAA,SAAM6I,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,GAAG,CAACC,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,GAAG,CAAE,CAAC,cACtChJ,IAAA,SAAM6I,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAAE,CAAC,cACxChJ,IAAA,SAAM6I,EAAE,CAAC,MAAM,CAACC,EAAE,CAAC,MAAM,CAACC,EAAE,CAAC,MAAM,CAACC,EAAE,CAAC,MAAM,CAAE,CAAC,cAChDhJ,IAAA,SAAM6I,EAAE,CAAC,OAAO,CAACC,EAAE,CAAC,OAAO,CAACC,EAAE,CAAC,OAAO,CAACC,EAAE,CAAC,OAAO,CAAE,CAAC,cACpDhJ,IAAA,SAAM6I,EAAE,CAAC,GAAG,CAACC,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,GAAG,CAACC,EAAE,CAAC,IAAI,CAAE,CAAC,cACtChJ,IAAA,SAAM6I,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAAE,CAAC,cACxChJ,IAAA,SAAM6I,EAAE,CAAC,MAAM,CAACC,EAAE,CAAC,OAAO,CAACC,EAAE,CAAC,MAAM,CAACC,EAAE,CAAC,OAAO,CAAE,CAAC,cAClDhJ,IAAA,SAAM6I,EAAE,CAAC,OAAO,CAACC,EAAE,CAAC,MAAM,CAACC,EAAE,CAAC,OAAO,CAACC,EAAE,CAAC,MAAM,CAAE,CAAC,EACjD,CAAC,EACD,CAAC,cAENhJ,IAAA,QAAKmI,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACG,OAAO,CAAC,WAAW,CAACxF,IAAI,CAAC,MAAM,CAAAqD,QAAA,cACzDpG,IAAA,SAAMiJ,CAAC,CAAC,+CAA+C,CAAClG,IAAI,CAAC,SAAS,CAAE,CAAC,CACtE,CACN,CACK,CAAC,cAET/C,IAAA,WACE4H,OAAO,CAAEA,CAAA,GAAM,CACb;AACA,KAAM,CAAAsB,QAAQ,CAAG,CAACrH,eAAe,CAAG,CAAC,EAAIvB,qBAAqB,CAAC6C,MAAM,CACrErB,kBAAkB,CAACoH,QAAQ,CAAC,CAC5B3H,YAAY,CAACuC,OAAO,CAAC,iBAAiB,CAAEoF,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAAC,CAC5D9H,WAAW,CAAC,CAAC,CAAEI,IAAI,CAAE,WAAW,CAAEC,IAAI,CAAE,iCAAkC,CAAC,CAAC,CAAC,CAC7EH,YAAY,CAAC6H,UAAU,CAAC,cAAc,CAAC,CACvCxH,WAAW,CAAC,CAAC,CAAC,CAAC,CACjB,CAAE,CACF0G,KAAK,CAAC,YAAY,CAClBnC,SAAS,CAAC,mBAAmB,CAC7B,aAAW,YAAY,CAAAC,QAAA,cAEvBpG,IAAA,QAAKmI,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACrF,IAAI,CAAC,MAAM,CAAC4F,MAAM,CAAC,SAAS,CAACC,WAAW,CAAC,KAAK,CAACL,OAAO,CAAC,WAAW,CAAAnC,QAAA,cAC5FpG,IAAA,SAAMiJ,CAAC,CAAC,wCAAwC,CAACI,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAAE,CAAC,CAC7F,CAAC,CACA,CAAC,cAETtJ,IAAA,WACE4H,OAAO,CAAEA,CAAA,GAAMpF,aAAa,CAAE6C,IAAI,EAAK,CAACA,IAAI,CAAE,CAC9CiD,KAAK,CAAE/F,UAAU,CAAG,iBAAiB,CAAG,eAAgB,CACxD4D,SAAS,CAAC,mBAAmB,CAC7B,aAAY5D,UAAU,CAAG,iBAAiB,CAAG,eAAgB,CAAA6D,QAAA,CAE5D7D,UAAU,cACTrC,KAAA,QAAKiI,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACrF,IAAI,CAAC,MAAM,CAAC4F,MAAM,CAAC,SAAS,CAACC,WAAW,CAAC,KAAK,CAACL,OAAO,CAAC,WAAW,CAAAnC,QAAA,eAC5FpG,IAAA,aAAUuJ,MAAM,CAAC,aAAa,CAAE,CAAC,cACjCvJ,IAAA,SAAM6I,EAAE,CAAC,GAAG,CAACC,EAAE,CAAC,GAAG,CAACC,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAAE,CAAC,cACtChJ,IAAA,aAAUuJ,MAAM,CAAC,mBAAmB,CAAE,CAAC,cACvCvJ,IAAA,SAAM6I,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAAE,CAAC,EACrC,CAAC,cAEN9I,KAAA,QAAKiI,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACrF,IAAI,CAAC,MAAM,CAAC4F,MAAM,CAAC,SAAS,CAACC,WAAW,CAAC,KAAK,CAACL,OAAO,CAAC,WAAW,CAAAnC,QAAA,eAC5FpG,IAAA,aAAUuJ,MAAM,CAAC,gBAAgB,CAAE,CAAC,cACpCvJ,IAAA,SAAM6I,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,GAAG,CAACC,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAAE,CAAC,cACvChJ,IAAA,aAAUuJ,MAAM,CAAC,gBAAgB,CAAE,CAAC,cACpCvJ,IAAA,SAAM6I,EAAE,CAAC,GAAG,CAACC,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAACC,EAAE,CAAC,IAAI,CAAE,CAAC,EACpC,CACN,CACK,CAAC,EACN,CAAC,EACA,CAAC,cACThJ,IAAA,OAAImG,SAAS,CAAC,SAAS,CAACqD,GAAG,CAAE7G,OAAQ,CAAAyD,QAAA,CAClChF,QAAQ,CAAC4B,GAAG,CAAC,CAAC0C,GAAG,CAAEP,GAAG,gBACrBjF,KAAA,OAEEiG,SAAS,SAAAlF,MAAA,CAAUyE,GAAG,CAACjE,IAAI,GAAK,MAAM,CAAG,UAAU,CAAG,UAAU,CAAG,CACnE8E,KAAK,CAAE,CACLkD,cAAc,CAAE/D,GAAG,CAACjE,IAAI,GAAK,MAAM,CAAG,UAAU,CAAG,YAAY,CAC/DiI,SAAS,CAAE,4CACb,CAAE,CAAAtD,QAAA,eAEFpG,IAAA,QACEmG,SAAS,gBAAAlF,MAAA,CAAiByE,GAAG,CAACjE,IAAI,CAAG,CACrC8E,KAAK,CAAE,CACLmB,UAAU,CAAEhC,GAAG,CAACjE,IAAI,GAAK,MAAM,CAC3B,mDAAmD,CACnD,2CAA2C,CAC/CgF,KAAK,CAAEf,GAAG,CAACjE,IAAI,GAAK,MAAM,CAAG,MAAM,CAAG,SAAS,CAC/CkI,oBAAoB,CAAEjE,GAAG,CAACjE,IAAI,GAAK,MAAM,CAAG,EAAE,CAAG,EAAE,CACnDmI,mBAAmB,CAAElE,GAAG,CAACjE,IAAI,GAAK,WAAW,CAAG,EAAE,CAAG,EAAE,CACvDoI,SAAS,CAAEnE,GAAG,CAACjE,IAAI,GAAK,MAAM,CAAG,UAAU,CAAG,YAAY,CAC1DoG,QAAQ,CAAE,UACZ,CAAE,CAAAzB,QAAA,CAEDX,uBAAuB,CAACC,GAAG,CAAC,CAC1B,CAAC,CACLA,GAAG,CAACjE,IAAI,GAAK,WAAW,eACvBvB,KAAA,QAAKiG,SAAS,CAAC,cAAc,CAAAC,QAAA,EAC1BzE,QAAQ,CAACwD,GAAG,CAAC,GAAK8B,SAAS,eAC1B/G,KAAA,CAAAE,SAAA,EAAAgG,QAAA,eACEpG,IAAA,WACEmG,SAAS,CAAC,cAAc,CACxByB,OAAO,CAAEA,CAAA,GAAM1C,cAAc,CAACC,GAAG,CAAE,IAAI,CAAE,CACzC,aAAW,WAAW,CAAAiB,QAAA,CACvB,cAAE,CAAQ,CAAC,cACZpG,IAAA,WACEmG,SAAS,CAAC,cAAc,CACxByB,OAAO,CAAEA,CAAA,GAAM1C,cAAc,CAACC,GAAG,CAAE,MAAM,CAAE,CAC3C,aAAW,aAAa,CAAAiB,QAAA,CACzB,cAAE,CAAQ,CAAC,EACZ,CACH,CACAzE,QAAQ,CAACwD,GAAG,CAAC,GAAK,IAAI,eACrBnF,IAAA,WAAQmG,SAAS,CAAC,uBAAuB,CAAC,aAAW,WAAW,CAAAC,QAAA,CAAC,cAAE,CAAQ,CAC5E,CACAzE,QAAQ,CAACwD,GAAG,CAAC,GAAK,MAAM,eACvBnF,IAAA,WAAQmG,SAAS,CAAC,uBAAuB,CAAC,aAAW,aAAa,CAAAC,QAAA,CAAC,cAAE,CAAQ,CAC9E,EACE,CACN,GA7CIjB,GA8CH,CACL,CAAC,CACA,CAAC,cACLnF,IAAA,QAAKmG,SAAS,CAAC,aAAa,CAAAC,QAAA,CACzBvD,kBAAkB,CAACG,GAAG,CAAC,CAAC8G,CAAC,CAAE5G,CAAC,gBAC3BlD,IAAA,WAEE4H,OAAO,CAAEA,CAAA,GAAMlE,iBAAiB,CAACoG,CAAC,CAAE,CACpC3D,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAE5B0D,CAAC,EAJG5G,CAKC,CACT,CAAC,CACC,CAAC,cACNhD,KAAA,QAAKiG,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpG,IAAA,aACEwJ,GAAG,CAAE5G,QAAS,CACdmH,WAAW,CAAC,oBAAoB,CAChCC,KAAK,CAAE/H,KAAM,CACbgI,QAAQ,CAAGC,CAAC,EAAKhI,QAAQ,CAACgI,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CI,SAAS,CAAGF,CAAC,EAAKA,CAAC,CAACG,GAAG,GAAK,OAAO,EAAI,CAACH,CAAC,CAACI,QAAQ,EAAI5G,iBAAiB,CAACzB,KAAK,CAAE,CAC/EsI,IAAI,CAAE,CAAE,CACC,CAAC,cACZvK,IAAA,WAAQ4H,OAAO,CAAEA,CAAA,GAAMlE,iBAAiB,CAACzB,KAAK,CAAE,CAACqG,KAAK,CAAC,cAAc,CAACnC,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,MAE9F,CAAQ,CAAC,EACN,CAAC,cACNlG,KAAA,WAAQiG,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAAC,aACtB,cAAApG,IAAA,QAAKiI,GAAG,CAAEnI,MAAO,CAACoI,GAAG,CAAC,eAAe,CAAE,CAAC,EAC7C,CAAC,CACRzF,KAAK,eAAIzC,IAAA,QAAKmG,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAE3D,KAAK,CAAM,CAAC,EAC3C,CACN,EACE,CAAC,CACN,CAAC,CAEP,CAAC,CAED,cAAe,CAAAtB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}